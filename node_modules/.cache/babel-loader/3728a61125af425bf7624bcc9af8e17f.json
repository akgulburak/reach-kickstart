{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), [ctc0], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    return sim_r;\n  });\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  stdlib.protect(ctc0, await interact.announce(v19, stdlib.checkedBigNumberify('./index.rsh:36:66:decimal', stdlib.UInt_max, 4)), {\n    at: './index.rsh:36:60:application',\n    fs: ['at ./index.rsh:34:23:application call to [unknown function] (defined at: ./index.rsh:34:27:function exp)'],\n    msg: 'announce',\n    who: 'Admin'\n  });\n  const txn2 = await ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc1], [v19, v21, v19], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v27] = txn2.data;\n    const v30 = txn2.time;\n    const v26 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v29 = stdlib.addressEq(v19, v26);\n    stdlib.assert(v29, {\n      at: './index.rsh:38:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    const v56 = [v27, v27];\n    const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v59 = [v57, v57];\n    const v53 = v56;\n    const v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n    const v55 = v59;\n    const v392 = v30;\n    const v393 = v21;\n    const v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      return v62;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n      const v395 = v392;\n      const v396 = v393;\n      const v397 = v394;\n\n      if ((() => {\n        const v336 = stdlib.gt(v328, v396);\n        return v336;\n      })()) {\n        const v366 = stdlib.sub(v328, v396);\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n        const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v397,\n          kind: 'from',\n          to: v374,\n          tok: undefined\n        });\n        sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v62;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      return v313;\n    }, false);\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    continue;\n  }\n\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n\n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    return v336;\n  })()) {\n    const v366 = stdlib.sub(v328, v396);\n    const txn3 = await ctc.recv(8, 1, [ctc0], false, v366);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc1, ctc5, ctc0, ctc0, ctc0, ctc0], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n\n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n\n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            return v336;\n          })()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    } else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    }\n  }\n\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v384 = v373[stdlib.checkedBigNumberify('./index.rsh:145:55:array ref', stdlib.UInt_max, 2)];\n  const txn3 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc0], [v19, v395, v384], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, async txn3 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 6), v19, v395]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 6), v19]);\n    const [v386] = txn3.data;\n    const v389 = txn3.time;\n    const v385 = txn3.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v388 = stdlib.addressEq(v19, v385);\n    stdlib.assert(v388, {\n      at: './index.rsh:149:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v62;\n  })()) {\n    const v175 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 174));\n    const v178 = stdlib.protect(ctc1, await interact.getParams(v175), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v186 = ['None', null];\n    const v212 = v53[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v213 = v53[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v235 = stdlib.addressEq(v212, v175);\n    const v239 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v240 = [v239, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v242 = [v186, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v243 = v235 ? v240 : v242;\n    const v248 = v243[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v249 = v243[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v250;\n\n    switch (v248[0]) {\n      case 'None':\n        {\n          const v253 = stdlib.addressEq(v213, v175);\n          const v257 = stdlib.add(v249, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v258 = ['Some', v249];\n          const v259 = [v258, v249];\n          const v260 = [v248, v257];\n          const v261 = v253 ? v259 : v260;\n          v250 = v261;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v264 = v248[1];\n          v250 = v243;\n          break;\n        }\n    }\n\n    const v269 = v250[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v275;\n\n    switch (v269[0]) {\n      case 'None':\n        {\n          v275 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v279 = v269[1];\n          v275 = v279;\n          break;\n        }\n    }\n\n    const v285 = [v178, v175];\n    const txn3 = await ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v19, v53, v54, v55, v392, v394, v285], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n      const [v289] = txn3.data;\n      const v293 = txn3.time;\n      const v288 = txn3.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v297 = [v295, v54, v296];\n      const v299 = stdlib.Array_set(v55, v54, v297);\n      const v302 = stdlib.Array_set(v53, v54, v295);\n      const v315 = v53.reduce((v308, v309) => {\n        const v311 = stdlib.addressEq(v295, v309);\n        const v312 = v311 ? true : false;\n        const v313 = v308 ? v308 : v312;\n        return v313;\n      }, false);\n      const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n      const v319 = [v55, v53, v54];\n      const v320 = [v299, v302, v318];\n      const v321 = v315 ? v319 : v320;\n      const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const cv53 = v324;\n      const cv54 = v325;\n      const cv55 = v323;\n      const cv392 = v293;\n      const cv393 = v392;\n      const cv394 = v394;\n\n      (() => {\n        const v53 = cv53;\n        const v54 = cv54;\n        const v55 = cv55;\n        const v392 = cv392;\n        const v393 = cv393;\n        const v394 = cv394;\n\n        if ((() => {\n          const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          return v62;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n          const v395 = v392;\n          const v396 = v393;\n          const v397 = v394;\n\n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            return v336;\n          })()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      return v313;\n    }, false);\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    continue;\n  }\n\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n\n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    return v336;\n  })()) {\n    const v366 = stdlib.sub(v328, v396);\n    const txn3 = await ctc.recv(8, 1, [ctc1], false, v366);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n\n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n\n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            return v336;\n          })()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    } else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    }\n  }\n\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v62;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      return v313;\n    }, false);\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    continue;\n  }\n\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n\n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    return v336;\n  })()) {\n    const v366 = stdlib.sub(v328, v396);\n    const v349 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:103:48:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v350 = v349[stdlib.checkedBigNumberify('./index.rsh:111:38:array ref', stdlib.UInt_max, 1)];\n    const txn3 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397, v350], [v350, []], [ctc1], true, false, v366, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      sim_r.txns.push({\n        amt: v355,\n        kind: 'to',\n        tok: undefined\n      });\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n\n      (() => {\n        const v395 = cv395;\n        const v396 = cv396;\n        const v397 = cv397;\n\n        if ((() => {\n          const v336 = stdlib.gt(v328, v396);\n          return v336;\n        })()) {\n          const v366 = stdlib.sub(v328, v396);\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n          const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v397,\n            kind: 'from',\n            to: v374,\n            tok: undefined\n          });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n\n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n\n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            return v336;\n          })()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    } else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      continue;\n    }\n  }\n\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n  }, {\n    count: 8,\n    size: 153\n  }, null, null, null, null, {\n    count: 8,\n    size: 129\n  }, {\n    count: 12,\n    size: 249\n  }, {\n    count: 11,\n    size: 241\n  }, {\n    count: 12,\n    size: 337\n  }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:149:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:149:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 251\nload 250\n+\nstore 249\n// \"CheckPay\"\n// \"./index.rsh:103:48:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 250\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:48:dot\"\n// \"[at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:103:48:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 243\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v53\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v54\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v392\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v394\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v289\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T21\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v386\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v355\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v53\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v54\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v392\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v394\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v289\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T21\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v386\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v355\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a160408051602080820183524382528251808201845260008082529251815283518083018490529051818501528351808203850181526060909101909352825192019190912090556116ea806100826000396000f3fe6080604052600436106100595760003560e01c8063193afc73146100655780638f7a13441461007a578063a496364f1461008d578063a4f68ad2146100a0578063ad5542c4146100b3578063eb9fa41b146100c657610060565b3661006057005b600080fd5b610078610073366004611204565b6100d9565b005b6100786100883660046111f2565b6101a4565b61007861009b3660046111bb565b61051e565b6100786100ae3660046111d6565b6105c6565b6100786100c13660046111bb565b610714565b6100786100d43660046111d6565b6108bc565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b7fc32df0ce290a4082d696e286eb47ee901bff58c6d9bf2b65b404efaab9a729c78160405161015491906114d5565b60405180910390a160408051808201825233815243602080830191909152915190916101859160019184910161162d565b60408051601f1981840301815291905280516020909101206000555050565b6040516101b89060039083906020016114ff565b6040516020818303038152906040528051906020012060001c600054146101de57600080fd5b600080556101ea610e6b565b34156101f557600080fd5b6102076101c083016101a0840161119a565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156102ec5760208301816002811061026657634e487b7160e01b600052603260045260246000fd5b602002016020810190610279919061119a565b6001600160a01b0316604083015260208201516102cd5760408201516001600160a01b03166102b06101c085016101a0860161119a565b6001600160a01b0316146102c55760006102c8565b60015b6102d3565b81602001515b15156020830152806102e481611683565b91505061023a565b50602081015115156060820152604080518082019091526080830160026000835b828210156103395761032a60608302850136819003810190611215565b8152602001906001019061030d565b505050506080820151526040805180820182529060208401906002908390839080828437600092018290525060808086018051602001959095529351606087013560409182015280518082019091526103d69490935086019150600290835b828210156103c4576103b560608302850136819003810190611215565b81526020019060010190610398565b50508451606087013592509050610a19565b60a08201515260408051808201825261042091602085019060029083908390808284376000920191909152505050606084013561041b6101c086016101a0870161119a565b610ab7565b60a08201516020015261043860016060840135611654565b60a0820151604001526060810151610454578060a0015161045a565b80608001515b60c08201526040517f385f8646716a83170a0dce3b1830eb8bcac8f924070fb3930970bb2b37c5d0f09061048f908490611499565b60405180910390a161049f610ebf565b6104ac602084018461119a565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261051981610b71565b505050565b604051610532906006908390602001611619565b6040516020818303038152906040528051906020012060001c6000541461055857600080fd5b60008055341561056757600080fd5b33610575602083018361119a565b6001600160a01b03161461058857600080fd5b7f38f10beaf24daa7993ba7875418dd447d7b55c9eea359e9c56d6c87fbd66de1c816040516105b7919061142c565b60405180910390a16000805533ff5b6040516105da9060059083906020016115a3565b6040516020818303038152906040528051906020012060001c6000541461060057600080fd5b60008055610618610100820135610120830135611654565b43101561062457600080fd5b341561062f57600080fd5b7fc5f8d2a91f97ef9683940535d35fd784690d0dc9f0b521e2e4642d727154afbe8160405161065e9190611466565b60405180910390a161066e610ee0565b61067b602083018361119a565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156106ca576106bb60608302850136819003810190611215565b8152602001906001019061069e565b505083516020908101939093525050815160e084013560409182015281830180514390528051610120860135930192909252905161014084013591015261071081610c6e565b5050565b604051610728906001908390602001611619565b6040516020818303038152906040528051906020012060001c6000541461074e57600080fd5b6000805561075a610f1c565b341561076557600080fd5b33610773602084018461119a565b6001600160a01b03161461078657600080fd5b610796606083016040840161119a565b81516001600160a01b039190911690526107b6606083016040840161119a565b81516001600160a01b03919091166020918201526107d69083018361119a565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f8d95bc010eb8fd21ab686d3989fca5a9fd1d3e71af61373db9c3fb4e8c62c509906108469084906113fe565b60405180910390a1610856610ebf565b610863602084018461119a565b81516001600160a01b0390911690528151602080830180519290925281516000908201819052604080860151845190910152825143606090910152825191860135608090920191909152905160a0015261051981610b71565b6040516108d09060059083906020016115a3565b6040516020818303038152906040528051906020012060001c600054146108f657600080fd5b6000805561090e610100820135610120830135611654565b431061091957600080fd5b346101608201351461092a57600080fd5b7f4c51262eaa0777bcec754c2dbeb8086cd00dbad0fb40517265c42cf1cd74fa51816040516109599190611448565b60405180910390a1610969610ee0565b610976602083018361119a565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156109c5576109b660608302850136819003810190611215565b81526020019060010190610999565b505083516020908101939093525050815160e0840135604090910152808201805143905251610120840135910152610a07610160830135610140840135611654565b60208201516040015261071081610c6e565b610a21610f45565b60005b6002811015610a8957848160028110610a4d57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610a7257634e487b7160e01b600052603260045260246000fd5b602002015280610a8181611683565b915050610a24565b5081818460028110610aab57634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610abf610f72565b60005b6002811015610b3557848160028110610aeb57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610b1057634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610b2d81611683565b915050610ac2565b5081818460028110610b5757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b600181602001516020015111610c0557610b89610f90565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a0908101519084015251610be491600391849101611514565b60408051601f19818403018152919052805160209091012060005550610c6b565b610c0d610fdb565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a0015182519091015261071081610d6f565b50565b60408051602081019091526000815260208083015101518251604001511115610d25576020808301510151825160400151610ca9919061166c565b8152610cb3610ffb565b8251516001600160a01b031681528251602090810151818301528351604090810151818401528351606084015281850180515160808501525181015160a084015251610d04916005918491016115b8565b60408051601f19818403018152919052805160209091012060005550610710565b610d2d611040565b82515181516001600160a01b03909116905282516020908101518251820152830180515182516040908101919091529051015181516060015261051981610de6565b610d77610ee0565b81515181516001600160a01b0390911690528151602090810151825190910152815160600151610daa9061232890611654565b81516040908101919091528251810151602080840180519290925284516060015182519091015283516080015190519091015261071081610c6e565b8051602081015151516060909101516040516001600160a01b03909216916108fc82150291906000818181858888f19350505050158015610e2b573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528451516001600160a01b031683528451840151909152915190916101859160069184910161162d565b6040518060e00160405280610e7e611053565b8152600060208201819052604082018190526060820152608001610ea061107d565b8152602001610ead61107d565b8152602001610eba61107d565b905290565b60408051606081018252600091810191825290815260208101610eba6110aa565b6040518060400160405280610ef36110ec565b8152602001610eba60405180606001604052806000815260200160008152602001600081525090565b6040518060600160405280610f2f610f72565b8152602001610f3c611053565b8152602001610eba5b60405180604001604052806002905b610f5c611053565b815260200190600190039081610f545790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b03168152602001610fb3610f72565b815260200160008152602001610fc7610f45565b815260200160008152602001600081525090565b6040518060400160405280610fee61110f565b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200161101e610f45565b8152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280610fee611132565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060600160405280611090610f45565b815260200161109d610f72565b8152602001600081525090565b6040518060c001604052806110bd610f72565b8152602001600081526020016110d1610f45565b81526020016000815260200160008152602001600081525090565b604051806060016040528060006001600160a01b0316815260200161109d610f45565b6040518060a0016040528060006001600160a01b031681526020016110d1610f45565b604051806080016040528060006001600160a01b03168152602001610fc7610f45565b80356001600160a01b038116811461116c57600080fd5b919050565b600060608284031215611182578081fd5b50919050565b60006101808284031215611182578081fd5b6000602082840312156111ab578081fd5b6111b482611155565b9392505050565b6000606082840312156111cc578081fd5b6111b48383611171565b600061018082840312156111e8578081fd5b6111b48383611188565b60006101c08284031215611182578081fd5b600060408284031215611182578081fd5b600060608284031215611226578081fd5b6040516060810181811067ffffffffffffffff8211171561125557634e487b7160e01b83526041600452602483fd5b60405261126183611155565b815260208301356020820152604083013560408201528091505092915050565b8060005b60028110156112c8576001600160a01b0361129f83611155565b168452602082810135908501526040808301359085015260609384019390910190600101611285565b50505050565b8060005b60028110156112c857815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016112d2565b6001600160a01b038061132583611155565b168352602080840181840160005b6002811015611359578461134683611155565b1683529183019190830190600101611333565b5050505050606081013560608301526113786080830160808301611281565b610140818101359083015261016090810135910152565b6001600160a01b036113a082611155565b1682526113b36020830160208301611281565b60e081810135908301526101008082013590830152610120808201359083015261014090810135910152565b6001600160a01b036113f082611155565b168252602090810135910152565b6060810161140c82846113df565b6001600160a01b0361142060408501611155565b16604083015292915050565b6060810161143a82846113df565b604092830135919092015290565b6101808101611457828461138f565b61016092830135919092015290565b6101808101611475828461138f565b6101608084013580151580821461148b57600080fd5b808386015250505092915050565b6101c081016114a88284611313565b61018083810135908301526101a06001600160a01b036114c9828601611155565b16818401525092915050565b813581526040810160208301358015158082146114f157600080fd5b806020850152505092915050565b8281526101a081016111b46020830184611313565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b60028110156115655782516001600160a01b031682526020820192840192915060010161153d565b5050505060408301516080830152606083015161158560a08401826112ce565b50608083015161016083015260a08301516101808301529392505050565b82815261018081016111b4602083018461138f565b82815281516001600160a01b03166020808301919091528201516101808201906115e560408401826112ce565b5060408301516101008301526060830151610120830152608083015161014083015260a08301516101608301529392505050565b828152606081016111b460208301846113df565b828152606081016111b4602083018480516001600160a01b03168252602090810151910152565b600082198211156116675761166761169e565b500190565b60008282101561167e5761167e61169e565b500390565b60006000198214156116975761169761169e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205aa9b88bd730d1b5992f2f31461ca7fdb4f9cebfc9a6cf88b208f4e1cc6479fc64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_UInt","ctc1","T_Address","ctc2","T_Tuple","ctc3","ctc4","ctc5","T_Array","checkedBigNumberify","UInt_max","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","v18","creationTime","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","data","v21","time","v19","from","push","amt","kind","tok","undefined","nextSt","nextSt_noTime","view","isHalt","protect","announce","at","fs","msg","who","txn2","v27","v30","v26","v29","addressEq","assert","v56","v57","v59","v53","v54","v55","v392","v393","v394","v62","le","v328","add","v395","v396","v397","v336","gt","v366","sub","v373","v374","to","txn3","recv","v289","v293","v288","v295","v296","v297","v299","Array_set","v302","v315","reduce","v308","v309","v311","v312","v313","v318","v319","v320","v321","v323","v324","v325","cv53","cv54","cv55","cv392","cv393","cv394","didTimeout","txn4","v371","v369","cv395","cv396","cv397","v355","v360","v354","v359","v384","v386","v389","v385","v388","Nominee","v175","selfAddress","v178","getParams","v186","v212","v213","v235","v239","v240","v242","v243","v248","v249","v250","v253","v257","v258","v259","v260","v261","v264","v269","v275","v279","v285","Voter","v349","shouldBuyTicket","v350","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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F,IAAI,GAAGrI,MAAM,CAAC8D,SAAP,CAAiBtB,GAAjB,EAAsB4F,IAAtB,CAAb;AACApI,EAAAA,MAAM,CAAC+D,MAAP,CAAcsE,IAAd,EAAoB;AAClBhF,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AAIC;MA7PmByG,K;AA6PnB;AAEH,MAAMI,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1Fc;AA2FZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzJc;AA0JZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzKc;AA0KZlK,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/Mc;AAgNZmK,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHK,EAML,IANK,EAMC,IAND,EAMO,IANP,EAMa,IANb,EAMmB;AAC3BD,IAAAA,KAAK,EAAE,CADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GANnB,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,CAhNE;AAmOZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjhHS,EAgrWS,EAqWN,IArWM,EAqWA,IArWA,EAqWM,IArWN,EAqWY,IArWZ,EAqWmeS,EA2envBS,EAmvl/BS,EAkp0CS,CAnOK;AAwiDZC,EAAAA,WAAW,EAAE;AAxiDD,CAAd;AA0iDA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjvBa;AAkvBXC,EAAAA,QAAQ,EAAG,4tXAlvBA;AAmvBXC,EAAAA,UAAU,EAAG,gBAnvBF;AAovBX7K,EAAAA,KAAK,EAAE;AApvBI,CAAb;AAwvBA,OAAO,MAAM8K,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), [ctc0], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  stdlib.protect(ctc0, await interact.announce(v19, stdlib.checkedBigNumberify('./index.rsh:36:66:decimal', stdlib.UInt_max, 4)), {\n    at: './index.rsh:36:60:application',\n    fs: ['at ./index.rsh:34:23:application call to [unknown function] (defined at: ./index.rsh:34:27:function exp)'],\n    msg: 'announce',\n    who: 'Admin'\n    });\n  \n  \n  const txn2 = await (ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc1], [v19, v21, v19], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v27] = txn2.data;\n    const v30 = txn2.time;\n    const v26 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v29 = stdlib.addressEq(v19, v26);\n    stdlib.assert(v29, {\n      at: './index.rsh:38:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    const v56 = [v27, v27];\n    const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v59 = [v57, v57];\n    const v53 = v56;\n    const v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n    const v55 = v59;\n    const v392 = v30;\n    const v393 = v21;\n    const v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      \n      return v62;})()) {\n      sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n      const v395 = v392;\n      const v396 = v393;\n      const v397 = v394;\n      \n      if ((() => {\n        const v336 = stdlib.gt(v328, v396);\n        \n        return v336;})()) {\n        const v366 = stdlib.sub(v328, v396);\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n        const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v397,\n          kind: 'from',\n          to: v374,\n          tok: undefined\n          });\n        sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v62;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      \n      return v313;}, false)\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    \n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    \n    continue;\n    }\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n  \n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    \n    return v336;})()) {\n    const v366 = stdlib.sub(v328, v396);\n    const txn3 = await (ctc.recv(8, 1, [ctc0], false, v366));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc1, ctc5, ctc0, ctc0, ctc0, ctc0], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n        \n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n          \n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            \n            return v336;})()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;\n      }\n    else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;}\n    }\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v384 = v373[stdlib.checkedBigNumberify('./index.rsh:145:55:array ref', stdlib.UInt_max, 2)];\n  \n  \n  const txn3 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc0], [v19, v395, v384], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, (async (txn3) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 6), v19, v395]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:149:19:dot', stdlib.UInt_max, 6), v19]);\n    const [v386] = txn3.data;\n    const v389 = txn3.time;\n    const v385 = txn3.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v388 = stdlib.addressEq(v19, v385);\n    stdlib.assert(v388, {\n      at: './index.rsh:149:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v62;})()) {\n    const v175 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 174));\n    const v178 = stdlib.protect(ctc1, await interact.getParams(v175), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v186 = ['None', null];\n    const v212 = v53[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v213 = v53[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v235 = stdlib.addressEq(v212, v175);\n    const v239 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v240 = [v239, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v242 = [v186, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v243 = v235 ? v240 : v242;\n    const v248 = v243[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v249 = v243[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v250;\n    switch (v248[0]) {\n      case 'None': {\n        \n        const v253 = stdlib.addressEq(v213, v175);\n        const v257 = stdlib.add(v249, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v258 = ['Some', v249];\n        const v259 = [v258, v249];\n        const v260 = [v248, v257];\n        const v261 = v253 ? v259 : v260;\n        v250 = v261;\n        \n        break;\n        }\n      case 'Some': {\n        const v264 = v248[1];\n        v250 = v243;\n        \n        break;\n        }\n      }\n    const v269 = v250[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v275;\n    switch (v269[0]) {\n      case 'None': {\n        \n        v275 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v279 = v269[1];\n        v275 = v279;\n        \n        break;\n        }\n      }\n    \n    const v285 = [v178, v175];\n    \n    const txn3 = await (ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v19, v53, v54, v55, v392, v394, v285], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n      const [v289] = txn3.data;\n      const v293 = txn3.time;\n      const v288 = txn3.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v297 = [v295, v54, v296];\n      const v299 = stdlib.Array_set(v55, v54, v297);\n      const v302 = stdlib.Array_set(v53, v54, v295);\n      const v315 = v53.reduce((v308, v309) => {\n        const v311 = stdlib.addressEq(v295, v309);\n        const v312 = v311 ? true : false;\n        const v313 = v308 ? v308 : v312;\n        \n        return v313;}, false)\n      const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n      const v319 = [v55, v53, v54];\n      const v320 = [v299, v302, v318];\n      const v321 = v315 ? v319 : v320;\n      const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const cv53 = v324;\n      const cv54 = v325;\n      const cv55 = v323;\n      const cv392 = v293;\n      const cv393 = v392;\n      const cv394 = v394;\n      \n      (() => {\n        const v53 = cv53;\n        const v54 = cv54;\n        const v55 = cv55;\n        const v392 = cv392;\n        const v393 = cv393;\n        const v394 = cv394;\n        \n        if ((() => {\n          const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          \n          return v62;})()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v392, v394]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v53, v54, v55, v394]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n          const v395 = v392;\n          const v396 = v393;\n          const v397 = v394;\n          \n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            \n            return v336;})()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      \n      return v313;}, false)\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    \n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    \n    continue;\n    }\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n  \n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    \n    return v336;})()) {\n    const v366 = stdlib.sub(v328, v396);\n    const txn3 = await (ctc.recv(8, 1, [ctc1], false, v366));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n        \n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n          \n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            \n            return v336;})()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;\n      }\n    else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;}\n    }\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v27] = txn2.data;\n  const v30 = txn2.time;\n  const v26 = txn2.from;\n  ;\n  const v29 = stdlib.addressEq(v19, v26);\n  stdlib.assert(v29, {\n    at: './index.rsh:38:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  const v56 = [v27, v27];\n  const v57 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v59 = [v57, v57];\n  let v53 = v56;\n  let v54 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v55 = v59;\n  let v392 = v30;\n  let v393 = v21;\n  let v394 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v62 = stdlib.le(v54, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v62;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v289] = txn3.data;\n    const v293 = txn3.time;\n    const v288 = txn3.from;\n    ;\n    const v295 = v289[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v296 = v289[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v297 = [v295, v54, v296];\n    const v299 = stdlib.Array_set(v55, v54, v297);\n    const v302 = stdlib.Array_set(v53, v54, v295);\n    const v315 = v53.reduce((v308, v309) => {\n      const v311 = stdlib.addressEq(v295, v309);\n      const v312 = v311 ? true : false;\n      const v313 = v308 ? v308 : v312;\n      \n      return v313;}, false)\n    const v318 = stdlib.add(v54, stdlib.checkedBigNumberify('./index.rsh:65:118:decimal', stdlib.UInt_max, 1));\n    const v319 = [v55, v53, v54];\n    const v320 = [v299, v302, v318];\n    const v321 = v315 ? v319 : v320;\n    const v323 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v324 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v325 = v321[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const cv53 = v324;\n    const cv54 = v325;\n    const cv55 = v323;\n    const cv392 = v293;\n    const cv393 = v392;\n    const cv394 = v394;\n    \n    v53 = cv53;\n    v54 = cv54;\n    v55 = cv55;\n    v392 = cv392;\n    v393 = cv393;\n    v394 = cv394;\n    \n    continue;\n    }\n  const v328 = stdlib.add(v393, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 9000));\n  let v395 = v392;\n  let v396 = v393;\n  let v397 = v394;\n  \n  while ((() => {\n    const v336 = stdlib.gt(v328, v396);\n    \n    return v336;})()) {\n    const v366 = stdlib.sub(v328, v396);\n    const v349 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:103:48:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    const v350 = v349[stdlib.checkedBigNumberify('./index.rsh:111:38:array ref', stdlib.UInt_max, 1)];\n    \n    \n    const txn3 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397, v350], [v350, []], [ctc1], true, false, v366, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      \n      const v359 = stdlib.add(v397, v355);\n      sim_r.txns.push({\n        amt: v355,\n        kind: 'to',\n        tok: undefined\n        });\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      \n      (() => {\n        const v395 = cv395;\n        const v396 = cv396;\n        const v397 = cv397;\n        \n        if ((() => {\n          const v336 = stdlib.gt(v328, v396);\n          \n          return v336;})()) {\n          const v366 = stdlib.sub(v328, v396);\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n          const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v397,\n            kind: 'from',\n            to: v374,\n            tok: undefined\n            });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v19, v55, v328, v366, v395, v397], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:dot', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n        const [] = txn4.data;\n        const v371 = txn4.time;\n        const v369 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv395 = v371;\n        const cv396 = v395;\n        const cv397 = v397;\n        \n        (() => {\n          const v395 = cv395;\n          const v396 = cv396;\n          const v397 = cv397;\n          \n          if ((() => {\n            const v336 = stdlib.gt(v328, v396);\n            \n            return v336;})()) {\n            const v366 = stdlib.sub(v328, v396);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v395, v397]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v55, v328, v366, v397]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n            const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v397,\n              kind: 'from',\n              to: v374,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v395]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:143:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v371 = txn4.time;\n      const v369 = txn4.from;\n      ;\n      const cv395 = v371;\n      const cv396 = v395;\n      const cv397 = v397;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;\n      }\n    else {\n      const [v355] = txn3.data;\n      const v360 = txn3.time;\n      const v354 = txn3.from;\n      const v359 = stdlib.add(v397, v355);\n      ;\n      const cv395 = v360;\n      const cv396 = v395;\n      const cv397 = v359;\n      \n      v395 = cv395;\n      v396 = cv396;\n      v397 = cv397;\n      \n      continue;}\n    }\n  const v373 = v55[stdlib.checkedBigNumberify('./index.rsh:140:40:array ref', stdlib.UInt_max, 0)];\n  const v374 = v373[stdlib.checkedBigNumberify('./index.rsh:140:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v386] = txn3.data;\n  const v389 = txn3.time;\n  const v385 = txn3.from;\n  ;\n  const v388 = stdlib.addressEq(v19, v385);\n  stdlib.assert(v388, {\n    at: './index.rsh:149:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  return;\n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n    }, {\n    count: 8,\n    size: 153\n    }, null, null, null, null, {\n    count: 8,\n    size: 129\n    }, {\n    count: 12,\n    size: 249\n    }, {\n    count: 11,\n    size: 241\n    }, {\n    count: 12,\n    size: 337\n    }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:149:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:149:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 251\nload 250\n+\nstore 249\n// \"CheckPay\"\n// \"./index.rsh:103:48:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 250\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:48:dot\"\n// \"[at ./index.rsh:103:48:application call to [unknown function] (defined at: ./index.rsh:103:48:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 243\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v53\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v54\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v392\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v394\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v289\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T21\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v386\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v355\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v53\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v54\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v392\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v394\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v289\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v27\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T21\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v386\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v355\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T24\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T25\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v55\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v328\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v395\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v397\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a160408051602080820183524382528251808201845260008082529251815283518083018490529051818501528351808203850181526060909101909352825192019190912090556116ea806100826000396000f3fe6080604052600436106100595760003560e01c8063193afc73146100655780638f7a13441461007a578063a496364f1461008d578063a4f68ad2146100a0578063ad5542c4146100b3578063eb9fa41b146100c657610060565b3661006057005b600080fd5b610078610073366004611204565b6100d9565b005b6100786100883660046111f2565b6101a4565b61007861009b3660046111bb565b61051e565b6100786100ae3660046111d6565b6105c6565b6100786100c13660046111bb565b610714565b6100786100d43660046111d6565b6108bc565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b7fc32df0ce290a4082d696e286eb47ee901bff58c6d9bf2b65b404efaab9a729c78160405161015491906114d5565b60405180910390a160408051808201825233815243602080830191909152915190916101859160019184910161162d565b60408051601f1981840301815291905280516020909101206000555050565b6040516101b89060039083906020016114ff565b6040516020818303038152906040528051906020012060001c600054146101de57600080fd5b600080556101ea610e6b565b34156101f557600080fd5b6102076101c083016101a0840161119a565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156102ec5760208301816002811061026657634e487b7160e01b600052603260045260246000fd5b602002016020810190610279919061119a565b6001600160a01b0316604083015260208201516102cd5760408201516001600160a01b03166102b06101c085016101a0860161119a565b6001600160a01b0316146102c55760006102c8565b60015b6102d3565b81602001515b15156020830152806102e481611683565b91505061023a565b50602081015115156060820152604080518082019091526080830160026000835b828210156103395761032a60608302850136819003810190611215565b8152602001906001019061030d565b505050506080820151526040805180820182529060208401906002908390839080828437600092018290525060808086018051602001959095529351606087013560409182015280518082019091526103d69490935086019150600290835b828210156103c4576103b560608302850136819003810190611215565b81526020019060010190610398565b50508451606087013592509050610a19565b60a08201515260408051808201825261042091602085019060029083908390808284376000920191909152505050606084013561041b6101c086016101a0870161119a565b610ab7565b60a08201516020015261043860016060840135611654565b60a0820151604001526060810151610454578060a0015161045a565b80608001515b60c08201526040517f385f8646716a83170a0dce3b1830eb8bcac8f924070fb3930970bb2b37c5d0f09061048f908490611499565b60405180910390a161049f610ebf565b6104ac602084018461119a565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261051981610b71565b505050565b604051610532906006908390602001611619565b6040516020818303038152906040528051906020012060001c6000541461055857600080fd5b60008055341561056757600080fd5b33610575602083018361119a565b6001600160a01b03161461058857600080fd5b7f38f10beaf24daa7993ba7875418dd447d7b55c9eea359e9c56d6c87fbd66de1c816040516105b7919061142c565b60405180910390a16000805533ff5b6040516105da9060059083906020016115a3565b6040516020818303038152906040528051906020012060001c6000541461060057600080fd5b60008055610618610100820135610120830135611654565b43101561062457600080fd5b341561062f57600080fd5b7fc5f8d2a91f97ef9683940535d35fd784690d0dc9f0b521e2e4642d727154afbe8160405161065e9190611466565b60405180910390a161066e610ee0565b61067b602083018361119a565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156106ca576106bb60608302850136819003810190611215565b8152602001906001019061069e565b505083516020908101939093525050815160e084013560409182015281830180514390528051610120860135930192909252905161014084013591015261071081610c6e565b5050565b604051610728906001908390602001611619565b6040516020818303038152906040528051906020012060001c6000541461074e57600080fd5b6000805561075a610f1c565b341561076557600080fd5b33610773602084018461119a565b6001600160a01b03161461078657600080fd5b610796606083016040840161119a565b81516001600160a01b039190911690526107b6606083016040840161119a565b81516001600160a01b03919091166020918201526107d69083018361119a565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f8d95bc010eb8fd21ab686d3989fca5a9fd1d3e71af61373db9c3fb4e8c62c509906108469084906113fe565b60405180910390a1610856610ebf565b610863602084018461119a565b81516001600160a01b0390911690528151602080830180519290925281516000908201819052604080860151845190910152825143606090910152825191860135608090920191909152905160a0015261051981610b71565b6040516108d09060059083906020016115a3565b6040516020818303038152906040528051906020012060001c600054146108f657600080fd5b6000805561090e610100820135610120830135611654565b431061091957600080fd5b346101608201351461092a57600080fd5b7f4c51262eaa0777bcec754c2dbeb8086cd00dbad0fb40517265c42cf1cd74fa51816040516109599190611448565b60405180910390a1610969610ee0565b610976602083018361119a565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156109c5576109b660608302850136819003810190611215565b81526020019060010190610999565b505083516020908101939093525050815160e0840135604090910152808201805143905251610120840135910152610a07610160830135610140840135611654565b60208201516040015261071081610c6e565b610a21610f45565b60005b6002811015610a8957848160028110610a4d57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610a7257634e487b7160e01b600052603260045260246000fd5b602002015280610a8181611683565b915050610a24565b5081818460028110610aab57634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610abf610f72565b60005b6002811015610b3557848160028110610aeb57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610b1057634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610b2d81611683565b915050610ac2565b5081818460028110610b5757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b600181602001516020015111610c0557610b89610f90565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a0908101519084015251610be491600391849101611514565b60408051601f19818403018152919052805160209091012060005550610c6b565b610c0d610fdb565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a0015182519091015261071081610d6f565b50565b60408051602081019091526000815260208083015101518251604001511115610d25576020808301510151825160400151610ca9919061166c565b8152610cb3610ffb565b8251516001600160a01b031681528251602090810151818301528351604090810151818401528351606084015281850180515160808501525181015160a084015251610d04916005918491016115b8565b60408051601f19818403018152919052805160209091012060005550610710565b610d2d611040565b82515181516001600160a01b03909116905282516020908101518251820152830180515182516040908101919091529051015181516060015261051981610de6565b610d77610ee0565b81515181516001600160a01b0390911690528151602090810151825190910152815160600151610daa9061232890611654565b81516040908101919091528251810151602080840180519290925284516060015182519091015283516080015190519091015261071081610c6e565b8051602081015151516060909101516040516001600160a01b03909216916108fc82150291906000818181858888f19350505050158015610e2b573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528451516001600160a01b031683528451840151909152915190916101859160069184910161162d565b6040518060e00160405280610e7e611053565b8152600060208201819052604082018190526060820152608001610ea061107d565b8152602001610ead61107d565b8152602001610eba61107d565b905290565b60408051606081018252600091810191825290815260208101610eba6110aa565b6040518060400160405280610ef36110ec565b8152602001610eba60405180606001604052806000815260200160008152602001600081525090565b6040518060600160405280610f2f610f72565b8152602001610f3c611053565b8152602001610eba5b60405180604001604052806002905b610f5c611053565b815260200190600190039081610f545790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b03168152602001610fb3610f72565b815260200160008152602001610fc7610f45565b815260200160008152602001600081525090565b6040518060400160405280610fee61110f565b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200161101e610f45565b8152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280610fee611132565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060600160405280611090610f45565b815260200161109d610f72565b8152602001600081525090565b6040518060c001604052806110bd610f72565b8152602001600081526020016110d1610f45565b81526020016000815260200160008152602001600081525090565b604051806060016040528060006001600160a01b0316815260200161109d610f45565b6040518060a0016040528060006001600160a01b031681526020016110d1610f45565b604051806080016040528060006001600160a01b03168152602001610fc7610f45565b80356001600160a01b038116811461116c57600080fd5b919050565b600060608284031215611182578081fd5b50919050565b60006101808284031215611182578081fd5b6000602082840312156111ab578081fd5b6111b482611155565b9392505050565b6000606082840312156111cc578081fd5b6111b48383611171565b600061018082840312156111e8578081fd5b6111b48383611188565b60006101c08284031215611182578081fd5b600060408284031215611182578081fd5b600060608284031215611226578081fd5b6040516060810181811067ffffffffffffffff8211171561125557634e487b7160e01b83526041600452602483fd5b60405261126183611155565b815260208301356020820152604083013560408201528091505092915050565b8060005b60028110156112c8576001600160a01b0361129f83611155565b168452602082810135908501526040808301359085015260609384019390910190600101611285565b50505050565b8060005b60028110156112c857815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016112d2565b6001600160a01b038061132583611155565b168352602080840181840160005b6002811015611359578461134683611155565b1683529183019190830190600101611333565b5050505050606081013560608301526113786080830160808301611281565b610140818101359083015261016090810135910152565b6001600160a01b036113a082611155565b1682526113b36020830160208301611281565b60e081810135908301526101008082013590830152610120808201359083015261014090810135910152565b6001600160a01b036113f082611155565b168252602090810135910152565b6060810161140c82846113df565b6001600160a01b0361142060408501611155565b16604083015292915050565b6060810161143a82846113df565b604092830135919092015290565b6101808101611457828461138f565b61016092830135919092015290565b6101808101611475828461138f565b6101608084013580151580821461148b57600080fd5b808386015250505092915050565b6101c081016114a88284611313565b61018083810135908301526101a06001600160a01b036114c9828601611155565b16818401525092915050565b813581526040810160208301358015158082146114f157600080fd5b806020850152505092915050565b8281526101a081016111b46020830184611313565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b60028110156115655782516001600160a01b031682526020820192840192915060010161153d565b5050505060408301516080830152606083015161158560a08401826112ce565b50608083015161016083015260a08301516101808301529392505050565b82815261018081016111b4602083018461138f565b82815281516001600160a01b03166020808301919091528201516101808201906115e560408401826112ce565b5060408301516101008301526060830151610120830152608083015161014083015260a08301516101608301529392505050565b828152606081016111b460208301846113df565b828152606081016111b4602083018480516001600160a01b03168252602090810151910152565b600082198211156116675761166761169e565b500190565b60008282101561167e5761167e61169e565b500390565b60006000198214156116975761169761169e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205aa9b88bd730d1b5992f2f31461ca7fdb4f9cebfc9a6cf88b208f4e1cc6479fc64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}