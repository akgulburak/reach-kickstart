{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/app/reach-react-template/src/components/participants/Nominee.js\";\nimport { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\nimport { Context } from \"../../Context\";\nimport NomineeViews from \"./NomineeViews\";\n/*import { addressEq } from \"@reach-sh/stdlib/ALGO_compiled\";*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Nominee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: \"\",\n      args: [],\n\n      /* Resolves */\n      resGetParams: null\n    }; // Bind functions\n\n    this.getParamsExt = this.getParamsExt.bind(this);\n  }\n\n  componenetDidMount() {\n    //const [, , , , , ,ctc, ,ctcArgs] = this.context;\n    const [,,,,,, ctc,,] = this.context; // Paranın 20 saniyede güncellenmesi\n\n    this.interval = setInterval(async () => await this.updateBalance(), 20000); // Kontrat argümanları\n\n    /*        this.argument1 = ctc.ctcArgs[0];\n            this.wager = ctc.A*/\n    // Reach'e bağlan\n\n    Backend.Nominee(ctc[0], this);\n  }\n\n  async updateBalance() {\n    const [account,,, setBalance] = this.context;\n    const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n    setBalance(balance);\n  }\n\n  async getTitle() {\n    const params = await new Promise(res => {\n      this.setState({\n        appState: \"getParams\",\n        resGetParams: res\n      });\n    });\n    this.updateBalance();\n    return params;\n  }\n\n  getParamsExt(params) {\n    this.state.resGetParams(params);\n  }\n  /*\n      async showOutcome(address){\n          this.setState({\n              appState: \"showOutcome\",\n              args: [address]\n          })\n      }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(NomineeViews, {\n      appState: this.state.appState,\n      args: this.state.args,\n      getParamsReady: this.state.resGetParams !== null,\n      getParams: this.getParamsExt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n\n}\nNominee.contextType = Context;","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/components/participants/Nominee.js"],"names":["Component","Backend","Reach","Context","NomineeViews","Nominee","constructor","props","state","appState","args","resGetParams","getParamsExt","bind","componenetDidMount","ctc","context","interval","setInterval","updateBalance","account","setBalance","balance","formatCurrency","balanceOf","getTitle","params","Promise","res","setState","render","contextType"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA;;;AAEA,OAAO,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAGlCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,IAAI,EAAE,EAFG;;AAGT;AACAC,MAAAA,YAAY,EAAE;AAJL,KAAb,CAHc,CAWd;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB;AACA,UAAM,QAAYC,GAAZ,MAAsB,KAAKC,OAAjC,CAFiB,CAGjB;;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAY,MAAM,KAAKC,aAAL,EAAnB,EAAyC,KAAzC,CAA3B,CAJiB,CAMjB;;AACR;AACA;AAEQ;;AACAlB,IAAAA,OAAO,CAACI,OAAR,CAAgBU,GAAG,CAAC,CAAD,CAAnB,EAAuB,IAAvB;AACH;;AAEkB,QAAbI,aAAa,GAAG;AAClB,UAAM,CAACC,OAAD,IAAcC,UAAd,IAA4B,KAAKL,OAAvC;AAEA,UAAMM,OAAO,GAAGpB,KAAK,CAACqB,cAAN,CAAqB,MAAMrB,KAAK,CAACsB,SAAN,CAAgBJ,OAAhB,CAA3B,EAAqD,CAArD,CAAhB;AACAC,IAAAA,UAAU,CAACC,OAAD,CAAV;AACH;;AAEa,QAARG,QAAQ,GAAG;AACb,UAAMC,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAYC,GAAG,IAAI;AACpC,WAAKC,QAAL,CAAc;AACVpB,QAAAA,QAAQ,EAAE,WADA;AAEVE,QAAAA,YAAY,EAAEiB;AAFJ,OAAd;AAIH,KALoB,CAArB;AAOA,SAAKT,aAAL;AACA,WAAOO,MAAP;AACH;;AACDd,EAAAA,YAAY,CAACc,MAAD,EAAS;AACjB,SAAKlB,KAAL,CAAWG,YAAX,CAAwBe,MAAxB;AACH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACII,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,YAAD;AACP,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWC,QADd;AAEP,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFV;AAGP,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,YAAX,KAA4B,IAHrC;AAIP,MAAA,SAAS,EAAE,KAAKC;AAJT;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH;;AArEiC;AAAzBP,O,CACF0B,W,GAAc5B,O","sourcesContent":["import {Component} from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\n\nimport { Context } from \"../../Context\";\nimport NomineeViews from \"./NomineeViews\";\n/*import { addressEq } from \"@reach-sh/stdlib/ALGO_compiled\";*/\n\nexport class Nominee extends Component{\n    static contextType = Context;\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            appState: \"\",\n            args: [],\n            /* Resolves */\n            resGetParams: null,\n\n        }\n\n        // Bind functions\n        this.getParamsExt = this.getParamsExt.bind(this);\n\n    }\n\n    componenetDidMount() {\n        //const [, , , , , ,ctc, ,ctcArgs] = this.context;\n        const [, , , , , ,ctc, ,] = this.context;\n        // Paranın 20 saniyede güncellenmesi\n        this.interval = setInterval(async () => await this.updateBalance(), 20000);\n        \n        // Kontrat argümanları\n/*        this.argument1 = ctc.ctcArgs[0];\n        this.wager = ctc.A*/\n\n        // Reach'e bağlan\n        Backend.Nominee(ctc[0],this);\n    }\n\n    async updateBalance() {\n        const [account, , , setBalance] = this.context;\n\n        const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n        setBalance(balance);\n    }\n    \n    async getTitle() {\n        const params = await new Promise(res => {\n            this.setState({\n                appState: \"getParams\",\n                resGetParams: res\n            });\n        });\n\n        this.updateBalance();\n        return params;\n    }\n    getParamsExt(params) {\n        this.state.resGetParams(params);\n    }\n/*\n    async showOutcome(address){\n        this.setState({\n            appState: \"showOutcome\",\n            args: [address]\n        })\n    }\n*/\n    render() {\n        return <NomineeViews\n        appState={this.state.appState}\n        args={this.state.args}\n        getParamsReady={this.state.resGetParams !== null}\n        getParams={this.getParamsExt}\n        />\n    }\n\n}"]},"metadata":{},"sourceType":"module"}