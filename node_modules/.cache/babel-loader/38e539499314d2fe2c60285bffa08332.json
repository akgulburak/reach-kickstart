{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Bool;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc4,\n    Voter: ctc5\n  });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc13 = stdlib.T_Tuple([]);\n  const ctc14 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc15 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc0, ctc14, ctc1, ctc15, ctc8, ctc8, ctc1, ctc1]);\n  const ctc17 = stdlib.T_Tuple([ctc1, ctc0, ctc14, ctc1, ctc15, ctc8, ctc8, ctc1]);\n  const v18 = await ctc.creationTime();\n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 19));\n  const v22 = [v20, stdlib.checkedBigNumberify('./index.rsh:35:37:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:35:40:decimal', stdlib.UInt_max, 0)];\n  const txn1 = await ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), [ctc1, ctc2], [v18, v22], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n    const v63 = [v38, v38];\n    const v64 = [v24, v24];\n    const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n    const v59 = v63;\n    const v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n    const v61 = v64;\n    const v62 = v65;\n    const v620 = v26;\n    const v621 = v18;\n    const v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      return v68;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc16, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc17, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n      const v351 = true;\n      const v352 = v65;\n      const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n      const v623 = v620;\n      const v624 = v621;\n      const v625 = v622;\n\n      if ((() => {\n        const v359 = stdlib.gt(v338, v624);\n        const v361 = v359 ? v351 : false;\n        return v361;\n      })()) {\n        const v468 = stdlib.sub(v338, v624);\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc3], false, false);\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    continue;\n  }\n\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v468 = stdlib.sub(v338, v624);\n    const v398 = stdlib.protect(ctc4, await interact.finishVoting(), {\n      at: './index.rsh:128:71:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:127:25:function exp)', 'at ./index.rsh:103:64:application call to \"runAdmin0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'finishVoting',\n      who: 'Admin'\n    });\n    const v401 = ['Admin', v398];\n    const txn2 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v468, v623, v625, v401], [stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0), []], [ctc6], true, false, v468, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v415 = v413[1];\n            v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v419 = v413[1];\n            const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v414 = v421;\n            break;\n          }\n      }\n\n      const v425 = stdlib.add(v625, v414);\n      sim_r.txns.push({\n        amt: v414,\n        kind: 'to',\n        tok: undefined\n      });\n      let v427;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v428 = v413[1];\n            const v430 = stdlib.addressEq(v412, v23);\n            v427 = v430;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v433 = v413[1];\n            v427 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n      });\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v437 = v413[1];\n            const cv351 = v437;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n\n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n\n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                return v361;\n              })()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              }\n            })();\n\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v441 = v413[1];\n            let v442;\n            const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v444) {\n              const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v449 = stdlib.sub(v425, v445);\n              sim_r.txns.push({\n                amt: v445,\n                kind: 'from',\n                to: v412,\n                tok: undefined\n              });\n              const v461 = [v352, v353, true];\n              v442 = v461;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v449;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v623 = cv623;\n                const v624 = cv624;\n                const v625 = cv625;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v624);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v468 = stdlib.sub(v338, v624);\n                  sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            } else {\n              const v454 = v352[v443];\n              const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v457 = stdlib.Array_set(v352, v443, v455);\n              const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v459 = stdlib.add(v353, v458);\n              const v462 = [v457, v459, true];\n              v442 = v462;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v425;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v623 = cv623;\n                const v624 = cv624;\n                const v625 = cv625;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v624);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v468 = stdlib.sub(v338, v624);\n                  sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            }\n\n            break;\n          }\n      }\n\n      return sim_r;\n    });\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      continue;\n    } else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v415 = v413[1];\n            v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v419 = v413[1];\n            const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v414 = v421;\n            break;\n          }\n      }\n\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v428 = v413[1];\n            const v430 = stdlib.addressEq(v412, v23);\n            v427 = v430;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v433 = v413[1];\n            v427 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n      });\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v437 = v413[1];\n            const cv351 = v437;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v441 = v413[1];\n            let v442;\n            const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v444) {\n              const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v449 = stdlib.sub(v425, v445);\n              ;\n              const v461 = [v352, v353, true];\n              v442 = v461;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v449;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            } else {\n              const v454 = v352[v443];\n              const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v457 = stdlib.Array_set(v352, v443, v455);\n              const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v459 = stdlib.add(v353, v458);\n              const v462 = [v457, v459, true];\n              v442 = v462;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v425;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const v493 = v352.reduce((v485, v486) => {\n    const v489 = stdlib.gt(v486, v485);\n    const v491 = v489 ? v486 : v485;\n    return v491;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v502 = ['None', null];\n  const v528 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v529 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v551 = stdlib.eq(v528, v493);\n  const v555 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v556 = [v555, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v558 = [v502, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v559 = v551 ? v556 : v558;\n  const v564 = v559[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v565 = v559[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v566;\n\n  switch (v564[0]) {\n    case 'None':\n      {\n        const v569 = stdlib.eq(v529, v493);\n        const v573 = stdlib.add(v565, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v574 = ['Some', v565];\n        const v575 = [v574, v565];\n        const v576 = [v564, v573];\n        const v577 = v569 ? v575 : v576;\n        v566 = v577;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v580 = v564[1];\n        v566 = v559;\n        break;\n      }\n  }\n\n  const v585 = v566[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v591;\n\n  switch (v585[0]) {\n    case 'None':\n      {\n        v591 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v595 = v585[1];\n        v591 = v595;\n        break;\n      }\n  }\n\n  const v601 = v61[v591];\n  const v602 = v601[stdlib.checkedBigNumberify('./index.rsh:161:55:array ref', stdlib.UInt_max, 2)];\n  const v605 = v601[stdlib.checkedBigNumberify('./index.rsh:162:57:array ref', stdlib.UInt_max, 0)];\n  const txn2 = await ctc.sendrecv(6, 3, stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1, ctc1, ctc0, ctc1], [v23, v623, v625, v602, v605, v591], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 5), v23, v623, v625]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 5), v23, v625]);\n    const [v607, v608, v609] = txn2.data;\n    const v612 = txn2.time;\n    const v606 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v611 = stdlib.addressEq(v23, v606);\n    stdlib.assert(v611, {\n      at: './index.rsh:166:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      amt: v625,\n      kind: 'from',\n      to: v608,\n      tok: undefined\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc13, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc13, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:169:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  ;\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Bool;\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc16 = stdlib.T_Data({\n    Admin: ctc10,\n    Voter: ctc15\n  });\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc2], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const v181 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 180));\n    const v184 = stdlib.protect(ctc1, await interact.getParams(v181), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v192 = ['None', null];\n    const v218 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v219 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v241 = stdlib.addressEq(v218, v181);\n    const v245 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v246 = [v245, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v248 = [v192, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v249 = v241 ? v246 : v248;\n    const v254 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v255 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v256;\n\n    switch (v254[0]) {\n      case 'None':\n        {\n          const v259 = stdlib.addressEq(v219, v181);\n          const v263 = stdlib.add(v255, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v264 = ['Some', v255];\n          const v265 = [v264, v255];\n          const v266 = [v254, v263];\n          const v267 = v259 ? v265 : v266;\n          v256 = v267;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v270 = v254[1];\n          v256 = v249;\n          break;\n        }\n    }\n\n    const v275 = v256[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v281;\n\n    switch (v275[0]) {\n      case 'None':\n        {\n          v281 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v285 = v275[1];\n          v281 = v285;\n          break;\n        }\n    }\n\n    const v291 = [v184, v181];\n    const txn2 = await ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc3], [v23, v59, v60, v61, v62, v65, v620, v622, v291], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc3], true, false, false, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n      const [v295] = txn2.data;\n      const v299 = txn2.time;\n      const v294 = txn2.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v303 = [v301, v60, v302];\n      const v305 = stdlib.Array_set(v61, v60, v303);\n      const v308 = stdlib.Array_set(v59, v60, v301);\n      const v321 = v59.reduce((v314, v315) => {\n        const v317 = stdlib.addressEq(v301, v315);\n        const v318 = v317 ? true : false;\n        const v319 = v314 ? v314 : v318;\n        return v319;\n      }, false);\n      const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v327 = stdlib.Array_set(v62, v60, v302);\n      const v328 = [v61, v59, v60, v62];\n      const v329 = [v305, v308, v324, v327];\n      const v330 = v321 ? v328 : v329;\n      const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv59 = v333;\n      const cv60 = v334;\n      const cv61 = v332;\n      const cv62 = v335;\n      const cv620 = v299;\n      const cv621 = v620;\n      const cv622 = v622;\n\n      (() => {\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v62 = cv62;\n        const v620 = cv620;\n        const v621 = cv621;\n        const v622 = cv622;\n\n        if ((() => {\n          const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          return v68;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n          const v351 = true;\n          const v352 = v65;\n          const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n          const v623 = v620;\n          const v624 = v621;\n          const v625 = v622;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    continue;\n  }\n\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v468 = stdlib.sub(v338, v624);\n    const txn2 = await ctc.recv(7, 1, [ctc16], false, v468);\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      continue;\n    } else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v415 = v413[1];\n            v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v419 = v413[1];\n            const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v414 = v421;\n            break;\n          }\n      }\n\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v428 = v413[1];\n            const v430 = stdlib.addressEq(v412, v23);\n            v427 = v430;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v433 = v413[1];\n            v427 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Nominee'\n      });\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v437 = v413[1];\n            const cv351 = v437;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v441 = v413[1];\n            let v442;\n            const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v444) {\n              const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v449 = stdlib.sub(v425, v445);\n              ;\n              const v461 = [v352, v353, true];\n              v442 = v461;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v449;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            } else {\n              const v454 = v352[v443];\n              const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v457 = stdlib.Array_set(v352, v443, v455);\n              const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v459 = stdlib.add(v353, v458);\n              const v462 = [v457, v459, true];\n              v442 = v462;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v425;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const txn2 = await ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false);\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  ;\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc5,\n    Voter: ctc4\n  });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc2], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc3], false, false);\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    continue;\n  }\n\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v468 = stdlib.sub(v338, v624);\n    const v384 = v62[stdlib.checkedBigNumberify('./index.rsh:108:81:array ref', stdlib.UInt_max, 0)];\n    const v385 = v62[stdlib.checkedBigNumberify('./index.rsh:108:91:array ref', stdlib.UInt_max, 1)];\n    const v386 = v352[stdlib.checkedBigNumberify('./index.rsh:108:102:array ref', stdlib.UInt_max, 0)];\n    const v387 = v352[stdlib.checkedBigNumberify('./index.rsh:108:111:array ref', stdlib.UInt_max, 1)];\n    const v388 = [v384, v385];\n    const v389 = [v386, v387];\n    const v390 = stdlib.protect(ctc4, await interact.shouldBuyTicket(v388, v389), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:64:application call to \"runVoter0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v406 = ['Voter', v390];\n    const v409 = v390[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n    const txn2 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v468, v623, v625, v406], [v409, []], [ctc6], true, false, v468, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v415 = v413[1];\n            v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v419 = v413[1];\n            const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v414 = v421;\n            break;\n          }\n      }\n\n      const v425 = stdlib.add(v625, v414);\n      sim_r.txns.push({\n        amt: v414,\n        kind: 'to',\n        tok: undefined\n      });\n      let v427;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v428 = v413[1];\n            const v430 = stdlib.addressEq(v412, v23);\n            v427 = v430;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v433 = v413[1];\n            v427 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n      });\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v437 = v413[1];\n            const cv351 = v437;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n\n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n\n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                return v361;\n              })()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              }\n            })();\n\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v441 = v413[1];\n            let v442;\n            const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v444) {\n              const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v449 = stdlib.sub(v425, v445);\n              sim_r.txns.push({\n                amt: v445,\n                kind: 'from',\n                to: v412,\n                tok: undefined\n              });\n              const v461 = [v352, v353, true];\n              v442 = v461;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v449;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v623 = cv623;\n                const v624 = cv624;\n                const v625 = cv625;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v624);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v468 = stdlib.sub(v338, v624);\n                  sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            } else {\n              const v454 = v352[v443];\n              const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v457 = stdlib.Array_set(v352, v443, v455);\n              const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v459 = stdlib.add(v353, v458);\n              const v462 = [v457, v459, true];\n              v442 = v462;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v425;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v623 = cv623;\n                const v624 = cv624;\n                const v625 = cv625;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v624);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v468 = stdlib.sub(v338, v624);\n                  sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            }\n\n            break;\n          }\n      }\n\n      return sim_r;\n    });\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      continue;\n    } else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v415 = v413[1];\n            v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v419 = v413[1];\n            const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v414 = v421;\n            break;\n          }\n      }\n\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v428 = v413[1];\n            const v430 = stdlib.addressEq(v412, v23);\n            v427 = v430;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v433 = v413[1];\n            v427 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n      });\n\n      switch (v413[0]) {\n        case 'Admin':\n          {\n            const v437 = v413[1];\n            const cv351 = v437;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v441 = v413[1];\n            let v442;\n            const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v444) {\n              const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v449 = stdlib.sub(v425, v445);\n              ;\n              const v461 = [v352, v353, true];\n              v442 = v461;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v449;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            } else {\n              const v454 = v352[v443];\n              const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v457 = stdlib.Array_set(v352, v443, v455);\n              const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v459 = stdlib.add(v353, v458);\n              const v462 = [v457, v459, true];\n              v442 = v462;\n              const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v465;\n              const cv352 = v463;\n              const cv353 = v464;\n              const cv623 = v426;\n              const cv624 = v623;\n              const cv625 = v425;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v623 = cv623;\n              v624 = cv624;\n              v625 = cv625;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const txn2 = await ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false);\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  ;\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 137\n  }, null, null, null, null, {\n    count: 11,\n    size: 177\n  }, {\n    count: 14,\n    size: 187\n  }, {\n    count: 13,\n    size: 170\n  }, {\n    count: 14,\n    size: 369\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nsubstring 0 32\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 255\nload 255\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 252\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:166:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:166:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 254\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l1\nload 248\nsubstring 1 2\nbtoi\nstore 243\nint 0\nstore 244\nl1:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l2\nload 248\nsubstring 1 17\ndup\nstore 243\nsubstring 8 16\nbtoi\nstore 244\nl2:\nl0:\nload 249\nload 244\n+\nstore 243\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 244\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l4\nload 248\nsubstring 1 2\nbtoi\nstore 241\ngtxn 0 Sender\nload 255\n==\nstore 242\nl4:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l5\nload 248\nsubstring 1 17\nstore 241\nint 1\nstore 242\nl5:\nl3:\n// Nothing\n// \"./index.rsh:103:64:application\"\n// \"[]\"\nload 242\nassert\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l7\nload 248\nsubstring 1 2\nbtoi\nstore 241\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 241\n&&\nbz l8\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 240\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 241\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 240\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 240\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl7:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l9\nload 248\nsubstring 1 17\ndup\nstore 241\nsubstring 0 8\nbtoi\ndup\nstore 239\nint 2\n>=\nbz l10\nload 241\nsubstring 8 16\nbtoi\nstore 238\nload 243\nload 238\n-\nstore 237\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 238\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 0 16\nstore 236\nload 240\nsubstring 16 24\nbtoi\nstore 235\nload 240\nsubstring 24 25\nbtoi\nstore 234\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 233\nload 234\n&&\ndup\nstore 232\nbz l11\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 231\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 234\nitob // bool\nsubstring 7 8\nconcat\nload 236\nconcat\nload 235\nitob\nconcat\nload 231\nitob\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 231\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl11:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl10:\nload 252\nint 0\nint 8\nload 239\n*\nsubstring3\nload 252\nint 8\nload 239\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 239\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 241\nsubstring 8 16\nbtoi\n+\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 24 25\nbtoi\nstore 238\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 237\nload 238\n&&\ndup\nstore 236\nbz l12\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 235\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 238\nitob // bool\nsubstring 7 8\nconcat\nload 240\nsubstring 0 16\nconcat\nload 240\nsubstring 16 24\nconcat\nload 235\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 235\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl12:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl9:\nl6:\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 253\n&&\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 242\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 242\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 242\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 250\nconcat\nint 0\nitob\nconcat\nload 241\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v607\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v608\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v609\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v622\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v607\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v608\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v609\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v622\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611f61806100826000396000f3fe60806040526004361061004e5760003560e01c8063404a34781461005a5780637ad466c21461006f578063b87338b014610082578063db8500b714610095578063ec2cc884146100a857610055565b3661005557005b600080fd5b61006d610068366004611958565b6100bb565b005b61006d61007d3660046119c0565b610214565b61006d61009036600461196a565b6103a2565b61006d6100a3366004611946565b6107cd565b61006d6100b63660046118fc565b610e45565b6040516100cf906004908390602001611dbd565b6040516020818303038152906040528051906020012060001c600054146100f557600080fd5b6000805561010b60c082013560e0830135611ecb565b43101561011757600080fd5b341561012257600080fd5b7fb91e5fee7d80cd4df9272e91ff7413963d1ef9dca2c3e540f3315850b08b2a8e816040516101519190611c6d565b60405180910390a161016161144d565b61016e60208301836118a7565b81516001600160a01b039091169052805160208084013591015261019860608301604084016118c8565b60208201519015159052604080518082018252906060840190600290839083908082843760009201919091525050506020808301805190910191909152805160a080850135604090920191909152815143606090910152815160e0850135608090910152905161010084013591015261021081610f39565b5050565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461025157600080fd5b6000805561025d61147b565b341561026857600080fd5b61027860408301602084016118a7565b81516001600160a01b0391909116905261029860408301602084016118a7565b81516001600160a01b03919091166020918201526102be9036849003840190840161197c565b602082810151919091526102da9036849003840190840161197c565b60208281015181019190915260408083018051600090819052905190920191909152517fa6e69dadb79658a46c005a5f88a8cb73e8d968dc2d6bcf01c1f3f07d907132d79061032a908490611cd3565b60405180910390a161033a6114a8565b80513390526040808301805183516020908101919091528451818501805191909152805160009083018190529186015181519094019390935290518251606001528151436080909101528151853560a090910152905160c0015261039d8161106f565b505050565b6040516103b6906002908390602001611cf1565b6040516020818303038152906040528051906020012060001c600054146103dc57600080fd5b600080556103e86114c8565b34156103f357600080fd5b610405610240830161022084016118a7565b81516001600160a01b03909116905280516060830135602091820152815161020084013560409091015260009082018190525b60028110156104ea5760208301816002811061046457634e487b7160e01b600052603260045260246000fd5b60200201602081019061047791906118a7565b6001600160a01b0316604083015260208201516104cb5760408201516001600160a01b03166104ae610240850161022086016118a7565b6001600160a01b0316146104c35760006104c6565b60015b6104d1565b81602001515b15156020830152806104e281611efa565b915050610438565b50602081015115156060820152604080518082019091526080830160026000835b82821015610537576105286060830285013681900381019061197c565b8152602001906001019061050b565b50505050608082015152604080518082018252906020840190600290839083908082843760009201919091525050506080820180516020019190915251606083013560409182015280518082018252906101408401906002908390839080828437600092018290525060808086015160600194909452604080518082019091526106059490935086019150600290835b828210156105f3576105e46060830285013681900381019061197c565b815260200190600101906105c7565b50508451606087013592509050611178565b60a08201515260408051808201825261064f91602085019060029083908390808284376000920191909152505050606084013561064a610240860161022087016118a7565b611216565b60a08201516020015261066760016060840135611ecb565b60a0820151604090810191909152805180820182526106ac916101408501906002908390839080828437600092019190915250505060608401356102008501356112d0565b8160a001516060018190525080606001516106cb578060a001516106d1565b80608001515b60c08201526040517f8400c30339f6628441ca54ee41b7d90613faa6c375dabda844e99fb7fe65a6bf90610706908490611c97565b60405180910390a16107166114a8565b61072360208401846118a7565b81516001600160a01b0390911690526040805180820182529061018085019060029083908390808284376000920191909152505082516020908101929092525060c080840180518301518385018051919091528151604090810151825190950194909452815151815190940193909352516060908101518351909101528151436080919091015281516101c086013560a0919091015290516101e085013591015261039d8161106f565b6040516107e1906004908390602001611dbd565b6040516020818303038152906040528051906020012060001c6000541461080757600080fd5b60008055610813611529565b61082560c083013560e0840135611ecb565b431061083057600080fd5b6000610844610140840161012085016118e2565b600181111561086357634e487b7160e01b600052602160045260246000fd5b141561088b5761087b610160830161014084016118c8565b15156020820152600081526108e5565b600161089f610140840161012085016118e2565b60018111156108be57634e487b7160e01b600052602160045260246000fd5b14156108e5576108d73683900383016101608401611913565b604082018190526020015181525b80516108f690610100840135611ecb565b60608201528051341461090857600080fd5b600061091c610140840161012085016118e2565b600181111561093b57634e487b7160e01b600052602160045260246000fd5b141561097c57610953610160830161014084016118c8565b151560a082015261096760208301836118a7565b6001600160a01b0316331460808201526109d5565b6001610990610140840161012085016118e2565b60018111156109af57634e487b7160e01b600052602160045260246000fd5b14156109d5576109c83683900383016101608401611913565b60c0820152600160808201525b80608001516109e357600080fd5b60006109f7610140840161012085016118e2565b6001811115610a1657634e487b7160e01b600052602160045260246000fd5b1415610b1e57610a2e610160830161014084016118c8565b151560e08201526040517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610a65908490611bfd565b60405180910390a1610a7561144d565b610a8260208401846118a7565b81516001600160a01b03909116905280516020808501359181019190915260e0830151908201519015159052604080518082018252906060850190600290839083908082843760009201919091525050506020808301805190910191909152805160a080860135604090920191909152815143606091820152825160e087013560809091015284015191510152610b1881610f39565b50610210565b6001610b32610140840161012085016118e2565b6001811115610b5157634e487b7160e01b600052602160045260246000fd5b141561021057610b6a3683900383016101608401611913565b610100820181905251600211610cd95761010081015160200151604051339180156108fc02916000818181858888f19350505050158015610baf573d6000803e3d6000fd5b50604080518082018252906060840190600290839083908082843760009201919091525050506101408201805191909152805160a0840135602090910152805160016040918201529051610120830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610c2d908490611bfd565b60405180910390a1610c3d61144d565b610c4a60208401846118a7565b81516001600160a01b03909116905280516020808501359181019190915261012083018051604090810151838501805191151590915282515181518501529151830151825190910152805143606091820152905160e08601356080909101526101008401519091015190830151610cc19190611ee3565b602082015160a00152610cd381610f39565b50610e40565b604080518082018252610d4191606085019060029083908390808284376000920191909152505050610100830151516001606086018260028110610d2d57634e487b7160e01b600052603260045260246000fd5b6020020135610d3c9190611ecb565b6112d0565b6101608201515261010081015160200151610d609060a0840135611ecb565b6101608201805160200191909152805160016040918201529051610120830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610dae908490611bfd565b60405180910390a1610dbe61144d565b610dcb60208401846118a7565b81516001600160a01b0390911690528051602080850135918101919091526101208301805160409081015183850180519115159091528251518151850152915190920151815190920191909152805143606091820152815160e0860135608090910152830151905160a00152610b1881610f39565b610210565b604051610e59906005908390602001611e47565b6040516020818303038152906040528051906020012060001c60005414610e7f57600080fd5b600080553415610e8e57600080fd5b33610e9c60208301836118a7565b6001600160a01b031614610eaf57600080fd5b610ebf60a08201608083016118a7565b604080516001600160a01b0392909216919083013580156108fc02916000818181858888f19350505050158015610efa573d6000803e3d6000fd5b507f83e534428f92bfcb95a8170bbd5cd7a87ec89ee978b81e96168024da7cb7429d81604051610f2a9190611bbb565b60405180910390a16000805533ff5b60408051602081019091526000815281602001516080015182600001516020015111610f66576000610f6d565b6020820151515b1561102d57816020015160800151826000015160200151610f8e9190611ee3565b8152610f986115ef565b8251516001600160a01b031681528251602090810151818301528084018051511515604080850191909152815183015160608086019190915282518201516080860152855160a08087019190915283519091015160c086015291519091015160e08401525161100c91600491849101611dd2565b60408051601f19818403018152919052805160209091012060005550610210565b611035611645565b82515181516001600160a01b03909116905260208084018051606001518351909201919091525160a0015181516040015261039d81611340565b60018160200151602001511161111d57611087611677565b8151516001600160a01b031681526020808301805151828401528051820151604080850191909152815181015160608086019190915282510151608080860191909152855184015160a08601528251015160c08086019190915291519091015160e0840152516110fc91600291849101611d06565b60408051601f19818403018152919052805160209091012060005550611175565b6111256116dd565b81515181516001600160a01b0390911690528151602090810151825182015282018051608090810151835160400152815160a00151835160600152905160c00151825190910152610210816113c2565b50565b6111806116f0565b60005b60028110156111e8578481600281106111ac57634e487b7160e01b600052603260045260246000fd5b60200201518282600281106111d157634e487b7160e01b600052603260045260246000fd5b6020020152806111e081611efa565b915050611183565b508181846002811061120a57634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b61121e611742565b60005b60028110156112945784816002811061124a57634e487b7160e01b600052603260045260246000fd5b602002015182826002811061126f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201528061128c81611efa565b915050611221565b50818184600281106112b657634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b6112d8611742565b60005b60028110156111e85784816002811061130457634e487b7160e01b600052603260045260246000fd5b602002015182826002811061132957634e487b7160e01b600052603260045260246000fd5b60200201528061133881611efa565b9150506112db565b61136d604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8151516001600160a01b03168152815160209081015181830152825160409081015181840152516113a391600591849101611e5b565b60408051601f1981840301815291905280516020909101206000555050565b6113ca61144d565b81515181516001600160a01b0390911690528151606001516113f0906216e36090611ecb565b815160209081019190915280820180516001905283518201518151909201919091528051600060409182015283510151815160609081019190915283510151815160809081019190915283510151905160a0015261021081610f39565b604080516080810182526000918101828152606082019290925290815260208101611476611760565b905290565b604051806060016040528061148e611742565b815260200161149b6116f0565b8152602001611476611742565b60405180604001604052806114bb61177c565b815260200161147661179f565b6040805161014081018252600060e082018181526101008301829052610120830182905282526020820181905291810182905260608101919091526080810161150f6117ee565b815260200161151c6117ee565b81526020016114766117ee565b60405180610180016040528060008152602001600015158152602001611562604051806040016040528060008152602001600081525090565b81526020016000815260200160001515815260200160001515815260200161159d604051806040016040528060008152602001600081525090565b81526020016000151581526020016115c8604051806040016040528060008152602001600081525090565b81526020016115d5611822565b81526020016115e2611822565b8152602001611476611822565b60405180610100016040528060006001600160a01b0316815260200160008152602001600015158152602001611623611742565b8152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260009181018281526060820183905260808201929092529081905b8152600060209091015290565b60405180610100016040528060006001600160a01b0316815260200161169b611742565b8152602001600081526020016116af6116f0565b81526020016116bc611742565b81526020016116c9611742565b815260200160008152602001600081525090565b604051806040016040528061166a611849565b60405180604001604052806002905b61172c604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816116ff5790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c00160405280600015158152602001611623611742565b604051806040016040528060006001600160a01b03168152602001611476611742565b6040518060e001604052806117b2611742565b8152602001600081526020016117c66116f0565b81526020016117d3611742565b81526020016000815260200160008152602001600081525090565b60405180608001604052806118016116f0565b815260200161180e611742565b815260200160008152602001611476611742565b6040518060600160405280611835611742565b815260006020820181905260409091015290565b6040518060a0016040528060006001600160a01b031681526020016117d3611742565b80356001600160a01b038116811461188357600080fd5b919050565b8035801515811461188357600080fd5b80356002811061188357600080fd5b6000602082840312156118b8578081fd5b6118c18261186c565b9392505050565b6000602082840312156118d9578081fd5b6118c182611888565b6000602082840312156118f3578081fd5b6118c182611898565b600060c0828403121561190d578081fd5b50919050565b600060408284031215611924578081fd5b61192e6040611e8c565b82358152602083013560208201528091505092915050565b60006101a0828403121561190d578081fd5b6000610140828403121561190d578081fd5b6000610240828403121561190d578081fd5b60006060828403121561198d578081fd5b6119976060611e8c565b6119a08361186c565b815260208301356020820152604083013560408201528091505092915050565b60006080828403121561190d578081fd5b8060005b60028110156119fb576119e88483611b92565b60609384019391909101906001016119d5565b50505050565b8060005b60028110156119fb57611a3684835180516001600160a01b0316825260208082015190830152604090810151910152565b6060939093019260209190910190600101611a05565b6040818337600060408301525050565b8060005b60028110156119fb578151845260209384019390910190600101611a60565b6001600160a01b03611a908261186c565b168252602080830181830160005b6002811015611ad357611ac583611ab48461186c565b6001600160a01b0316815260200190565b925090830190600101611a9e565b5050505060608101356060830152611af160808301608083016119d1565b610140611b02818401828401611a4c565b50610180611b14818401828401611a4c565b506101c081810135908301526101e090810135910152565b6001600160a01b03611b3d8261186c565b16825260208101356020830152611b5660408201611888565b15156040830152604060608201606084013760a0818101359083015260c0808201359083015260e0808201359083015261010090810135910152565b6001600160a01b03611ba38261186c565b16825260208181013590830152604090810135910152565b60c08101611bc98284611b92565b606083810135908301526001600160a01b03611be76080850161186c565b16608083015260a083013560a083015292915050565b6101a08101611c0c8284611b2c565b610120611c1a818501611898565b60028110611c3857634e487b7160e01b600052602160045260246000fd5b90830152610140611c4a848201611888565b151590830152610160838101359083015261018092830135929091019190915290565b6101408101611c7c8284611b2c565b610120611c8a818501611888565b1515818401525092915050565b6102408101611ca68284611a7f565b61020083810135908301526102206001600160a01b03611cc782860161186c565b16818401525092915050565b8135815260808101611ceb6020808401908501611b92565b92915050565b82815261022081016118c16020830184611a7f565b82815281516001600160a01b031660208083019190915282810151610220830191906040840160005b6002811015611d575782516001600160a01b0316825260208201928401929150600101611d2f565b50505050604083015160808301526060830151611d7760a0840182611a01565b506080830151611d8b610160840182611a5c565b5060a0830151611d9f6101a0840182611a5c565b5060c08301516101e083015260e08301516102008301529392505050565b82815261014081016118c16020830184611b2c565b60006101408201905083825260018060a01b038351166020830152602083015160408301526040830151151560608301526060830151611e156080840182611a5c565b50608083015160c083015260a083015160e083015260c083015161010083015260e08301516101208301529392505050565b828152608081016118c16020830184611b92565b828152608081016118c1602083018480516001600160a01b0316825260208082015190830152604090810151910152565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ec357634e487b7160e01b600052604160045260246000fd5b604052919050565b60008219821115611ede57611ede611f15565b500190565b600082821015611ef557611ef5611f15565b500390565b6000600019821415611f0e57611f0e611f15565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ef545132ffc8584e277fa5c52184c7fd9e43e0831f6456afca562e1673c7e28b64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/github/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Tuple","ctc3","ctc4","T_Bool","ctc5","ctc6","T_Data","Voter","ctc7","ctc8","T_Array","checkedBigNumberify","UInt_max","ctc9","ctc10","ctc11","ctc12","ctc13","ctc14","ctc15","ctc16","ctc17","v18","creationTime","v20","selfAddress","v22","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v24","data","v26","time","v23","from","push","amt","kind","tok","undefined","v38","v63","v64","v65","v59","v60","v61","v62","v620","v621","v622","v68","le","nextSt","nextSt_noTime","view","isHalt","v338","add","v351","v352","v353","v623","v624","v625","v359","gt","v361","v468","sub","txn2","recv","v295","v299","v294","v301","v302","v303","v305","Array_set","v308","v321","reduce","v314","v315","v317","addressEq","v318","v319","v324","v327","v328","v329","v330","v332","v333","v334","v335","cv59","cv60","cv61","cv62","cv620","cv621","cv622","v398","protect","finishVoting","at","fs","msg","who","v401","v413","v426","v412","v414","v415","v419","v421","v425","v427","v428","v430","v433","assert","v437","cv351","cv352","cv353","cv623","cv624","cv625","v441","v442","v443","v444","ge","v445","v449","to","v461","v463","v464","v465","v454","v455","v457","v458","v459","v462","didTimeout","txn3","v473","v471","v493","v485","v486","v489","v491","v502","v528","v529","v551","eq","v555","v556","v558","v559","v564","v565","v566","v569","v573","v574","v575","v576","v577","v580","v585","v591","v595","v601","v602","v605","v607","v608","v609","v612","v606","v611","Nominee","v181","v184","getParams","v192","v218","v219","v241","v245","v246","v248","v249","v254","v255","v256","v259","v263","v264","v265","v266","v267","v270","v275","v281","v285","v291","v384","v385","v386","v387","v388","v389","v390","shouldBuyTicket","v406","v409","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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ElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AACA;AAGC;MAhgBmB7G,K;AAggBnB;AAEH,MAAMiO,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFc;AAuFZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArJc;AAsJZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArKc;AAsKZlP,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3Mc;AA4MZmP,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL,IAHK,EAGC,IAHD,EAGO,IAHP,EAGa,IAHb,EAGmB;AAC3BD,IAAAA,KAAK,EAAE,EADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAHnB,EAML;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GANK,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,CA5ME;AA4NZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjvPS,EAuPN,IAvPM,EAuPA,IAvPA,EAuPM,IAvPN,EAuPY,IAvPZ,EAuPmloCS,EAkor4CS,EAqpvDS,CA5NK;AAi9DZC,EAAAA,WAAW,EAAE;AAj9DD,CAAd;AAm9DA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzxBa;AA0xBXC,EAAAA,QAAQ,EAAG,08fA1xBA;AA2xBXC,EAAAA,UAAU,EAAG,gBA3xBF;AA4xBX7P,EAAAA,KAAK,EAAE;AA5xBI,CAAb;AAgyBA,OAAO,MAAM8P,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Bool;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc4,\n    Voter: ctc5\n    });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc13 = stdlib.T_Tuple([]);\n  const ctc14 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc15 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc0, ctc14, ctc1, ctc15, ctc8, ctc8, ctc1, ctc1]);\n  const ctc17 = stdlib.T_Tuple([ctc1, ctc0, ctc14, ctc1, ctc15, ctc8, ctc8, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 19));\n  \n  const v22 = [v20, stdlib.checkedBigNumberify('./index.rsh:35:37:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:35:40:decimal', stdlib.UInt_max, 0)];\n  \n  const txn1 = await (ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), [ctc1, ctc2], [v18, v22], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n    const v63 = [v38, v38];\n    const v64 = [v24, v24];\n    const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n    const v59 = v63;\n    const v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n    const v61 = v64;\n    const v62 = v65;\n    const v620 = v26;\n    const v621 = v18;\n    const v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      \n      return v68;})()) {\n      sim_r.nextSt = stdlib.digest(ctc16, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc17, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n      const v351 = true;\n      const v352 = v65;\n      const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n      const v623 = v620;\n      const v624 = v621;\n      const v625 = v622;\n      \n      if ((() => {\n        const v359 = stdlib.gt(v338, v624);\n        const v361 = v359 ? v351 : false;\n        \n        return v361;})()) {\n        const v468 = stdlib.sub(v338, v624);\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc3], false, false));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v468 = stdlib.sub(v338, v624);\n    const v398 = stdlib.protect(ctc4, await interact.finishVoting(), {\n      at: './index.rsh:128:71:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:127:25:function exp)', 'at ./index.rsh:103:64:application call to \"runAdmin0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'finishVoting',\n      who: 'Admin'\n      });\n    \n    const v401 = ['Admin', v398];\n    \n    const txn2 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v468, v623, v625, v401], [stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0), []], [ctc6], true, false, v468, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      \n      let v414;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v415 = v413[1];\n          v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v419 = v413[1];\n          const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v414 = v421;\n          \n          break;\n          }\n        }\n      const v425 = stdlib.add(v625, v414);\n      sim_r.txns.push({\n        amt: v414,\n        kind: 'to',\n        tok: undefined\n        });\n      let v427;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v428 = v413[1];\n          const v430 = stdlib.addressEq(v412, v23);\n          v427 = v430;\n          \n          break;\n          }\n        case 'Voter': {\n          const v433 = v413[1];\n          v427 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n        });\n      switch (v413[0]) {\n        case 'Admin': {\n          const v437 = v413[1];\n          const cv351 = v437;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv623 = v426;\n          const cv624 = v623;\n          const cv625 = v425;\n          \n          (() => {\n            const v351 = cv351;\n            const v352 = cv352;\n            const v353 = cv353;\n            const v623 = cv623;\n            const v624 = cv624;\n            const v625 = cv625;\n            \n            if ((() => {\n              const v359 = stdlib.gt(v338, v624);\n              const v361 = v359 ? v351 : false;\n              \n              return v361;})()) {\n              const v468 = stdlib.sub(v338, v624);\n              sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }})();\n          break;\n          }\n        case 'Voter': {\n          const v441 = v413[1];\n          let v442;\n          const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v444) {\n            const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v449 = stdlib.sub(v425, v445);\n            sim_r.txns.push({\n              amt: v445,\n              kind: 'from',\n              to: v412,\n              tok: undefined\n              });\n            const v461 = [v352, v353, true];\n            v442 = v461;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v449;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          else {\n            const v454 = v352[v443];\n            const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v457 = stdlib.Array_set(v352, v443, v455);\n            const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v459 = stdlib.add(v353, v458);\n            const v462 = [v457, v459, true];\n            v442 = v462;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          break;\n          }\n        }\n      return sim_r;\n      })));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc4, ctc8, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      \n      continue;\n      }\n    else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v415 = v413[1];\n          v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v419 = v413[1];\n          const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v414 = v421;\n          \n          break;\n          }\n        }\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v428 = v413[1];\n          const v430 = stdlib.addressEq(v412, v23);\n          v427 = v430;\n          \n          break;\n          }\n        case 'Voter': {\n          const v433 = v413[1];\n          v427 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n        });\n      switch (v413[0]) {\n        case 'Admin': {\n          const v437 = v413[1];\n          const cv351 = v437;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv623 = v426;\n          const cv624 = v623;\n          const cv625 = v425;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v623 = cv623;\n          v624 = cv624;\n          v625 = cv625;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v441 = v413[1];\n          let v442;\n          const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v444) {\n            const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v449 = stdlib.sub(v425, v445);\n            ;\n            const v461 = [v352, v353, true];\n            v442 = v461;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v449;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          else {\n            const v454 = v352[v443];\n            const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v457 = stdlib.Array_set(v352, v443, v455);\n            const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v459 = stdlib.add(v353, v458);\n            const v462 = [v457, v459, true];\n            v442 = v462;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const v493 = v352.reduce((v485, v486) => {\n    const v489 = stdlib.gt(v486, v485);\n    const v491 = v489 ? v486 : v485;\n    \n    return v491;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v502 = ['None', null];\n  const v528 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v529 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v551 = stdlib.eq(v528, v493);\n  const v555 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v556 = [v555, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v558 = [v502, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v559 = v551 ? v556 : v558;\n  const v564 = v559[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v565 = v559[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v566;\n  switch (v564[0]) {\n    case 'None': {\n      \n      const v569 = stdlib.eq(v529, v493);\n      const v573 = stdlib.add(v565, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v574 = ['Some', v565];\n      const v575 = [v574, v565];\n      const v576 = [v564, v573];\n      const v577 = v569 ? v575 : v576;\n      v566 = v577;\n      \n      break;\n      }\n    case 'Some': {\n      const v580 = v564[1];\n      v566 = v559;\n      \n      break;\n      }\n    }\n  const v585 = v566[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v591;\n  switch (v585[0]) {\n    case 'None': {\n      \n      v591 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v595 = v585[1];\n      v591 = v595;\n      \n      break;\n      }\n    }\n  const v601 = v61[v591];\n  const v602 = v601[stdlib.checkedBigNumberify('./index.rsh:161:55:array ref', stdlib.UInt_max, 2)];\n  const v605 = v601[stdlib.checkedBigNumberify('./index.rsh:162:57:array ref', stdlib.UInt_max, 0)];\n  \n  \n  const txn2 = await (ctc.sendrecv(6, 3, stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1, ctc1, ctc0, ctc1], [v23, v623, v625, v602, v605, v591], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 5), v23, v623, v625]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:166:19:dot', stdlib.UInt_max, 5), v23, v625]);\n    const [v607, v608, v609] = txn2.data;\n    const v612 = txn2.time;\n    const v606 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v611 = stdlib.addressEq(v23, v606);\n    stdlib.assert(v611, {\n      at: './index.rsh:166:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      amt: v625,\n      kind: 'from',\n      to: v608,\n      tok: undefined\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc13, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc13, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:169:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Bool;\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc16 = stdlib.T_Data({\n    Admin: ctc10,\n    Voter: ctc15\n    });\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc2], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const v181 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 180));\n    const v184 = stdlib.protect(ctc1, await interact.getParams(v181), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v192 = ['None', null];\n    const v218 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v219 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v241 = stdlib.addressEq(v218, v181);\n    const v245 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v246 = [v245, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v248 = [v192, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v249 = v241 ? v246 : v248;\n    const v254 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v255 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v256;\n    switch (v254[0]) {\n      case 'None': {\n        \n        const v259 = stdlib.addressEq(v219, v181);\n        const v263 = stdlib.add(v255, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v264 = ['Some', v255];\n        const v265 = [v264, v255];\n        const v266 = [v254, v263];\n        const v267 = v259 ? v265 : v266;\n        v256 = v267;\n        \n        break;\n        }\n      case 'Some': {\n        const v270 = v254[1];\n        v256 = v249;\n        \n        break;\n        }\n      }\n    const v275 = v256[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v281;\n    switch (v275[0]) {\n      case 'None': {\n        \n        v281 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v285 = v275[1];\n        v281 = v285;\n        \n        break;\n        }\n      }\n    \n    const v291 = [v184, v181];\n    \n    const txn2 = await (ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc3], [v23, v59, v60, v61, v62, v65, v620, v622, v291], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc3], true, false, false, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n      const [v295] = txn2.data;\n      const v299 = txn2.time;\n      const v294 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v303 = [v301, v60, v302];\n      const v305 = stdlib.Array_set(v61, v60, v303);\n      const v308 = stdlib.Array_set(v59, v60, v301);\n      const v321 = v59.reduce((v314, v315) => {\n        const v317 = stdlib.addressEq(v301, v315);\n        const v318 = v317 ? true : false;\n        const v319 = v314 ? v314 : v318;\n        \n        return v319;}, false)\n      const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v327 = stdlib.Array_set(v62, v60, v302);\n      const v328 = [v61, v59, v60, v62];\n      const v329 = [v305, v308, v324, v327];\n      const v330 = v321 ? v328 : v329;\n      const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv59 = v333;\n      const cv60 = v334;\n      const cv61 = v332;\n      const cv62 = v335;\n      const cv620 = v299;\n      const cv621 = v620;\n      const cv622 = v622;\n      \n      (() => {\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v62 = cv62;\n        const v620 = cv620;\n        const v621 = cv621;\n        const v622 = cv622;\n        \n        if ((() => {\n          const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          \n          return v68;})()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v620, v622]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v622]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n          const v351 = true;\n          const v352 = v65;\n          const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n          const v623 = v620;\n          const v624 = v621;\n          const v625 = v622;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v468 = stdlib.sub(v338, v624);\n    const txn2 = await (ctc.recv(7, 1, [ctc16], false, v468));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      \n      continue;\n      }\n    else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v415 = v413[1];\n          v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v419 = v413[1];\n          const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v414 = v421;\n          \n          break;\n          }\n        }\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v428 = v413[1];\n          const v430 = stdlib.addressEq(v412, v23);\n          v427 = v430;\n          \n          break;\n          }\n        case 'Voter': {\n          const v433 = v413[1];\n          v427 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Nominee'\n        });\n      switch (v413[0]) {\n        case 'Admin': {\n          const v437 = v413[1];\n          const cv351 = v437;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv623 = v426;\n          const cv624 = v623;\n          const cv625 = v425;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v623 = cv623;\n          v624 = cv624;\n          v625 = cv625;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v441 = v413[1];\n          let v442;\n          const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v444) {\n            const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v449 = stdlib.sub(v425, v445);\n            ;\n            const v461 = [v352, v353, true];\n            v442 = v461;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v449;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          else {\n            const v454 = v352[v443];\n            const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v457 = stdlib.Array_set(v352, v443, v455);\n            const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v459 = stdlib.add(v353, v458);\n            const v462 = [v457, v459, true];\n            v442 = v462;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const txn2 = await (ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false));\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc5,\n    Voter: ctc4\n    });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc2], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v620 = v26;\n  let v621 = v18;\n  let v622 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc3], false, false));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv620 = v299;\n    const cv621 = v620;\n    const cv622 = v622;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v620 = cv620;\n    v621 = cv621;\n    v622 = cv622;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v621, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v623 = v620;\n  let v624 = v621;\n  let v625 = v622;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v624);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v468 = stdlib.sub(v338, v624);\n    const v384 = v62[stdlib.checkedBigNumberify('./index.rsh:108:81:array ref', stdlib.UInt_max, 0)];\n    const v385 = v62[stdlib.checkedBigNumberify('./index.rsh:108:91:array ref', stdlib.UInt_max, 1)];\n    const v386 = v352[stdlib.checkedBigNumberify('./index.rsh:108:102:array ref', stdlib.UInt_max, 0)];\n    const v387 = v352[stdlib.checkedBigNumberify('./index.rsh:108:111:array ref', stdlib.UInt_max, 1)];\n    const v388 = [v384, v385];\n    const v389 = [v386, v387];\n    const v390 = stdlib.protect(ctc4, await interact.shouldBuyTicket(v388, v389), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:64:application call to \"runVoter0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    \n    const v406 = ['Voter', v390];\n    const v409 = v390[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n    \n    const txn2 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v468, v623, v625, v406], [v409, []], [ctc6], true, false, v468, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      \n      let v414;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v415 = v413[1];\n          v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v419 = v413[1];\n          const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v414 = v421;\n          \n          break;\n          }\n        }\n      const v425 = stdlib.add(v625, v414);\n      sim_r.txns.push({\n        amt: v414,\n        kind: 'to',\n        tok: undefined\n        });\n      let v427;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v428 = v413[1];\n          const v430 = stdlib.addressEq(v412, v23);\n          v427 = v430;\n          \n          break;\n          }\n        case 'Voter': {\n          const v433 = v413[1];\n          v427 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n        });\n      switch (v413[0]) {\n        case 'Admin': {\n          const v437 = v413[1];\n          const cv351 = v437;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv623 = v426;\n          const cv624 = v623;\n          const cv625 = v425;\n          \n          (() => {\n            const v351 = cv351;\n            const v352 = cv352;\n            const v353 = cv353;\n            const v623 = cv623;\n            const v624 = cv624;\n            const v625 = cv625;\n            \n            if ((() => {\n              const v359 = stdlib.gt(v338, v624);\n              const v361 = v359 ? v351 : false;\n              \n              return v361;})()) {\n              const v468 = stdlib.sub(v338, v624);\n              sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }})();\n          break;\n          }\n        case 'Voter': {\n          const v441 = v413[1];\n          let v442;\n          const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v444) {\n            const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v449 = stdlib.sub(v425, v445);\n            sim_r.txns.push({\n              amt: v445,\n              kind: 'from',\n              to: v412,\n              tok: undefined\n              });\n            const v461 = [v352, v353, true];\n            v442 = v461;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v449;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          else {\n            const v454 = v352[v443];\n            const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v457 = stdlib.Array_set(v352, v443, v455);\n            const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v459 = stdlib.add(v353, v458);\n            const v462 = [v457, v459, true];\n            v442 = v462;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v623 = cv623;\n              const v624 = cv624;\n              const v625 = cv625;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v624);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v468 = stdlib.sub(v338, v624);\n                sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          break;\n          }\n        }\n      return sim_r;\n      })));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc5, ctc8, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v468, v623, v625], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n        const [] = txn3.data;\n        const v473 = txn3.time;\n        const v471 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv623 = v473;\n        const cv624 = v623;\n        const cv625 = v625;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v623 = cv623;\n          const v624 = cv624;\n          const v625 = cv625;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v624);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v468 = stdlib.sub(v338, v624);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v468, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v623, v625]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v625]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:158:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v473 = txn3.time;\n      const v471 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv623 = v473;\n      const cv624 = v623;\n      const cv625 = v625;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v623 = cv623;\n      v624 = cv624;\n      v625 = cv625;\n      \n      continue;\n      }\n    else {\n      const [v413] = txn2.data;\n      const v426 = txn2.time;\n      const v412 = txn2.from;\n      let v414;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v415 = v413[1];\n          v414 = stdlib.checkedBigNumberify('./index.rsh:135:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v419 = v413[1];\n          const v421 = v419[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v414 = v421;\n          \n          break;\n          }\n        }\n      const v425 = stdlib.add(v625, v414);\n      ;\n      let v427;\n      switch (v413[0]) {\n        case 'Admin': {\n          const v428 = v413[1];\n          const v430 = stdlib.addressEq(v412, v23);\n          v427 = v430;\n          \n          break;\n          }\n        case 'Voter': {\n          const v433 = v413[1];\n          v427 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v427, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n        });\n      switch (v413[0]) {\n        case 'Admin': {\n          const v437 = v413[1];\n          const cv351 = v437;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv623 = v426;\n          const cv624 = v623;\n          const cv625 = v425;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v623 = cv623;\n          v624 = cv624;\n          v625 = cv625;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v441 = v413[1];\n          let v442;\n          const v443 = v441[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v444 = stdlib.ge(v443, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v444) {\n            const v445 = v441[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v449 = stdlib.sub(v425, v445);\n            ;\n            const v461 = [v352, v353, true];\n            v442 = v461;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v449;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          else {\n            const v454 = v352[v443];\n            const v455 = stdlib.add(v454, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v457 = stdlib.Array_set(v352, v443, v455);\n            const v458 = v441[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v459 = stdlib.add(v353, v458);\n            const v462 = [v457, v459, true];\n            v442 = v462;\n            const v463 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v464 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v465 = v442[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v465;\n            const cv352 = v463;\n            const cv353 = v464;\n            const cv623 = v426;\n            const cv624 = v623;\n            const cv625 = v425;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v623 = cv623;\n            v624 = cv624;\n            v625 = cv625;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const txn2 = await (ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false));\n  const [v607, v608, v609] = txn2.data;\n  const v612 = txn2.time;\n  const v606 = txn2.from;\n  ;\n  const v611 = stdlib.addressEq(v23, v606);\n  stdlib.assert(v611, {\n    at: './index.rsh:166:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  ;\n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 137\n    }, null, null, null, null, {\n    count: 11,\n    size: 177\n    }, {\n    count: 14,\n    size: 187\n    }, {\n    count: 13,\n    size: 170\n    }, {\n    count: 14,\n    size: 369\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nsubstring 0 32\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 255\nload 255\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 252\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:166:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:166:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 254\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l1\nload 248\nsubstring 1 2\nbtoi\nstore 243\nint 0\nstore 244\nl1:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l2\nload 248\nsubstring 1 17\ndup\nstore 243\nsubstring 8 16\nbtoi\nstore 244\nl2:\nl0:\nload 249\nload 244\n+\nstore 243\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 244\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l4\nload 248\nsubstring 1 2\nbtoi\nstore 241\ngtxn 0 Sender\nload 255\n==\nstore 242\nl4:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l5\nload 248\nsubstring 1 17\nstore 241\nint 1\nstore 242\nl5:\nl3:\n// Nothing\n// \"./index.rsh:103:64:application\"\n// \"[]\"\nload 242\nassert\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l7\nload 248\nsubstring 1 2\nbtoi\nstore 241\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 241\n&&\nbz l8\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 240\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 241\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 240\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 240\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl7:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l9\nload 248\nsubstring 1 17\ndup\nstore 241\nsubstring 0 8\nbtoi\ndup\nstore 239\nint 2\n>=\nbz l10\nload 241\nsubstring 8 16\nbtoi\nstore 238\nload 243\nload 238\n-\nstore 237\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 238\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 0 16\nstore 236\nload 240\nsubstring 16 24\nbtoi\nstore 235\nload 240\nsubstring 24 25\nbtoi\nstore 234\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 233\nload 234\n&&\ndup\nstore 232\nbz l11\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 231\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 234\nitob // bool\nsubstring 7 8\nconcat\nload 236\nconcat\nload 235\nitob\nconcat\nload 231\nitob\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 231\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl11:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl10:\nload 252\nint 0\nint 8\nload 239\n*\nsubstring3\nload 252\nint 8\nload 239\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 239\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 241\nsubstring 8 16\nbtoi\n+\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 24 25\nbtoi\nstore 238\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 237\nload 238\n&&\ndup\nstore 236\nbz l12\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 235\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 238\nitob // bool\nsubstring 7 8\nconcat\nload 240\nsubstring 0 16\nconcat\nload 240\nsubstring 16 24\nconcat\nload 235\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 235\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl12:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl9:\nl6:\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 253\n&&\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 242\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 242\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 242\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 250\nconcat\nint 0\nitob\nconcat\nload 241\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v607\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v608\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v609\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v622\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v607\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v608\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v609\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v468\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v623\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v625\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v622\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611f61806100826000396000f3fe60806040526004361061004e5760003560e01c8063404a34781461005a5780637ad466c21461006f578063b87338b014610082578063db8500b714610095578063ec2cc884146100a857610055565b3661005557005b600080fd5b61006d610068366004611958565b6100bb565b005b61006d61007d3660046119c0565b610214565b61006d61009036600461196a565b6103a2565b61006d6100a3366004611946565b6107cd565b61006d6100b63660046118fc565b610e45565b6040516100cf906004908390602001611dbd565b6040516020818303038152906040528051906020012060001c600054146100f557600080fd5b6000805561010b60c082013560e0830135611ecb565b43101561011757600080fd5b341561012257600080fd5b7fb91e5fee7d80cd4df9272e91ff7413963d1ef9dca2c3e540f3315850b08b2a8e816040516101519190611c6d565b60405180910390a161016161144d565b61016e60208301836118a7565b81516001600160a01b039091169052805160208084013591015261019860608301604084016118c8565b60208201519015159052604080518082018252906060840190600290839083908082843760009201919091525050506020808301805190910191909152805160a080850135604090920191909152815143606090910152815160e0850135608090910152905161010084013591015261021081610f39565b5050565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461025157600080fd5b6000805561025d61147b565b341561026857600080fd5b61027860408301602084016118a7565b81516001600160a01b0391909116905261029860408301602084016118a7565b81516001600160a01b03919091166020918201526102be9036849003840190840161197c565b602082810151919091526102da9036849003840190840161197c565b60208281015181019190915260408083018051600090819052905190920191909152517fa6e69dadb79658a46c005a5f88a8cb73e8d968dc2d6bcf01c1f3f07d907132d79061032a908490611cd3565b60405180910390a161033a6114a8565b80513390526040808301805183516020908101919091528451818501805191909152805160009083018190529186015181519094019390935290518251606001528151436080909101528151853560a090910152905160c0015261039d8161106f565b505050565b6040516103b6906002908390602001611cf1565b6040516020818303038152906040528051906020012060001c600054146103dc57600080fd5b600080556103e86114c8565b34156103f357600080fd5b610405610240830161022084016118a7565b81516001600160a01b03909116905280516060830135602091820152815161020084013560409091015260009082018190525b60028110156104ea5760208301816002811061046457634e487b7160e01b600052603260045260246000fd5b60200201602081019061047791906118a7565b6001600160a01b0316604083015260208201516104cb5760408201516001600160a01b03166104ae610240850161022086016118a7565b6001600160a01b0316146104c35760006104c6565b60015b6104d1565b81602001515b15156020830152806104e281611efa565b915050610438565b50602081015115156060820152604080518082019091526080830160026000835b82821015610537576105286060830285013681900381019061197c565b8152602001906001019061050b565b50505050608082015152604080518082018252906020840190600290839083908082843760009201919091525050506080820180516020019190915251606083013560409182015280518082018252906101408401906002908390839080828437600092018290525060808086015160600194909452604080518082019091526106059490935086019150600290835b828210156105f3576105e46060830285013681900381019061197c565b815260200190600101906105c7565b50508451606087013592509050611178565b60a08201515260408051808201825261064f91602085019060029083908390808284376000920191909152505050606084013561064a610240860161022087016118a7565b611216565b60a08201516020015261066760016060840135611ecb565b60a0820151604090810191909152805180820182526106ac916101408501906002908390839080828437600092019190915250505060608401356102008501356112d0565b8160a001516060018190525080606001516106cb578060a001516106d1565b80608001515b60c08201526040517f8400c30339f6628441ca54ee41b7d90613faa6c375dabda844e99fb7fe65a6bf90610706908490611c97565b60405180910390a16107166114a8565b61072360208401846118a7565b81516001600160a01b0390911690526040805180820182529061018085019060029083908390808284376000920191909152505082516020908101929092525060c080840180518301518385018051919091528151604090810151825190950194909452815151815190940193909352516060908101518351909101528151436080919091015281516101c086013560a0919091015290516101e085013591015261039d8161106f565b6040516107e1906004908390602001611dbd565b6040516020818303038152906040528051906020012060001c6000541461080757600080fd5b60008055610813611529565b61082560c083013560e0840135611ecb565b431061083057600080fd5b6000610844610140840161012085016118e2565b600181111561086357634e487b7160e01b600052602160045260246000fd5b141561088b5761087b610160830161014084016118c8565b15156020820152600081526108e5565b600161089f610140840161012085016118e2565b60018111156108be57634e487b7160e01b600052602160045260246000fd5b14156108e5576108d73683900383016101608401611913565b604082018190526020015181525b80516108f690610100840135611ecb565b60608201528051341461090857600080fd5b600061091c610140840161012085016118e2565b600181111561093b57634e487b7160e01b600052602160045260246000fd5b141561097c57610953610160830161014084016118c8565b151560a082015261096760208301836118a7565b6001600160a01b0316331460808201526109d5565b6001610990610140840161012085016118e2565b60018111156109af57634e487b7160e01b600052602160045260246000fd5b14156109d5576109c83683900383016101608401611913565b60c0820152600160808201525b80608001516109e357600080fd5b60006109f7610140840161012085016118e2565b6001811115610a1657634e487b7160e01b600052602160045260246000fd5b1415610b1e57610a2e610160830161014084016118c8565b151560e08201526040517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610a65908490611bfd565b60405180910390a1610a7561144d565b610a8260208401846118a7565b81516001600160a01b03909116905280516020808501359181019190915260e0830151908201519015159052604080518082018252906060850190600290839083908082843760009201919091525050506020808301805190910191909152805160a080860135604090920191909152815143606091820152825160e087013560809091015284015191510152610b1881610f39565b50610210565b6001610b32610140840161012085016118e2565b6001811115610b5157634e487b7160e01b600052602160045260246000fd5b141561021057610b6a3683900383016101608401611913565b610100820181905251600211610cd95761010081015160200151604051339180156108fc02916000818181858888f19350505050158015610baf573d6000803e3d6000fd5b50604080518082018252906060840190600290839083908082843760009201919091525050506101408201805191909152805160a0840135602090910152805160016040918201529051610120830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610c2d908490611bfd565b60405180910390a1610c3d61144d565b610c4a60208401846118a7565b81516001600160a01b03909116905280516020808501359181019190915261012083018051604090810151838501805191151590915282515181518501529151830151825190910152805143606091820152905160e08601356080909101526101008401519091015190830151610cc19190611ee3565b602082015160a00152610cd381610f39565b50610e40565b604080518082018252610d4191606085019060029083908390808284376000920191909152505050610100830151516001606086018260028110610d2d57634e487b7160e01b600052603260045260246000fd5b6020020135610d3c9190611ecb565b6112d0565b6101608201515261010081015160200151610d609060a0840135611ecb565b6101608201805160200191909152805160016040918201529051610120830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610dae908490611bfd565b60405180910390a1610dbe61144d565b610dcb60208401846118a7565b81516001600160a01b0390911690528051602080850135918101919091526101208301805160409081015183850180519115159091528251518151850152915190920151815190920191909152805143606091820152815160e0860135608090910152830151905160a00152610b1881610f39565b610210565b604051610e59906005908390602001611e47565b6040516020818303038152906040528051906020012060001c60005414610e7f57600080fd5b600080553415610e8e57600080fd5b33610e9c60208301836118a7565b6001600160a01b031614610eaf57600080fd5b610ebf60a08201608083016118a7565b604080516001600160a01b0392909216919083013580156108fc02916000818181858888f19350505050158015610efa573d6000803e3d6000fd5b507f83e534428f92bfcb95a8170bbd5cd7a87ec89ee978b81e96168024da7cb7429d81604051610f2a9190611bbb565b60405180910390a16000805533ff5b60408051602081019091526000815281602001516080015182600001516020015111610f66576000610f6d565b6020820151515b1561102d57816020015160800151826000015160200151610f8e9190611ee3565b8152610f986115ef565b8251516001600160a01b031681528251602090810151818301528084018051511515604080850191909152815183015160608086019190915282518201516080860152855160a08087019190915283519091015160c086015291519091015160e08401525161100c91600491849101611dd2565b60408051601f19818403018152919052805160209091012060005550610210565b611035611645565b82515181516001600160a01b03909116905260208084018051606001518351909201919091525160a0015181516040015261039d81611340565b60018160200151602001511161111d57611087611677565b8151516001600160a01b031681526020808301805151828401528051820151604080850191909152815181015160608086019190915282510151608080860191909152855184015160a08601528251015160c08086019190915291519091015160e0840152516110fc91600291849101611d06565b60408051601f19818403018152919052805160209091012060005550611175565b6111256116dd565b81515181516001600160a01b0390911690528151602090810151825182015282018051608090810151835160400152815160a00151835160600152905160c00151825190910152610210816113c2565b50565b6111806116f0565b60005b60028110156111e8578481600281106111ac57634e487b7160e01b600052603260045260246000fd5b60200201518282600281106111d157634e487b7160e01b600052603260045260246000fd5b6020020152806111e081611efa565b915050611183565b508181846002811061120a57634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b61121e611742565b60005b60028110156112945784816002811061124a57634e487b7160e01b600052603260045260246000fd5b602002015182826002811061126f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201528061128c81611efa565b915050611221565b50818184600281106112b657634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b6112d8611742565b60005b60028110156111e85784816002811061130457634e487b7160e01b600052603260045260246000fd5b602002015182826002811061132957634e487b7160e01b600052603260045260246000fd5b60200201528061133881611efa565b9150506112db565b61136d604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8151516001600160a01b03168152815160209081015181830152825160409081015181840152516113a391600591849101611e5b565b60408051601f1981840301815291905280516020909101206000555050565b6113ca61144d565b81515181516001600160a01b0390911690528151606001516113f0906216e36090611ecb565b815160209081019190915280820180516001905283518201518151909201919091528051600060409182015283510151815160609081019190915283510151815160809081019190915283510151905160a0015261021081610f39565b604080516080810182526000918101828152606082019290925290815260208101611476611760565b905290565b604051806060016040528061148e611742565b815260200161149b6116f0565b8152602001611476611742565b60405180604001604052806114bb61177c565b815260200161147661179f565b6040805161014081018252600060e082018181526101008301829052610120830182905282526020820181905291810182905260608101919091526080810161150f6117ee565b815260200161151c6117ee565b81526020016114766117ee565b60405180610180016040528060008152602001600015158152602001611562604051806040016040528060008152602001600081525090565b81526020016000815260200160001515815260200160001515815260200161159d604051806040016040528060008152602001600081525090565b81526020016000151581526020016115c8604051806040016040528060008152602001600081525090565b81526020016115d5611822565b81526020016115e2611822565b8152602001611476611822565b60405180610100016040528060006001600160a01b0316815260200160008152602001600015158152602001611623611742565b8152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260009181018281526060820183905260808201929092529081905b8152600060209091015290565b60405180610100016040528060006001600160a01b0316815260200161169b611742565b8152602001600081526020016116af6116f0565b81526020016116bc611742565b81526020016116c9611742565b815260200160008152602001600081525090565b604051806040016040528061166a611849565b60405180604001604052806002905b61172c604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816116ff5790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c00160405280600015158152602001611623611742565b604051806040016040528060006001600160a01b03168152602001611476611742565b6040518060e001604052806117b2611742565b8152602001600081526020016117c66116f0565b81526020016117d3611742565b81526020016000815260200160008152602001600081525090565b60405180608001604052806118016116f0565b815260200161180e611742565b815260200160008152602001611476611742565b6040518060600160405280611835611742565b815260006020820181905260409091015290565b6040518060a0016040528060006001600160a01b031681526020016117d3611742565b80356001600160a01b038116811461188357600080fd5b919050565b8035801515811461188357600080fd5b80356002811061188357600080fd5b6000602082840312156118b8578081fd5b6118c18261186c565b9392505050565b6000602082840312156118d9578081fd5b6118c182611888565b6000602082840312156118f3578081fd5b6118c182611898565b600060c0828403121561190d578081fd5b50919050565b600060408284031215611924578081fd5b61192e6040611e8c565b82358152602083013560208201528091505092915050565b60006101a0828403121561190d578081fd5b6000610140828403121561190d578081fd5b6000610240828403121561190d578081fd5b60006060828403121561198d578081fd5b6119976060611e8c565b6119a08361186c565b815260208301356020820152604083013560408201528091505092915050565b60006080828403121561190d578081fd5b8060005b60028110156119fb576119e88483611b92565b60609384019391909101906001016119d5565b50505050565b8060005b60028110156119fb57611a3684835180516001600160a01b0316825260208082015190830152604090810151910152565b6060939093019260209190910190600101611a05565b6040818337600060408301525050565b8060005b60028110156119fb578151845260209384019390910190600101611a60565b6001600160a01b03611a908261186c565b168252602080830181830160005b6002811015611ad357611ac583611ab48461186c565b6001600160a01b0316815260200190565b925090830190600101611a9e565b5050505060608101356060830152611af160808301608083016119d1565b610140611b02818401828401611a4c565b50610180611b14818401828401611a4c565b506101c081810135908301526101e090810135910152565b6001600160a01b03611b3d8261186c565b16825260208101356020830152611b5660408201611888565b15156040830152604060608201606084013760a0818101359083015260c0808201359083015260e0808201359083015261010090810135910152565b6001600160a01b03611ba38261186c565b16825260208181013590830152604090810135910152565b60c08101611bc98284611b92565b606083810135908301526001600160a01b03611be76080850161186c565b16608083015260a083013560a083015292915050565b6101a08101611c0c8284611b2c565b610120611c1a818501611898565b60028110611c3857634e487b7160e01b600052602160045260246000fd5b90830152610140611c4a848201611888565b151590830152610160838101359083015261018092830135929091019190915290565b6101408101611c7c8284611b2c565b610120611c8a818501611888565b1515818401525092915050565b6102408101611ca68284611a7f565b61020083810135908301526102206001600160a01b03611cc782860161186c565b16818401525092915050565b8135815260808101611ceb6020808401908501611b92565b92915050565b82815261022081016118c16020830184611a7f565b82815281516001600160a01b031660208083019190915282810151610220830191906040840160005b6002811015611d575782516001600160a01b0316825260208201928401929150600101611d2f565b50505050604083015160808301526060830151611d7760a0840182611a01565b506080830151611d8b610160840182611a5c565b5060a0830151611d9f6101a0840182611a5c565b5060c08301516101e083015260e08301516102008301529392505050565b82815261014081016118c16020830184611b2c565b60006101408201905083825260018060a01b038351166020830152602083015160408301526040830151151560608301526060830151611e156080840182611a5c565b50608083015160c083015260a083015160e083015260c083015161010083015260e08301516101208301529392505050565b828152608081016118c16020830184611b92565b828152608081016118c1602083018480516001600160a01b0316825260208082015190830152604090810151910152565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ec357634e487b7160e01b600052604160045260246000fd5b604052919050565b60008219821115611ede57611ede611f15565b500190565b600082821015611ef557611ef5611f15565b500390565b6000600019821415611f0e57611f0e611f15565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ef545132ffc8584e277fa5c52184c7fd9e43e0831f6456afca562e1673c7e28b64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}