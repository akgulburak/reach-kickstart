{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeMulti = exports.decode = exports.defaultDecodeOptions = void 0;\n\nconst Decoder_1 = require(\"./Decoder\");\n\nexports.defaultDecodeOptions = {};\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n */\n\nfunction decode(buffer, options = exports.defaultDecodeOptions) {\n  const decoder = new Decoder_1.Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n  return decoder.decode(buffer);\n}\n\nexports.decode = decode;\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n */\n\nfunction decodeMulti(buffer, options = exports.defaultDecodeOptions) {\n  const decoder = new Decoder_1.Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n  return decoder.decodeMulti(buffer);\n}\n\nexports.decodeMulti = decodeMulti;","map":{"version":3,"sources":["../src/decode.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAqCa,OAAA,CAAA,oBAAA,GAAsC,EAAtC;AAEb;;;;;AAKG;;AACH,SAAgB,MAAhB,CACE,MADF,EAEE,OAAA,GAAsD,OAAA,CAAA,oBAFxD,EAEmF;AAEjF,QAAM,OAAO,GAAG,IAAI,SAAA,CAAA,OAAJ,CACd,OAAO,CAAC,cADM,EAEb,OAA6C,CAAC,OAFjC,EAGd,OAAO,CAAC,YAHM,EAId,OAAO,CAAC,YAJM,EAKd,OAAO,CAAC,cALM,EAMd,OAAO,CAAC,YANM,EAOd,OAAO,CAAC,YAPM,CAAhB;AASA,SAAO,OAAO,CAAC,MAAR,CAAe,MAAf,CAAP;AACD;;AAdD,OAAA,CAAA,MAAA,GAAA,MAAA;AAgBA;;;AAGG;;AACH,SAAgB,WAAhB,CACE,MADF,EAEE,OAAA,GAAsD,OAAA,CAAA,oBAFxD,EAEmF;AAEjF,QAAM,OAAO,GAAG,IAAI,SAAA,CAAA,OAAJ,CACd,OAAO,CAAC,cADM,EAEb,OAA6C,CAAC,OAFjC,EAGd,OAAO,CAAC,YAHM,EAId,OAAO,CAAC,YAJM,EAKd,OAAO,CAAC,cALM,EAMd,OAAO,CAAC,YANM,EAOd,OAAO,CAAC,YAPM,CAAhB;AASA,SAAO,OAAO,CAAC,WAAR,CAAoB,MAApB,CAAP;AACD;;AAdD,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeMulti = exports.decode = exports.defaultDecodeOptions = void 0;\nconst Decoder_1 = require(\"./Decoder\");\nexports.defaultDecodeOptions = {};\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n */\nfunction decode(buffer, options = exports.defaultDecodeOptions) {\n    const decoder = new Decoder_1.Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decode(buffer);\n}\nexports.decode = decode;\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n */\nfunction decodeMulti(buffer, options = exports.defaultDecodeOptions) {\n    const decoder = new Decoder_1.Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeMulti(buffer);\n}\nexports.decodeMulti = decodeMulti;\n//# sourceMappingURL=decode.js.map"]},"metadata":{},"sourceType":"script"}