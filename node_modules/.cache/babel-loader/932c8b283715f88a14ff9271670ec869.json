{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/github/src/components/participants/NomineeViews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { parseCurrency, balanceOf } from \"@reach-sh/stdlib/ALGO\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NomineeViews = ({\n  appState,\n  args,\n  getParamsReady,\n  announceReady,\n  getParams,\n  announce\n}) => {\n  console.log(appState, args, \"sadsaddas\");\n\n  switch (appState) {\n    case \"announce\":\n      return announceReady ? /*#__PURE__*/_jsxDEV(GetAnnounce, {\n        addr: args[1],\n        title: args[0],\n        functionToCall: announce\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading the getParams page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 23\n      }, this);\n\n    case \"getParams\":\n      return getParamsReady ? /*#__PURE__*/_jsxDEV(GetParams, {\n        address: args[0],\n        functionToCall: getParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading the getParams page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }, this);\n\n    case \"showOutcome\":\n      return /*#__PURE__*/_jsxDEV(ShowOutcome, {\n        address: args[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n\n    case \"updateN\":\n      return updateReady ? /*#__PURE__*/_jsxDEV(Update, {\n        title: args[0],\n        amount: args[1],\n        functionToCall: update\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading the Update page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n_c = NomineeViews;\n\nconst GetParams = ({\n  functionToCall\n}) => {\n  _s();\n\n  const [titleName, setTicketPrice] = useState(1);\n\n  const handleClick = () => {\n    functionToCall({\n      deadline: 1,\n      titleName: titleName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ticketname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: titleName,\n        onChange: e => setTicketPrice(e.target.value),\n        type: \"number\",\n        placeholder: \"Ticket price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Set Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetParams, \"ZlHEMT98Y47jfnDvsrfqp93KYDc=\");\n\n_c2 = GetParams;\n\nconst GetAnnounce = ({\n  addr,\n  title,\n  functionToCall\n}) => {\n  const handleClick = () => {\n    functionToCall({\n      balance: 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Winner total amount: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: parseCurrency(balanceOf(addr))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Winner title: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Set Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = GetAnnounce;\n\nconst Update = ({\n  title,\n  amount,\n  functionToCall\n}) => {\n  //const title1 = Reach.bigNumberToNumber(title);\n  //const amount1 = Reach.bigNumberToNumber(amount);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Winner is: \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Amount is: \", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Update;\n\nconst ShowOutcome = ({\n  address\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Winner address: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = ShowOutcome;\nexport default NomineeViews;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NomineeViews\");\n$RefreshReg$(_c2, \"GetParams\");\n$RefreshReg$(_c3, \"GetAnnounce\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"ShowOutcome\");","map":{"version":3,"sources":["/home/x/reach/kick/github/src/components/participants/NomineeViews.js"],"names":["React","useState","parseCurrency","balanceOf","Container","Form","Button","NomineeViews","appState","args","getParamsReady","announceReady","getParams","announce","console","log","updateReady","update","GetParams","functionToCall","titleName","setTicketPrice","handleClick","deadline","e","target","value","GetAnnounce","addr","title","balance","Update","amount","ShowOutcome","address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { parseCurrency, balanceOf } from \"@reach-sh/stdlib/ALGO\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst NomineeViews = ({ appState, args, getParamsReady,announceReady, getParams, announce }) => {\n    console.log(appState, args,\"sadsaddas\");\n    switch (appState) {\n        case \"announce\":\n            return (\n                announceReady\n                    ? <GetAnnounce addr={args[1]} title={args[0]} functionToCall={announce} />\n                    : <h1>Loading the getParams page</h1>\n            );\n        case \"getParams\":\n            return (\n                getParamsReady\n                    ? <GetParams address={args[0]} functionToCall={getParams} />\n                    : <h1>Loading the getParams page</h1>\n            );\n        case \"showOutcome\":\n            return (<ShowOutcome address={args[0]} />);\n        case \"updateN\":\n            return (\n                updateReady\n                    ? <Update title={args[0]} amount={args[1]} functionToCall={update} />\n                    : <h1>Loading the Update page</h1>\n            );\n        default:\n            return (<h1>Waiting for contract</h1>);\n    }\n}\n\nconst GetParams = ({ functionToCall }) => {\n\n    const [titleName, setTicketPrice] = useState(1);\n\n    const handleClick = () => {\n        functionToCall({\n            deadline: 1,\n            titleName: titleName\n        });\n    }\n\n    return (\n        <Container>\n            <Form.Group>\n                {/* <p>Deadline</p>\n                <Form.Control\n                    value={deadline}\n                    onChange={(e) => setDeadline(e.target.value)}\n                    type=\"number\"\n                    placeholder=\"Deadline in blocks\" /> */}\n                <p>Ticketname</p>\n                <Form.Control\n                    value={titleName}\n                    onChange={(e) => setTicketPrice(e.target.value)}\n                    type=\"number\"\n                    placeholder=\"Ticket price\" />\n            </Form.Group>\n            <Button onClick={handleClick}>Set Parameters</Button>\n        </Container>\n    );\n}\n\n\nconst GetAnnounce = ({ addr , title, functionToCall }) => {\n\n    const handleClick = () => {\n        functionToCall({\n            balance: 1\n        });\n    }\n\n    return (\n        <Container>\n            <h1>Winner total amount: <small>{ parseCurrency(balanceOf(addr))}</small></h1>\n            <h1>Winner title: <small>{ title}</small></h1>\n            <Button onClick={handleClick}>Set Parameters</Button>\n        </Container>\n    );\n}\n\n\nconst Update = ({ title, amount , functionToCall }) => {\n    //const title1 = Reach.bigNumberToNumber(title);\n    //const amount1 = Reach.bigNumberToNumber(amount);\n    return (\n        <Container>\n            <h1>Winner is: {title}</h1>\n            <h1>Amount is: {amount}</h1>\n        </Container>\n    );\n}\n\nconst ShowOutcome = ({ address }) => {\n    return (\n        <Container>\n            <h1>Winner address: <small>{address}</small></h1>\n        </Container>\n    );\n}\n\nexport default NomineeViews;"]},"metadata":{},"sourceType":"module"}