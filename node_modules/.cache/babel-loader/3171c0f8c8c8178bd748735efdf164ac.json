{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/app/reach-react-template/src/components/participants/VoterViews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VoterViews = ({\n  appState,\n  args,\n  shouldBuyTicketRead,\n  shouldBuyTicket\n}) => {\n  switch (appState) {\n    case \"shouldBuyTicket\":\n      return /*#__PURE__*/_jsxDEV(BuyTicket, {\n        price: args[0],\n        functionToCall: shouldBuyTicket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n\n    /*        case \"shouldBuyTicket\":\n                return();\n            case \"shouldBuyTicket\":\n                return();*/\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n_c = VoterViews;\n\nconst BuyTicket = ({\n  price,\n  functionToCall\n}) => {\n  _s();\n\n  const [clickedYes, setClickedYes] = useState(false);\n  const [clickedNo, setClickedNo] = useState(false);\n\n  const handleYes = () => {\n    functionToCall(true);\n    setClickedYes(true);\n  };\n\n  const handleNo = () => {\n    functionToCall(false);\n    setClickedNo(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Do you accept?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleYes,\n      children: clickedYes ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        as: \"span\",\n        variant: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this) : \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleNo,\n      children: clickedNo ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        as: \"span\",\n        variant: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this) : \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"asd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BuyTicket, \"SO/l5/x4nQvKyyPGOzA4sluNoXo=\");\n\n_c2 = BuyTicket;\nexport default VoterViews;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VoterViews\");\n$RefreshReg$(_c2, \"BuyTicket\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/components/participants/VoterViews.js"],"names":["React","useState","Container","Button","Spinner","VoterViews","appState","args","shouldBuyTicketRead","shouldBuyTicket","BuyTicket","price","functionToCall","clickedYes","setClickedYes","clickedNo","setClickedNo","handleYes","handleNo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,mBAAlB;AAAsCC,EAAAA;AAAtC,CAAD,KAA2D;AAC1E,UAAOH,QAAP;AACI,SAAK,iBAAL;AACI,0BAAO,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEC,IAAI,CAAC,CAAD,CAAtB;AAA2B,QAAA,cAAc,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;;AACZ;AACA;AACA;AACA;;AACQ;AACI,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AARR;AAUH,CAXD;;KAAMJ,U;;AAaN,MAAMK,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA6B;AAAA;;AAE3C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,SAAS,GAAG,MAAM;AACpBL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAKA,QAAMI,QAAQ,GAAG,MAAM;AACnBN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA,gBAEQJ,UAAU,gBAAG,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,IAAjC;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAAH,GACR;AAHV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,QAAjB;AAAA,gBAEQH,SAAS,gBAAG,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,IAAjC;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAAH,GACP;AAHV;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlCD;;GAAML,S;;MAAAA,S;AAoCN,eAAeL,UAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst VoterViews = ({ appState, args, shouldBuyTicketRead,shouldBuyTicket}) =>{\n    switch(appState) {\n        case \"shouldBuyTicket\":\n            return(<BuyTicket price={args[0]} functionToCall={shouldBuyTicket}/>);\n/*        case \"shouldBuyTicket\":\n            return();\n        case \"shouldBuyTicket\":\n            return();*/\n        default:\n            return (<h1>Waiting for contract</h1>)\n    }\n}\n\nconst BuyTicket = ({price, functionToCall}) => {\n\n    const [clickedYes, setClickedYes] = useState(false);\n    const [clickedNo, setClickedNo] = useState(false);\n\n    const handleYes = () => {\n        functionToCall(true);\n        setClickedYes(true);\n    };\n\n    const handleNo = () => {\n        functionToCall(false);\n        setClickedNo(true);\n    };\n\n    return(\n        <Container>\n            <h2>Do you accept?</h2>\n            <Button onClick={handleYes}>\n                {\n                    clickedYes ? <Spinner animation=\"border\" size=\"sm\" as=\"span\" variant=\"light\" />\n                    : \"Yes\"\n                }\n            </Button>\n            <Button onClick={handleNo}>\n                {\n                    clickedNo ? <Spinner animation=\"border\" size=\"sm\" as=\"span\" variant=\"light\" />\n                    : \"No\"\n                }\n\n            </Button>\n            <h2>asd</h2>\n        </Container>\n    );\n}\n\nexport default VoterViews;"]},"metadata":{},"sourceType":"module"}