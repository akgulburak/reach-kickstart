{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  const v18 = await ctc.creationTime();\n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:32:23:application', stdlib.UInt_max, 19));\n  stdlib.protect(ctc0, await interact.announce(v20, stdlib.checkedBigNumberify('./index.rsh:34:66:decimal', stdlib.UInt_max, 5)), {\n    at: './index.rsh:34:60:application',\n    fs: ['at ./index.rsh:32:23:application call to [unknown function] (defined at: ./index.rsh:32:27:function exp)'],\n    msg: 'announce',\n    who: 'Admin'\n  });\n  const txn1 = await ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0), [ctc0, ctc1], [v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v52 = [v24, v24];\n    const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n    const v55 = [v53, v53];\n    const v49 = v52;\n    const v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v51 = v55;\n    const v388 = v26;\n    const v389 = v18;\n    const v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      return v58;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v391 = v388;\n      const v392 = v389;\n      const v393 = v390;\n\n      if ((() => {\n        const v332 = stdlib.gt(v324, v392);\n        return v332;\n      })()) {\n        const v362 = stdlib.sub(v324, v392);\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n        const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v393,\n          kind: 'from',\n          to: v370,\n          tok: undefined\n        });\n        sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v58;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc2], false, false);\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      return v309;\n    }, false);\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    continue;\n  }\n\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n\n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    return v332;\n  })()) {\n    const v362 = stdlib.sub(v324, v392);\n    const txn2 = await ctc.recv(7, 1, [ctc0], false, v362);\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc1, ctc5, ctc0, ctc0, ctc0, ctc0], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n\n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n\n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            return v332;\n          })()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    } else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    }\n  }\n\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v380 = v369[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  const txn2 = await ctc.sendrecv(6, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc0], [v23, v391, v380], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 5), v23, v391]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 5), v23]);\n    const [v382] = txn2.data;\n    const v385 = txn2.time;\n    const v381 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v384 = stdlib.addressEq(v23, v381);\n    stdlib.assert(v384, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc0], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v58;\n  })()) {\n    const v171 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 170));\n    const v174 = stdlib.protect(ctc1, await interact.getParams(v171), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v182 = ['None', null];\n    const v208 = v49[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v209 = v49[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v231 = stdlib.addressEq(v208, v171);\n    const v235 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v236 = [v235, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v238 = [v182, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v239 = v231 ? v236 : v238;\n    const v244 = v239[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v245 = v239[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v246;\n\n    switch (v244[0]) {\n      case 'None':\n        {\n          const v249 = stdlib.addressEq(v209, v171);\n          const v253 = stdlib.add(v245, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v254 = ['Some', v245];\n          const v255 = [v254, v245];\n          const v256 = [v244, v253];\n          const v257 = v249 ? v255 : v256;\n          v246 = v257;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v260 = v244[1];\n          v246 = v239;\n          break;\n        }\n    }\n\n    const v265 = v246[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v271;\n\n    switch (v265[0]) {\n      case 'None':\n        {\n          v271 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v275 = v265[1];\n          v271 = v275;\n          break;\n        }\n    }\n\n    const v281 = [v174, v171];\n    const txn2 = await ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v23, v49, v50, v51, v388, v390, v281], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n      const [v285] = txn2.data;\n      const v289 = txn2.time;\n      const v284 = txn2.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v293 = [v291, v50, v292];\n      const v295 = stdlib.Array_set(v51, v50, v293);\n      const v298 = stdlib.Array_set(v49, v50, v291);\n      const v311 = v49.reduce((v304, v305) => {\n        const v307 = stdlib.addressEq(v291, v305);\n        const v308 = v307 ? true : false;\n        const v309 = v304 ? v304 : v308;\n        return v309;\n      }, false);\n      const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v315 = [v51, v49, v50];\n      const v316 = [v295, v298, v314];\n      const v317 = v311 ? v315 : v316;\n      const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv49 = v320;\n      const cv50 = v321;\n      const cv51 = v319;\n      const cv388 = v289;\n      const cv389 = v388;\n      const cv390 = v390;\n\n      (() => {\n        const v49 = cv49;\n        const v50 = cv50;\n        const v51 = cv51;\n        const v388 = cv388;\n        const v389 = cv389;\n        const v390 = cv390;\n\n        if ((() => {\n          const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          return v58;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v391 = v388;\n          const v392 = v389;\n          const v393 = v390;\n\n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            return v332;\n          })()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      return v309;\n    }, false);\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    continue;\n  }\n\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n\n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    return v332;\n  })()) {\n    const v362 = stdlib.sub(v324, v392);\n    const txn2 = await ctc.recv(7, 1, [ctc1], false, v362);\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n\n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n\n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            return v332;\n          })()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    } else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    }\n  }\n\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn2 = await ctc.recv(6, 1, [ctc1], false, false);\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc0], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v58;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc2], false, false);\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      return v309;\n    }, false);\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    continue;\n  }\n\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n\n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    return v332;\n  })()) {\n    const v362 = stdlib.sub(v324, v392);\n    const v345 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:102:48:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v346 = v345[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    const txn2 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393, v346], [v346, []], [ctc1], true, false, v362, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      sim_r.txns.push({\n        amt: v351,\n        kind: 'to',\n        tok: undefined\n      });\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n\n      (() => {\n        const v391 = cv391;\n        const v392 = cv392;\n        const v393 = cv393;\n\n        if ((() => {\n          const v332 = stdlib.gt(v324, v392);\n          return v332;\n        })()) {\n          const v362 = stdlib.sub(v324, v392);\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n          const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v393,\n            kind: 'from',\n            to: v370,\n            tok: undefined\n          });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n\n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n\n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            return v332;\n          })()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    } else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      continue;\n    }\n  }\n\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn2 = await ctc.recv(6, 1, [ctc1], false, false);\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 121\n  }, null, null, null, null, {\n    count: 8,\n    size: 129\n  }, {\n    count: 12,\n    size: 249\n  }, {\n    count: 11,\n    size: 241\n  }, {\n    count: 12,\n    size: 337\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:36:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 254\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 255\nload 255\nconcat\nconcat\nint 0\nitob\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 251\nload 250\n+\nstore 249\n// \"CheckPay\"\n// \"./index.rsh:102:48:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 250\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:48:dot\"\n// \"[at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:102:48:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 243\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v382\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v351\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v49\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v388\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v390\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T26\",\n                \"name\": \"v285\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v382\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v351\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v49\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v388\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v390\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T26\",\n                \"name\": \"v285\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611588806100826000396000f3fe60806040526004361061004e5760003560e01c80630e02fe3b1461005a578063372c9abf1461006f5780637216f683146100825780639645fa5614610095578063bf5e3746146100a857610055565b3661005557005b600080fd5b61006d610068366004611165565b6100bb565b005b61006d61007d3660046110ba565b610231565b61006d6100903660046110e7565b6102d9565b61006d6100a33660046110cb565b61064e565b61006d6100b63660046110cb565b6107af565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c600054146100f857600080fd5b60008055610104610d77565b341561010f57600080fd5b61011f6040830160208401611099565b81516001600160a01b0391909116905261013f6040830160208401611099565b81516001600160a01b03919091166020918201526101639060408401908401611099565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f3edc19012383f1a954d272136ca587df4f30f9b69fd94318a56658f3640102eb906101d390849061139c565b60405180910390a16101e3610da9565b80513390528151602080830180519290925281516000910181905260408085015183519091015281514360609091015281518535608090910152905160a0015261022c816108f9565b505050565b60405161024590600590839060200161143a565b6040516020818303038152906040528051906020012060001c6000541461026b57600080fd5b60008055341561027a57600080fd5b336102886020830183611099565b6001600160a01b03161461029b57600080fd5b7f3fd684d5a5cd7a8e5e62ecf7a1cfbbc4e9d8ed03496e7d09af98f376e95ccd7f816040516102ca91906112f3565b60405180910390a16000805533ff5b6040516102ed90600290839060200161144e565b6040516020818303038152906040528051906020012060001c6000541461031357600080fd5b6000805561031f610dca565b341561032a57600080fd5b61033c6101c083016101a08401611099565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156104215760208301816002811061039b57634e487b7160e01b600052603260045260246000fd5b6020020160208101906103ae9190611099565b6001600160a01b0316604083015260208201516104025760408201516001600160a01b03166103e56101c085016101a08601611099565b6001600160a01b0316146103fa5760006103fd565b60015b610408565b81602001515b151560208301528061041981611521565b91505061036f565b50602081015115156060820152604080518082019091526080830160026000835b8282101561046e5761045f606083028501368190038101906110f9565b81526020019060010190610442565b5050505060808201515260408051808201825290602084019060029083908390808284376000920182905250608080860180516020019590955293516060870135604091820152805180820190915261050b9490935086019150600290835b828210156104f9576104ea606083028501368190038101906110f9565b815260200190600101906104cd565b505084516060870135925090506109f6565b60a0820151526040805180820182526105559160208501906002908390839080828437600092019190915250505060608401356105506101c086016101a08701611099565b610a94565b60a08201516020015261056d600160608401356114f2565b60a0820151604001526060810151610589578060a0015161058f565b80608001515b60c08201526040517ff676ac3f2efb8dbd11a37943b910eb4d888e3f22bdbf526e961d493ae952a7b0906105c4908490611360565b60405180910390a16105d4610da9565b6105e16020840184611099565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261022c816108f9565b6040516106629060049083906020016113c4565b6040516020818303038152906040528051906020012060001c6000541461068857600080fd5b600080556106a06101008201356101208301356114f2565b43106106ab57600080fd5b34610160820135146106bc57600080fd5b7f589dad80e3910e29a7387fd6250e4ec3654840609b69d32931872a4e73dfa11e816040516106eb919061130f565b60405180910390a16106fb610e19565b6107086020830183611099565b81516001600160a01b039091169052604080518082019091526020830160026000835b8282101561075757610748606083028501368190038101906110f9565b8152602001906001019061072b565b505083516020908101939093525050815160e08401356040909101528082018051439052516101208401359101526107996101608301356101408401356114f2565b6020820151604001526107ab81610b4e565b5050565b6040516107c39060049083906020016113c4565b6040516020818303038152906040528051906020012060001c600054146107e957600080fd5b600080556108016101008201356101208301356114f2565b43101561080d57600080fd5b341561081857600080fd5b7f0c4d355a064bbc44930ff544ed8946198d654feb166504864cb91d9da58c46f881604051610847919061132d565b60405180910390a1610857610e19565b6108646020830183611099565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156108b3576108a4606083028501368190038101906110f9565b81526020019060010190610887565b505083516020908101939093525050815160e08401356040918201528183018051439052805161012086013593019290925290516101408401359101526107ab81610b4e565b60018160200151602001511161098d57610911610e55565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a090810151908401525161096c91600291849101611463565b60408051601f198184030181529190528051602090910120600055506109f3565b610995610ea0565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a001518251909101526107ab81610c4f565b50565b6109fe610ec0565b60005b6002811015610a6657848160028110610a2a57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610a4f57634e487b7160e01b600052603260045260246000fd5b602002015280610a5e81611521565b915050610a01565b5081818460028110610a8857634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610a9c610eed565b60005b6002811015610b1257848160028110610ac857634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610aed57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610b0a81611521565b915050610a9f565b5081818460028110610b3457634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b60408051602081019091526000815260208083015101518251604001511115610c05576020808301510151825160400151610b89919061150a565b8152610b93610f0b565b8251516001600160a01b031681528251602090810151818301528351604090810151818401528351606084015281850180515160808501525181015160a084015251610be4916004918491016113d9565b60408051601f198184030181529190528051602090910120600055506107ab565b610c0d610f50565b82515181516001600160a01b03909116905282516020908101518251820152830180515182516040908101919091529051015181516060015261022c81610cc6565b610c57610e19565b81515181516001600160a01b0390911690528151602090810151825190910152815160600151610c8a90612328906114f2565b8151604090810191909152825181015160208084018051929092528451606001518251909101528351608001519051909101526107ab81610b4e565b8051602081015151516060909101516040516001600160a01b03909216916108fc82150291906000818181858888f19350505050158015610d0b573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528451516001600160a01b039081168452855185015183528451600592810192909252835116938101939093525160608301529060800160408051601f1981840301815291905280516020909101206000555050565b6040518060600160405280610d8a610eed565b8152602001610d97610f63565b8152602001610da4610ec0565b905290565b60408051606081018252600091810191825290815260208101610da4610f8d565b6040518060e00160405280610ddd610f63565b8152600060208201819052604082018190526060820152608001610dff610fcf565b8152602001610e0c610fcf565b8152602001610da4610fcf565b6040518060400160405280610e2c610ffc565b8152602001610da460405180606001604052806000815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b03168152602001610e78610eed565b815260200160008152602001610e8c610ec0565b815260200160008152602001600081525090565b6040518060400160405280610eb361101f565b8152600060209091015290565b60405180604001604052806002905b610ed7610f63565b815260200190600190039081610ecf5790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b03168152602001610f2e610ec0565b8152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280610eb3611042565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060c00160405280610fa0610eed565b815260200160008152602001610fb4610ec0565b81526020016000815260200160008152602001600081525090565b6040518060600160405280610fe2610ec0565b8152602001610fef610eed565b8152602001600081525090565b604051806060016040528060006001600160a01b03168152602001610fef610ec0565b6040518060a0016040528060006001600160a01b03168152602001610fb4610ec0565b604051806080016040528060006001600160a01b03168152602001610e8c610ec0565b80356001600160a01b038116811461107c57600080fd5b919050565b60006101808284031215611093578081fd5b50919050565b6000602082840312156110aa578081fd5b6110b382611065565b9392505050565b600060608284031215611093578081fd5b600061018082840312156110dd578081fd5b6110b38383611081565b60006101c08284031215611093578081fd5b60006060828403121561110a578081fd5b6040516060810181811067ffffffffffffffff8211171561113957634e487b7160e01b83526041600452602483fd5b60405261114583611065565b815260208301356020820152604083013560408201528091505092915050565b600060408284031215611093578081fd5b8060005b60028110156111bd576001600160a01b0361119483611065565b16845260208281013590850152604080830135908501526060938401939091019060010161117a565b50505050565b8060005b60028110156111bd57815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016111c7565b6001600160a01b0361121982611065565b16825261122c6020830160208301611176565b60e081810135908301526101008082013590830152610120808201359083015261014090810135910152565b6001600160a01b0361126982611065565b168252602090810135910152565b6001600160a01b038061128983611065565b168352602080840181840160005b60028110156112bd57846112aa83611065565b1683529183019190830190600101611297565b5050505050606081013560608301526112dc6080830160808301611176565b610140818101359083015261016090810135910152565b606081016113018284611258565b604092830135919092015290565b610180810161131e8284611208565b61016092830135919092015290565b610180810161133c8284611208565b6101608084013580151580821461135257600080fd5b808386015250505092915050565b6101c0810161136f8284611277565b61018083810135908301526101a06001600160a01b03611390828601611065565b16818401525092915050565b81358152604081016001600160a01b036113b860208501611065565b16602083015292915050565b82815261018081016110b36020830184611208565b82815281516001600160a01b031660208083019190915282015161018082019061140660408401826111c3565b5060408301516101008301526060830151610120830152608083015161014083015260a08301516101608301529392505050565b828152606081016110b36020830184611258565b8281526101a081016110b36020830184611277565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b60028110156114b45782516001600160a01b031682526020820192840192915060010161148c565b505050506040830151608083015260608301516114d460a08401826111c3565b50608083015161016083015260a08301516101808301529392505050565b600082198211156115055761150561153c565b500190565b60008282101561151c5761151c61153c565b500390565b60006000198214156115355761153561153c565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e600b1d6c7e9c8abc56329f18abf9e6b8bc0ed38647eacaf4b84c02d0bd9398f64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_UInt","ctc1","T_Address","ctc2","T_Tuple","ctc3","ctc4","ctc5","T_Array","checkedBigNumberify","UInt_max","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","v18","creationTime","v20","selfAddress","protect","announce","at","fs","msg","who","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v24","data","v26","time","v23","from","push","amt","kind","tok","undefined","v52","v53","v55","v49","v50","v51","v388","v389","v390","v58","le","nextSt","nextSt_noTime","view","isHalt","v324","add","v391","v392","v393","v332","gt","v362","sub","v369","v370","to","txn2","recv","v285","v289","v284","v291","v292","v293","v295","Array_set","v298","v311","reduce","v304","v305","v307","addressEq","v308","v309","v314","v315","v316","v317","v319","v320","v321","cv49","cv50","cv51","cv388","cv389","cv390","didTimeout","txn3","v367","v365","cv391","cv392","cv393","v351","v356","v350","v355","v380","v382","v385","v381","v384","assert","Nominee","v171","v174","getParams","v182","v208","v209","v231","v235","v236","v238","v239","v244","v245","v246","v249","v253","v254","v255","v256","v257","v260","v265","v271","v275","v281","Voter","v345","shouldBuyTicket","v346","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"AAAA;;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,OAAjB;AAGP,OAAO,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AAC5B,QAAMC,MAAM,GAAGD,CAAC,CAACE,WAAjB;AACA,SAAO,EAAP;AAEC;AAAA;AAEH,OAAO,SAASC,SAAT,CAAmBH,CAAnB,EAAsB;AAC3B,QAAMC,MAAM,GAAGD,CAAC,CAACE,WAAjB;AACA,SAAO;AACLE,IAAAA,KAAK,EAAE,EADF;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAAP;AAMC;AAAA;AAEH,OAAO,eAAeC,KAAf,CAAqBC,GAArB,EAA0BC,QAA1B,EAAoC;AACzC,QAAMP,MAAM,GAAGM,GAAG,CAACN,MAAnB;AACA,QAAMQ,IAAI,GAAGR,MAAM,CAACS,MAApB;AACA,QAAMC,IAAI,GAAGV,MAAM,CAACW,SAApB;AACA,QAAMC,IAAI,GAAGZ,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,CAAf,CAAb;AACA,QAAMI,IAAI,GAAGd,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,CAAf,CAAb;AACA,QAAMO,IAAI,GAAGf,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaA,IAAb,CAAf,CAAb;AACA,QAAMQ,IAAI,GAAGhB,MAAM,CAACiB,OAAP,CAAeF,IAAf,EAAqBf,MAAM,CAACkB,mBAAP,CAA2B,WAA3B,EAAwClB,MAAM,CAACmB,QAA/C,EAAyD,CAAzD,CAArB,CAAb;AACA,QAAMC,IAAI,GAAGpB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAaM,IAAb,EAAmBR,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,CAAf,CAAb;AACA,QAAMa,IAAI,GAAGrB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAaM,IAAb,EAAmBR,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAAf,CAAb;AACA,QAAMc,IAAI,GAAGtB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAaF,IAAb,CAAf,CAAb;AACA,QAAMe,IAAI,GAAGvB,MAAM,CAACa,OAAP,CAAe,EAAf,CAAb;AACA,QAAMW,KAAK,GAAGxB,MAAM,CAACiB,OAAP,CAAeP,IAAf,EAAqBV,MAAM,CAACkB,mBAAP,CAA2B,WAA3B,EAAwClB,MAAM,CAACmB,QAA/C,EAAyD,CAAzD,CAArB,CAAd;AACA,QAAMM,KAAK,GAAGzB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAac,KAAb,EAAoBhB,IAApB,EAA0BQ,IAA1B,EAAgCR,IAAhC,EAAsCA,IAAtC,CAAf,CAAd;AACA,QAAMkB,KAAK,GAAG1B,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAac,KAAb,EAAoBhB,IAApB,EAA0BQ,IAA1B,EAAgCR,IAAhC,CAAf,CAAd;AACA,QAAMmB,KAAK,GAAG3B,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOA,IAAP,CAAf,CAAd;AAGA,QAAMoB,GAAG,GAAG,MAAMtB,GAAG,CAACuB,YAAJ,EAAlB;AAEA,QAAMC,GAAG,GAAGxB,GAAG,CAACyB,WAAJ,CAAgB,OAAhB,EAAyB,KAAzB,EAAgC/B,MAAM,CAACkB,mBAAP,CAA2B,+BAA3B,EAA4DlB,MAAM,CAACmB,QAAnE,EAA6E,EAA7E,CAAhC,CAAZ;AACAnB,EAAAA,MAAM,CAACgC,OAAP,CAAexB,IAAf,EAAqB,MAAMD,QAAQ,CAAC0B,QAAT,CAAkBH,GAAlB,EAAuB9B,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAvB,CAA3B,EAAgI;AAC9He,IAAAA,EAAE,EAAE,+BAD0H;AAE9HC,IAAAA,EAAE,EAAE,CAAC,0GAAD,CAF0H;AAG9HC,IAAAA,GAAG,EAAE,UAHyH;AAI9HC,IAAAA,GAAG,EAAE;AAJyH,GAAhI;AAQA,QAAMC,IAAI,GAAG,MAAOhC,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAnB,EAA4F,CAACX,IAAD,EAAOE,IAAP,CAA5F,EAA0G,CAACkB,GAAD,EAAME,GAAN,CAA1G,EAAsH,CAAC9B,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CAAD,EAAwE,EAAxE,CAAtH,EAAmM,CAACT,IAAD,CAAnM,EAA2M,IAA3M,EAAiN,IAAjN,EAAuN,KAAvN,EAA+N,MAAO4B,IAAP,IAAgB;AACjQ,UAAME,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAd;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAAchB,KAAd,EAAqB,CAAC3B,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAD,EAA0ES,GAA1E,CAArB,CAAf;AACAY,IAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAc7B,IAAd,EAAoB,CAACd,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAD,CAApB,CAA1B;AACA,UAAM,CAAC0B,GAAD,IAAQP,IAAI,CAACQ,IAAnB;AACA,UAAMC,GAAG,GAAGT,IAAI,CAACU,IAAjB;AACA,UAAMC,GAAG,GAAGX,IAAI,CAACY,IAAjB;AAEAV,IAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,MAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CADS;AAEdkC,MAAAA,IAAI,EAAE,IAFQ;AAGdC,MAAAA,GAAG,EAAEC;AAHS,KAAhB;AAKA,UAAMC,GAAG,GAAG,CAACX,GAAD,EAAMA,GAAN,CAAZ;AACA,UAAMY,GAAG,GAAG,CAACZ,GAAD,EAAM7C,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAN,EAAmFnB,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAnF,CAAZ;AACA,UAAMuC,GAAG,GAAG,CAACD,GAAD,EAAMA,GAAN,CAAZ;AACA,UAAME,GAAG,GAAGH,GAAZ;AACA,UAAMI,GAAG,GAAG5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAZ;AACA,UAAM0C,GAAG,GAAGH,GAAZ;AACA,UAAMI,IAAI,GAAGf,GAAb;AACA,UAAMgB,IAAI,GAAGnC,GAAb;AACA,UAAMoC,IAAI,GAAGhE,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAb;;AAEA,QAAI,CAAC,MAAM;AACT,YAAM8C,GAAG,GAAGjE,MAAM,CAACkE,EAAP,CAAUN,GAAV,EAAe5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAf,CAAZ;AAEA,aAAO8C,GAAP;AAAY,KAHV,GAAJ,EAGmB;AACjBzB,MAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAclB,KAAd,EAAqB,CAACzB,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,EAAgG8B,GAAhG,EAAqGU,GAArG,EAA0GC,GAA1G,EAA+GC,GAA/G,EAAoHC,IAApH,EAA0HE,IAA1H,CAArB,CAAf;AACAxB,MAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcjB,KAAd,EAAqB,CAAC1B,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,EAAgG8B,GAAhG,EAAqGU,GAArG,EAA0GC,GAA1G,EAA+GC,GAA/G,EAAoHG,IAApH,CAArB,CAAtB;AACAxB,MAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,CAAP,CAAb;AACAqB,MAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,KARH,MASK;AACH,YAAMC,IAAI,GAAGvE,MAAM,CAACwE,GAAP,CAAWT,IAAX,EAAiB/D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,IAA1E,CAAjB,CAAb;AACA,YAAMsD,IAAI,GAAGX,IAAb;AACA,YAAMY,IAAI,GAAGX,IAAb;AACA,YAAMY,IAAI,GAAGX,IAAb;;AAEA,UAAI,CAAC,MAAM;AACT,cAAMY,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,eAAOE,IAAP;AAAa,OAHX,GAAJ,EAGoB;AAClB,cAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,QAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcvB,IAAd,EAAoB,CAACpB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,QAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAApB,CAAtB;AACAnC,QAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,QAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,OATH,MAUK;AACH,cAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,cAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,QAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,UAAAA,GAAG,EAAEuB,IADS;AAEdtB,UAAAA,IAAI,EAAE,MAFQ;AAGd6B,UAAAA,EAAE,EAAED,IAHU;AAId3B,UAAAA,GAAG,EAAEC;AAJS,SAAhB;AAMAf,QAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAApB,CAAf;AACAjC,QAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,QAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,QAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC;;AACN,WAAO9B,KAAP;AACC,GA/DiB,CAApB;AAgEA,QAAM,CAACK,GAAD,IAAQP,IAAI,CAACQ,IAAnB;AACA,QAAMC,GAAG,GAAGT,IAAI,CAACU,IAAjB;AACA,QAAMC,GAAG,GAAGX,IAAI,CAACY,IAAjB;AACA;AACA,QAAMM,GAAG,GAAG,CAACX,GAAD,EAAMA,GAAN,CAAZ;AACA,QAAMY,GAAG,GAAG,CAACZ,GAAD,EAAM7C,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAN,EAAmFnB,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAnF,CAAZ;AACA,QAAMuC,GAAG,GAAG,CAACD,GAAD,EAAMA,GAAN,CAAZ;AACA,MAAIE,GAAG,GAAGH,GAAV;AACA,MAAII,GAAG,GAAG5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAV;AACA,MAAI0C,GAAG,GAAGH,GAAV;AACA,MAAII,IAAI,GAAGf,GAAX;AACA,MAAIgB,IAAI,GAAGnC,GAAX;AACA,MAAIoC,IAAI,GAAGhE,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAM8C,GAAG,GAAGjE,MAAM,CAACkE,EAAP,CAAUN,GAAV,EAAe5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAf,CAAZ;AAEA,WAAO8C,GAAP;AAAY,GAHP,GAAP,EAGmB;AACjB,UAAMkB,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAACxE,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,UAAM,CAACyE,IAAD,IAASF,IAAI,CAACrC,IAApB;AACA,UAAMwC,IAAI,GAAGH,IAAI,CAACnC,IAAlB;AACA,UAAMuC,IAAI,GAAGJ,IAAI,CAACjC,IAAlB;AACA;AACA,UAAMsC,IAAI,GAAGH,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMsE,IAAI,GAAGJ,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMuE,IAAI,GAAG,CAACF,IAAD,EAAO5B,GAAP,EAAY6B,IAAZ,CAAb;AACA,UAAME,IAAI,GAAG3F,MAAM,CAAC4F,SAAP,CAAiB/B,GAAjB,EAAsBD,GAAtB,EAA2B8B,IAA3B,CAAb;AACA,UAAMG,IAAI,GAAG7F,MAAM,CAAC4F,SAAP,CAAiBjC,GAAjB,EAAsBC,GAAtB,EAA2B4B,IAA3B,CAAb;AACA,UAAMM,IAAI,GAAGnC,GAAG,CAACoC,MAAJ,CAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGlG,MAAM,CAACmG,SAAP,CAAiBX,IAAjB,EAAuBS,IAAvB,CAAb;AACA,YAAMG,IAAI,GAAGF,IAAI,GAAG,IAAH,GAAU,KAA3B;AACA,YAAMG,IAAI,GAAGL,IAAI,GAAGA,IAAH,GAAUI,IAA3B;AAEA,aAAOC,IAAP;AAAa,KALF,EAKI,KALJ,CAAb;AAMA,UAAMC,IAAI,GAAGtG,MAAM,CAACwE,GAAP,CAAWZ,GAAX,EAAgB5D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,CAA1E,CAAhB,CAAb;AACA,UAAMoF,IAAI,GAAG,CAAC1C,GAAD,EAAMF,GAAN,EAAWC,GAAX,CAAb;AACA,UAAM4C,IAAI,GAAG,CAACb,IAAD,EAAOE,IAAP,EAAaS,IAAb,CAAb;AACA,UAAMG,IAAI,GAAGX,IAAI,GAAGS,IAAH,GAAUC,IAA3B;AACA,UAAME,IAAI,GAAGD,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMwF,IAAI,GAAGF,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMyF,IAAI,GAAGH,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAM0F,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGL,IAAb;AACA,UAAMM,KAAK,GAAG1B,IAAd;AACA,UAAM2B,KAAK,GAAGnD,IAAd;AACA,UAAMoD,KAAK,GAAGlD,IAAd;AAEAL,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AAEA;AACC;;AACH,QAAM3C,IAAI,GAAGvE,MAAM,CAACwE,GAAP,CAAWT,IAAX,EAAiB/D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,IAA1E,CAAjB,CAAb;AACA,MAAIsD,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAMY,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,WAAOE,IAAP;AAAa,GAHR,GAAP,EAGoB;AAClB,UAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACA,UAAMS,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC5E,IAAD,CAAf,EAAuB,KAAvB,EAA8BsE,IAA9B,CAApB;;AACA,QAAIK,IAAI,CAACgC,UAAT,EAAqB;AAEnB,YAAMC,IAAI,GAAG,MAAO9G,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAnB,EAA6F,CAACT,IAAD,EAAOM,IAAP,EAAaR,IAAb,EAAmBA,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAA7F,EAAmI,CAACyC,GAAD,EAAMY,GAAN,EAAWU,IAAX,EAAiBO,IAAjB,EAAuBL,IAAvB,EAA6BE,IAA7B,CAAnI,EAAuK,CAAC3E,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CAAD,EAAwE,EAAxE,CAAvK,EAAoP,EAApP,EAAwP,IAAxP,EAA8P,KAA9P,EAAqQ,KAArQ,EAA6Q,MAAOiG,IAAP,IAAgB;AAC/S,cAAM5E,KAAK,GAAG;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAD,QAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAAcvB,IAAd,EAAoB,CAACpB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGL,IAAjG,EAAuGE,IAAvG,CAApB,CAAf;AACAnC,QAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGH,IAAjG,CAApB,CAA1B;AACA,cAAM,KAAKyC,IAAI,CAACtE,IAAhB;AACA,cAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,cAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AAEAV,QAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,UAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CADS;AAEdkC,UAAAA,IAAI,EAAE,IAFQ;AAGdC,UAAAA,GAAG,EAAEC;AAHS,SAAhB;AAKA,cAAMgE,KAAK,GAAGF,IAAd;AACA,cAAMG,KAAK,GAAG/C,IAAd;AACA,cAAMgD,KAAK,GAAG9C,IAAd;;AAEA,SAAC,MAAM;AACL,gBAAMF,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;;AAEA,cAAI,CAAC,MAAM;AACT,kBAAM7C,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,mBAAOE,IAAP;AAAa,WAHX,GAAJ,EAGoB;AAClB,kBAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcvB,IAAd,EAAoB,CAACpB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAApB,CAAtB;AACAnC,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,WATH,MAUK;AACH,kBAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,kBAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,YAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,cAAAA,GAAG,EAAEuB,IADS;AAEdtB,cAAAA,IAAI,EAAE,MAFQ;AAGd6B,cAAAA,EAAE,EAAED,IAHU;AAId3B,cAAAA,GAAG,EAAEC;AAJS,aAAhB;AAMAf,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAApB,CAAf;AACAjC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC,SA5BN;;AA6BA,eAAO9B,KAAP;AACC,OA/CiB,CAApB;AAgDA,YAAM,KAAK4E,IAAI,CAACtE,IAAhB;AACA,YAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,YAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AACA;AACA,YAAMqE,KAAK,GAAGF,IAAd;AACA,YAAMG,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAG9C,IAAd;AAEAF,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AACC,KA/DH,MAgEK;AACH,YAAM,CAACC,IAAD,IAASvC,IAAI,CAACrC,IAApB;AACA,YAAM6E,IAAI,GAAGxC,IAAI,CAACnC,IAAlB;AACA,YAAM4E,IAAI,GAAGzC,IAAI,CAACjC,IAAlB;AACA,YAAM2E,IAAI,GAAG7H,MAAM,CAACwE,GAAP,CAAWG,IAAX,EAAiB+C,IAAjB,CAAb;AACA;AACA,YAAMH,KAAK,GAAGI,IAAd;AACA,YAAMH,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAGI,IAAd;AAEApD,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AAAU;AACX;;AACH,QAAMzC,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,QAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACA;AACA,QAAM2G,IAAI,GAAG9C,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AAGA,QAAMgE,IAAI,GAAG,MAAO7E,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAnB,EAA6F,CAACT,IAAD,EAAOF,IAAP,EAAaA,IAAb,CAA7F,EAAiH,CAACyC,GAAD,EAAMwB,IAAN,EAAYqD,IAAZ,CAAjH,EAAoI,CAAC9H,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CAAD,EAAwE,EAAxE,CAApI,EAAiN,CAACX,IAAD,CAAjN,EAAyN,IAAzN,EAA+N,IAA/N,EAAqO,KAArO,EAA6O,MAAO2E,IAAP,IAAgB;AAC/Q,UAAM3C,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAd;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFwB,IAAhF,CAApB,CAAf;AACAjC,IAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,CAApB,CAA1B;AACA,UAAM,CAAC8E,IAAD,IAAS5C,IAAI,CAACrC,IAApB;AACA,UAAMkF,IAAI,GAAG7C,IAAI,CAACnC,IAAlB;AACA,UAAMiF,IAAI,GAAG9C,IAAI,CAACjC,IAAlB;AAEAV,IAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,MAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CADS;AAEdkC,MAAAA,IAAI,EAAE,IAFQ;AAGdC,MAAAA,GAAG,EAAEC;AAHS,KAAhB;AAKA,UAAM2E,IAAI,GAAGlI,MAAM,CAACmG,SAAP,CAAiBlD,GAAjB,EAAsBgF,IAAtB,CAAb;AACAjI,IAAAA,MAAM,CAACmI,MAAP,CAAcD,IAAd,EAAoB;AAClBhG,MAAAA,EAAE,EAAE,wBADc;AAElBC,MAAAA,EAAE,EAAE,EAFc;AAGlBC,MAAAA,GAAG,EAAE,gBAHa;AAIlBC,MAAAA,GAAG,EAAE;AAJa,KAApB;AAMAG,IAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdE,MAAAA,IAAI,EAAE,MADQ;AAEdC,MAAAA,GAAG,EAAEC;AAFS,KAAhB;AAIAf,IAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,EAApB,CAAf;AACAiB,IAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,EAApB,CAAtB;AACAiB,IAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,IAAAA,KAAK,CAAC8B,MAAN,GAAe,IAAf;AAEA,WAAO9B,KAAP;AACC,GA9BiB,CAApB;AA+BA,QAAM,CAACuF,IAAD,IAAS5C,IAAI,CAACrC,IAApB;AACA,QAAMkF,IAAI,GAAG7C,IAAI,CAACnC,IAAlB;AACA,QAAMiF,IAAI,GAAG9C,IAAI,CAACjC,IAAlB;AACA;AACA,QAAMgF,IAAI,GAAGlI,MAAM,CAACmG,SAAP,CAAiBlD,GAAjB,EAAsBgF,IAAtB,CAAb;AACAjI,EAAAA,MAAM,CAACmI,MAAP,CAAcD,IAAd,EAAoB;AAClBhG,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AAGC;KApSmBhC,K;AAoSnB;AACH,OAAO,eAAe+H,OAAf,CAAuB9H,GAAvB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAMP,MAAM,GAAGM,GAAG,CAACN,MAAnB;AACA,QAAMQ,IAAI,GAAGR,MAAM,CAACW,SAApB;AACA,QAAMD,IAAI,GAAGV,MAAM,CAACS,MAApB;AACA,QAAMG,IAAI,GAAGZ,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,CAAf,CAAb;AACA,QAAMM,IAAI,GAAGd,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,CAAf,CAAb;AACA,QAAMK,IAAI,GAAGf,MAAM,CAACiB,OAAP,CAAeT,IAAf,EAAqBR,MAAM,CAACkB,mBAAP,CAA2B,WAA3B,EAAwClB,MAAM,CAACmB,QAA/C,EAAyD,CAAzD,CAArB,CAAb;AACA,QAAMH,IAAI,GAAGhB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAaA,IAAb,CAAf,CAAb;AACA,QAAMU,IAAI,GAAGpB,MAAM,CAACiB,OAAP,CAAeD,IAAf,EAAqBhB,MAAM,CAACkB,mBAAP,CAA2B,WAA3B,EAAwClB,MAAM,CAACmB,QAA/C,EAAyD,CAAzD,CAArB,CAAb;AACA,QAAME,IAAI,GAAGrB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaO,IAAb,EAAmBL,IAAnB,EAAyBU,IAAzB,EAA+BV,IAA/B,EAAqCA,IAArC,CAAf,CAAb;AACA,QAAMY,IAAI,GAAGtB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaO,IAAb,EAAmBL,IAAnB,EAAyBU,IAAzB,EAA+BV,IAA/B,CAAf,CAAb;AACA,QAAMa,IAAI,GAAGvB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaY,IAAb,EAAmBV,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,CAAf,CAAb;AACA,QAAMc,KAAK,GAAGxB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaY,IAAb,EAAmBV,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAAf,CAAd;AACA,QAAMe,KAAK,GAAGzB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaE,IAAb,CAAf,CAAd;AAGA,QAAMkB,GAAG,GAAG,MAAMtB,GAAG,CAACuB,YAAJ,EAAlB;AAEA,QAAMS,IAAI,GAAG,MAAOhC,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC5E,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,QAAM,CAACqC,GAAD,IAAQP,IAAI,CAACQ,IAAnB;AACA,QAAMC,GAAG,GAAGT,IAAI,CAACU,IAAjB;AACA,QAAMC,GAAG,GAAGX,IAAI,CAACY,IAAjB;AACA;AACA,QAAMM,GAAG,GAAG,CAACX,GAAD,EAAMA,GAAN,CAAZ;AACA,QAAMY,GAAG,GAAG,CAACZ,GAAD,EAAM7C,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAN,EAAmFnB,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAnF,CAAZ;AACA,QAAMuC,GAAG,GAAG,CAACD,GAAD,EAAMA,GAAN,CAAZ;AACA,MAAIE,GAAG,GAAGH,GAAV;AACA,MAAII,GAAG,GAAG5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAV;AACA,MAAI0C,GAAG,GAAGH,GAAV;AACA,MAAII,IAAI,GAAGf,GAAX;AACA,MAAIgB,IAAI,GAAGnC,GAAX;AACA,MAAIoC,IAAI,GAAGhE,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAM8C,GAAG,GAAGjE,MAAM,CAACkE,EAAP,CAAUN,GAAV,EAAe5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAf,CAAZ;AAEA,WAAO8C,GAAP;AAAY,GAHP,GAAP,EAGmB;AACjB,UAAMoE,IAAI,GAAG/H,GAAG,CAACyB,WAAJ,CAAgB,SAAhB,EAA2B,IAA3B,EAAiC/B,MAAM,CAACkB,mBAAP,CAA2B,+BAA3B,EAA4DlB,MAAM,CAACmB,QAAnE,EAA6E,GAA7E,CAAjC,CAAb;AACA,UAAMmH,IAAI,GAAGtI,MAAM,CAACgC,OAAP,CAAetB,IAAf,EAAqB,MAAMH,QAAQ,CAACgI,SAAT,CAAmBF,IAAnB,CAA3B,EAAqD;AAChEnG,MAAAA,EAAE,EAAE,+BAD4D;AAEhEC,MAAAA,EAAE,EAAE,CAAC,0GAAD,EAA6G,0GAA7G,CAF4D;AAGhEC,MAAAA,GAAG,EAAE,WAH2D;AAIhEC,MAAAA,GAAG,EAAE;AAJ2D,KAArD,CAAb;AAMA,UAAMmG,IAAI,GAAG,CAAC,MAAD,EAAS,IAAT,CAAb;AACA,UAAMC,IAAI,GAAG9E,GAAG,CAAC3D,MAAM,CAACkB,mBAAP,CAA2B,2CAA3B,EAAwElB,MAAM,CAACmB,QAA/E,EAAyF,CAAzF,CAAD,CAAhB;AACA,UAAMuH,IAAI,GAAG/E,GAAG,CAAC3D,MAAM,CAACkB,mBAAP,CAA2B,2CAA3B,EAAwElB,MAAM,CAACmB,QAA/E,EAAyF,CAAzF,CAAD,CAAhB;AACA,UAAMwH,IAAI,GAAG3I,MAAM,CAACmG,SAAP,CAAiBsC,IAAjB,EAAuBJ,IAAvB,CAAb;AACA,UAAMO,IAAI,GAAG,CAAC,MAAD,EAAS5I,MAAM,CAACkB,mBAAP,CAA2B,uCAA3B,EAAoElB,MAAM,CAACmB,QAA3E,EAAqF,CAArF,CAAT,CAAb;AACA,UAAM0H,IAAI,GAAG,CAACD,IAAD,EAAO5I,MAAM,CAACkB,mBAAP,CAA2B,uCAA3B,EAAoElB,MAAM,CAACmB,QAA3E,EAAqF,CAArF,CAAP,CAAb;AACA,UAAM2H,IAAI,GAAG,CAACN,IAAD,EAAOxI,MAAM,CAACkB,mBAAP,CAA2B,uCAA3B,EAAoElB,MAAM,CAACmB,QAA3E,EAAqF,CAArF,CAAP,CAAb;AACA,UAAM4H,IAAI,GAAGJ,IAAI,GAAGE,IAAH,GAAUC,IAA3B;AACA,UAAME,IAAI,GAAGD,IAAI,CAAC/I,MAAM,CAACkB,mBAAP,CAA2B,qCAA3B,EAAkElB,MAAM,CAACmB,QAAzE,EAAmF,CAAnF,CAAD,CAAjB;AACA,UAAM8H,IAAI,GAAGF,IAAI,CAAC/I,MAAM,CAACkB,mBAAP,CAA2B,qCAA3B,EAAkElB,MAAM,CAACmB,QAAzE,EAAmF,CAAnF,CAAD,CAAjB;AACA,QAAI+H,IAAJ;;AACA,YAAQF,IAAI,CAAC,CAAD,CAAZ;AACE,WAAK,MAAL;AAAa;AAEX,gBAAMG,IAAI,GAAGnJ,MAAM,CAACmG,SAAP,CAAiBuC,IAAjB,EAAuBL,IAAvB,CAAb;AACA,gBAAMe,IAAI,GAAGpJ,MAAM,CAACwE,GAAP,CAAWyE,IAAX,EAAiBjJ,MAAM,CAACkB,mBAAP,CAA2B,uCAA3B,EAAoElB,MAAM,CAACmB,QAA3E,EAAqF,CAArF,CAAjB,CAAb;AACA,gBAAMkI,IAAI,GAAG,CAAC,MAAD,EAASJ,IAAT,CAAb;AACA,gBAAMK,IAAI,GAAG,CAACD,IAAD,EAAOJ,IAAP,CAAb;AACA,gBAAMM,IAAI,GAAG,CAACP,IAAD,EAAOI,IAAP,CAAb;AACA,gBAAMI,IAAI,GAAGL,IAAI,GAAGG,IAAH,GAAUC,IAA3B;AACAL,UAAAA,IAAI,GAAGM,IAAP;AAEA;AACC;;AACH,WAAK,MAAL;AAAa;AACX,gBAAMC,IAAI,GAAGT,IAAI,CAAC,CAAD,CAAjB;AACAE,UAAAA,IAAI,GAAGH,IAAP;AAEA;AACC;AAlBL;;AAoBA,UAAMW,IAAI,GAAGR,IAAI,CAAClJ,MAAM,CAACkB,mBAAP,CAA2B,qCAA3B,EAAkElB,MAAM,CAACmB,QAAzE,EAAmF,CAAnF,CAAD,CAAjB;AACA,QAAIwI,IAAJ;;AACA,YAAQD,IAAI,CAAC,CAAD,CAAZ;AACE,WAAK,MAAL;AAAa;AAEXC,UAAAA,IAAI,GAAG3J,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAP;AAEA;AACC;;AACH,WAAK,MAAL;AAAa;AACX,gBAAMyI,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAjB;AACAC,UAAAA,IAAI,GAAGC,IAAP;AAEA;AACC;AAZL;;AAeA,UAAMC,IAAI,GAAG,CAACvB,IAAD,EAAOD,IAAP,CAAb;AAEA,UAAMlD,IAAI,GAAG,MAAO7E,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAnB,EAA4F,CAACX,IAAD,EAAOO,IAAP,EAAaL,IAAb,EAAmBU,IAAnB,EAAyBV,IAAzB,EAA+BA,IAA/B,EAAqCE,IAArC,CAA5F,EAAwI,CAACqC,GAAD,EAAMU,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BE,IAA3B,EAAiC6F,IAAjC,CAAxI,EAAgL,CAAC7J,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAD,EAA8E,EAA9E,CAAhL,EAAmQ,CAACP,IAAD,CAAnQ,EAA2Q,IAA3Q,EAAiR,KAAjR,EAAwR,KAAxR,EAAgS,MAAOuE,IAAP,IAAgB;AAClU,YAAM3C,KAAK,GAAG;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAD,MAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAD,EAA0E8B,GAA1E,EAA+EU,GAA/E,EAAoFC,GAApF,EAAyFC,GAAzF,EAA8FC,IAA9F,EAAoGE,IAApG,CAApB,CAAf;AACAxB,MAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,uBAA3B,EAAoDlB,MAAM,CAACmB,QAA3D,EAAqE,CAArE,CAAD,EAA0E8B,GAA1E,EAA+EU,GAA/E,EAAoFC,GAApF,EAAyFC,GAAzF,EAA8FG,IAA9F,CAApB,CAA1B;AACA,YAAM,CAACqB,IAAD,IAASF,IAAI,CAACrC,IAApB;AACA,YAAMwC,IAAI,GAAGH,IAAI,CAACnC,IAAlB;AACA,YAAMuC,IAAI,GAAGJ,IAAI,CAACjC,IAAlB;AAEAV,MAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,QAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CADS;AAEdkC,QAAAA,IAAI,EAAE,IAFQ;AAGdC,QAAAA,GAAG,EAAEC;AAHS,OAAhB;AAKA,YAAMiC,IAAI,GAAGH,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,YAAMsE,IAAI,GAAGJ,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,YAAMuE,IAAI,GAAG,CAACF,IAAD,EAAO5B,GAAP,EAAY6B,IAAZ,CAAb;AACA,YAAME,IAAI,GAAG3F,MAAM,CAAC4F,SAAP,CAAiB/B,GAAjB,EAAsBD,GAAtB,EAA2B8B,IAA3B,CAAb;AACA,YAAMG,IAAI,GAAG7F,MAAM,CAAC4F,SAAP,CAAiBjC,GAAjB,EAAsBC,GAAtB,EAA2B4B,IAA3B,CAAb;AACA,YAAMM,IAAI,GAAGnC,GAAG,CAACoC,MAAJ,CAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,cAAMC,IAAI,GAAGlG,MAAM,CAACmG,SAAP,CAAiBX,IAAjB,EAAuBS,IAAvB,CAAb;AACA,cAAMG,IAAI,GAAGF,IAAI,GAAG,IAAH,GAAU,KAA3B;AACA,cAAMG,IAAI,GAAGL,IAAI,GAAGA,IAAH,GAAUI,IAA3B;AAEA,eAAOC,IAAP;AAAa,OALF,EAKI,KALJ,CAAb;AAMA,YAAMC,IAAI,GAAGtG,MAAM,CAACwE,GAAP,CAAWZ,GAAX,EAAgB5D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,CAA1E,CAAhB,CAAb;AACA,YAAMoF,IAAI,GAAG,CAAC1C,GAAD,EAAMF,GAAN,EAAWC,GAAX,CAAb;AACA,YAAM4C,IAAI,GAAG,CAACb,IAAD,EAAOE,IAAP,EAAaS,IAAb,CAAb;AACA,YAAMG,IAAI,GAAGX,IAAI,GAAGS,IAAH,GAAUC,IAA3B;AACA,YAAME,IAAI,GAAGD,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,YAAMwF,IAAI,GAAGF,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,YAAMyF,IAAI,GAAGH,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,YAAM0F,IAAI,GAAGF,IAAb;AACA,YAAMG,IAAI,GAAGF,IAAb;AACA,YAAMG,IAAI,GAAGL,IAAb;AACA,YAAMM,KAAK,GAAG1B,IAAd;AACA,YAAM2B,KAAK,GAAGnD,IAAd;AACA,YAAMoD,KAAK,GAAGlD,IAAd;;AAEA,OAAC,MAAM;AACL,cAAML,GAAG,GAAGkD,IAAZ;AACA,cAAMjD,GAAG,GAAGkD,IAAZ;AACA,cAAMjD,GAAG,GAAGkD,IAAZ;AACA,cAAMjD,IAAI,GAAGkD,KAAb;AACA,cAAMjD,IAAI,GAAGkD,KAAb;AACA,cAAMjD,IAAI,GAAGkD,KAAb;;AAEA,YAAI,CAAC,MAAM;AACT,gBAAMjD,GAAG,GAAGjE,MAAM,CAACkE,EAAP,CAAUN,GAAV,EAAe5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAf,CAAZ;AAEA,iBAAO8C,GAAP;AAAY,SAHV,GAAJ,EAGmB;AACjBzB,UAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,EAAgG8B,GAAhG,EAAqGU,GAArG,EAA0GC,GAA1G,EAA+GC,GAA/G,EAAoHC,IAApH,EAA0HE,IAA1H,CAApB,CAAf;AACAxB,UAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,EAAgG8B,GAAhG,EAAqGU,GAArG,EAA0GC,GAA1G,EAA+GC,GAA/G,EAAoHG,IAApH,CAApB,CAAtB;AACAxB,UAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,6CAA3B,EAA0ElB,MAAM,CAACmB,QAAjF,EAA2F,CAA3F,CAAD,CAAP,CAAb;AACAqB,UAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,SARH,MASK;AACH,gBAAMC,IAAI,GAAGvE,MAAM,CAACwE,GAAP,CAAWT,IAAX,EAAiB/D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,IAA1E,CAAjB,CAAb;AACA,gBAAMsD,IAAI,GAAGX,IAAb;AACA,gBAAMY,IAAI,GAAGX,IAAb;AACA,gBAAMY,IAAI,GAAGX,IAAb;;AAEA,cAAI,CAAC,MAAM;AACT,kBAAMY,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,mBAAOE,IAAP;AAAa,WAHX,GAAJ,EAGoB;AAClB,kBAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,CAACvB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcnB,KAAd,EAAqB,CAACxB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAArB,CAAtB;AACAnC,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,WATH,MAUK;AACH,kBAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,kBAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,YAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,cAAAA,GAAG,EAAEuB,IADS;AAEdtB,cAAAA,IAAI,EAAE,MAFQ;AAGd6B,cAAAA,EAAE,EAAED,IAHU;AAId3B,cAAAA,GAAG,EAAEC;AAJS,aAAhB;AAMAf,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAclB,KAAd,EAAqB,CAACzB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAArB,CAAf;AACAjC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC;AAAC,OA9CT;;AA+CA,aAAO9B,KAAP;AACC,KAtFiB,CAApB;AAuFA,UAAM,CAAC6C,IAAD,IAASF,IAAI,CAACrC,IAApB;AACA,UAAMwC,IAAI,GAAGH,IAAI,CAACnC,IAAlB;AACA,UAAMuC,IAAI,GAAGJ,IAAI,CAACjC,IAAlB;AACA;AACA,UAAMsC,IAAI,GAAGH,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMsE,IAAI,GAAGJ,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMuE,IAAI,GAAG,CAACF,IAAD,EAAO5B,GAAP,EAAY6B,IAAZ,CAAb;AACA,UAAME,IAAI,GAAG3F,MAAM,CAAC4F,SAAP,CAAiB/B,GAAjB,EAAsBD,GAAtB,EAA2B8B,IAA3B,CAAb;AACA,UAAMG,IAAI,GAAG7F,MAAM,CAAC4F,SAAP,CAAiBjC,GAAjB,EAAsBC,GAAtB,EAA2B4B,IAA3B,CAAb;AACA,UAAMM,IAAI,GAAGnC,GAAG,CAACoC,MAAJ,CAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGlG,MAAM,CAACmG,SAAP,CAAiBX,IAAjB,EAAuBS,IAAvB,CAAb;AACA,YAAMG,IAAI,GAAGF,IAAI,GAAG,IAAH,GAAU,KAA3B;AACA,YAAMG,IAAI,GAAGL,IAAI,GAAGA,IAAH,GAAUI,IAA3B;AAEA,aAAOC,IAAP;AAAa,KALF,EAKI,KALJ,CAAb;AAMA,UAAMC,IAAI,GAAGtG,MAAM,CAACwE,GAAP,CAAWZ,GAAX,EAAgB5D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,CAA1E,CAAhB,CAAb;AACA,UAAMoF,IAAI,GAAG,CAAC1C,GAAD,EAAMF,GAAN,EAAWC,GAAX,CAAb;AACA,UAAM4C,IAAI,GAAG,CAACb,IAAD,EAAOE,IAAP,EAAaS,IAAb,CAAb;AACA,UAAMG,IAAI,GAAGX,IAAI,GAAGS,IAAH,GAAUC,IAA3B;AACA,UAAME,IAAI,GAAGD,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMwF,IAAI,GAAGF,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMyF,IAAI,GAAGH,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAM0F,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGL,IAAb;AACA,UAAMM,KAAK,GAAG1B,IAAd;AACA,UAAM2B,KAAK,GAAGnD,IAAd;AACA,UAAMoD,KAAK,GAAGlD,IAAd;AAEAL,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AAEA;AACC;;AACH,QAAM3C,IAAI,GAAGvE,MAAM,CAACwE,GAAP,CAAWT,IAAX,EAAiB/D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,IAA1E,CAAjB,CAAb;AACA,MAAIsD,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAMY,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,WAAOE,IAAP;AAAa,GAHR,GAAP,EAGoB;AAClB,UAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACA,UAAMS,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC1E,IAAD,CAAf,EAAuB,KAAvB,EAA8BoE,IAA9B,CAApB;;AACA,QAAIK,IAAI,CAACgC,UAAT,EAAqB;AAEnB,YAAMC,IAAI,GAAG,MAAO9G,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAnB,EAA6F,CAACX,IAAD,EAAOY,IAAP,EAAaV,IAAb,EAAmBA,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAA7F,EAAmI,CAACuC,GAAD,EAAMY,GAAN,EAAWU,IAAX,EAAiBO,IAAjB,EAAuBL,IAAvB,EAA6BE,IAA7B,CAAnI,EAAuK,CAAC3E,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CAAD,EAAwE,EAAxE,CAAvK,EAAoP,EAApP,EAAwP,IAAxP,EAA8P,KAA9P,EAAqQ,KAArQ,EAA6Q,MAAOiG,IAAP,IAAgB;AAC/S,cAAM5E,KAAK,GAAG;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAD,QAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,CAACvB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGL,IAAjG,EAAuGE,IAAvG,CAApB,CAAf;AACAnC,QAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAcnB,KAAd,EAAqB,CAACxB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGH,IAAjG,CAArB,CAA1B;AACA,cAAM,KAAKyC,IAAI,CAACtE,IAAhB;AACA,cAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,cAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AAEAV,QAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,UAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CADS;AAEdkC,UAAAA,IAAI,EAAE,IAFQ;AAGdC,UAAAA,GAAG,EAAEC;AAHS,SAAhB;AAKA,cAAMgE,KAAK,GAAGF,IAAd;AACA,cAAMG,KAAK,GAAG/C,IAAd;AACA,cAAMgD,KAAK,GAAG9C,IAAd;;AAEA,SAAC,MAAM;AACL,gBAAMF,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;;AAEA,cAAI,CAAC,MAAM;AACT,kBAAM7C,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,mBAAOE,IAAP;AAAa,WAHX,GAAJ,EAGoB;AAClB,kBAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,CAACvB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcnB,KAAd,EAAqB,CAACxB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAArB,CAAtB;AACAnC,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,WATH,MAUK;AACH,kBAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,kBAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,YAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,cAAAA,GAAG,EAAEuB,IADS;AAEdtB,cAAAA,IAAI,EAAE,MAFQ;AAGd6B,cAAAA,EAAE,EAAED,IAHU;AAId3B,cAAAA,GAAG,EAAEC;AAJS,aAAhB;AAMAf,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAclB,KAAd,EAAqB,CAACzB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAArB,CAAf;AACAjC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACvD,IAAD,EAAO,CAACd,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC,SA5BN;;AA6BA,eAAO9B,KAAP;AACC,OA/CiB,CAApB;AAgDA,YAAM,KAAK4E,IAAI,CAACtE,IAAhB;AACA,YAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,YAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AACA;AACA,YAAMqE,KAAK,GAAGF,IAAd;AACA,YAAMG,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAG9C,IAAd;AAEAF,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AACC,KA/DH,MAgEK;AACH,YAAM,CAACC,IAAD,IAASvC,IAAI,CAACrC,IAApB;AACA,YAAM6E,IAAI,GAAGxC,IAAI,CAACnC,IAAlB;AACA,YAAM4E,IAAI,GAAGzC,IAAI,CAACjC,IAAlB;AACA,YAAM2E,IAAI,GAAG7H,MAAM,CAACwE,GAAP,CAAWG,IAAX,EAAiB+C,IAAjB,CAAb;AACA;AACA,YAAMH,KAAK,GAAGI,IAAd;AACA,YAAMH,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAGI,IAAd;AAEApD,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AAAU;AACX;;AACH,QAAMzC,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,QAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACA;AACA,QAAMgE,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC1E,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,QAAM,CAACqH,IAAD,IAAS5C,IAAI,CAACrC,IAApB;AACA,QAAMkF,IAAI,GAAG7C,IAAI,CAACnC,IAAlB;AACA,QAAMiF,IAAI,GAAG9C,IAAI,CAACjC,IAAlB;AACA;AACA,QAAMgF,IAAI,GAAGlI,MAAM,CAACmG,SAAP,CAAiBlD,GAAjB,EAAsBgF,IAAtB,CAAb;AACAjI,EAAAA,MAAM,CAACmI,MAAP,CAAcD,IAAd,EAAoB;AAClBhG,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AAGC;MAxUmB+F,O;AAwUnB;AACH,OAAO,eAAe0B,KAAf,CAAqBxJ,GAArB,EAA0BC,QAA1B,EAAoC;AACzC,QAAMP,MAAM,GAAGM,GAAG,CAACN,MAAnB;AACA,QAAMQ,IAAI,GAAGR,MAAM,CAACW,SAApB;AACA,QAAMD,IAAI,GAAGV,MAAM,CAACS,MAApB;AACA,QAAMG,IAAI,GAAGZ,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,CAAf,CAAb;AACA,QAAMM,IAAI,GAAGd,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOA,IAAP,CAAf,CAAb;AACA,QAAMK,IAAI,GAAGf,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,CAAf,CAAb;AACA,QAAMM,IAAI,GAAGhB,MAAM,CAACa,OAAP,CAAe,CAACL,IAAD,EAAOE,IAAP,EAAaA,IAAb,CAAf,CAAb;AACA,QAAMU,IAAI,GAAGpB,MAAM,CAACiB,OAAP,CAAeD,IAAf,EAAqBhB,MAAM,CAACkB,mBAAP,CAA2B,WAA3B,EAAwClB,MAAM,CAACmB,QAA/C,EAAyD,CAAzD,CAArB,CAAb;AACA,QAAME,IAAI,GAAGrB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaY,IAAb,EAAmBV,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,CAAf,CAAb;AACA,QAAMY,IAAI,GAAGtB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaY,IAAb,EAAmBV,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAAf,CAAb;AACA,QAAMa,IAAI,GAAGvB,MAAM,CAACa,OAAP,CAAe,CAACH,IAAD,EAAOF,IAAP,EAAaE,IAAb,CAAf,CAAb;AAGA,QAAMkB,GAAG,GAAG,MAAMtB,GAAG,CAACuB,YAAJ,EAAlB;AAEA,QAAMS,IAAI,GAAG,MAAOhC,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC5E,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,QAAM,CAACqC,GAAD,IAAQP,IAAI,CAACQ,IAAnB;AACA,QAAMC,GAAG,GAAGT,IAAI,CAACU,IAAjB;AACA,QAAMC,GAAG,GAAGX,IAAI,CAACY,IAAjB;AACA;AACA,QAAMM,GAAG,GAAG,CAACX,GAAD,EAAMA,GAAN,CAAZ;AACA,QAAMY,GAAG,GAAG,CAACZ,GAAD,EAAM7C,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAN,EAAmFnB,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAnF,CAAZ;AACA,QAAMuC,GAAG,GAAG,CAACD,GAAD,EAAMA,GAAN,CAAZ;AACA,MAAIE,GAAG,GAAGH,GAAV;AACA,MAAII,GAAG,GAAG5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAV;AACA,MAAI0C,GAAG,GAAGH,GAAV;AACA,MAAII,IAAI,GAAGf,GAAX;AACA,MAAIgB,IAAI,GAAGnC,GAAX;AACA,MAAIoC,IAAI,GAAGhE,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAM8C,GAAG,GAAGjE,MAAM,CAACkE,EAAP,CAAUN,GAAV,EAAe5D,MAAM,CAACkB,mBAAP,CAA2B,2BAA3B,EAAwDlB,MAAM,CAACmB,QAA/D,EAAyE,CAAzE,CAAf,CAAZ;AAEA,WAAO8C,GAAP;AAAY,GAHP,GAAP,EAGmB;AACjB,UAAMkB,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAACxE,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,UAAM,CAACyE,IAAD,IAASF,IAAI,CAACrC,IAApB;AACA,UAAMwC,IAAI,GAAGH,IAAI,CAACnC,IAAlB;AACA,UAAMuC,IAAI,GAAGJ,IAAI,CAACjC,IAAlB;AACA;AACA,UAAMsC,IAAI,GAAGH,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMsE,IAAI,GAAGJ,IAAI,CAACrF,MAAM,CAACkB,mBAAP,CAA2B,6BAA3B,EAA0DlB,MAAM,CAACmB,QAAjE,EAA2E,CAA3E,CAAD,CAAjB;AACA,UAAMuE,IAAI,GAAG,CAACF,IAAD,EAAO5B,GAAP,EAAY6B,IAAZ,CAAb;AACA,UAAME,IAAI,GAAG3F,MAAM,CAAC4F,SAAP,CAAiB/B,GAAjB,EAAsBD,GAAtB,EAA2B8B,IAA3B,CAAb;AACA,UAAMG,IAAI,GAAG7F,MAAM,CAAC4F,SAAP,CAAiBjC,GAAjB,EAAsBC,GAAtB,EAA2B4B,IAA3B,CAAb;AACA,UAAMM,IAAI,GAAGnC,GAAG,CAACoC,MAAJ,CAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGlG,MAAM,CAACmG,SAAP,CAAiBX,IAAjB,EAAuBS,IAAvB,CAAb;AACA,YAAMG,IAAI,GAAGF,IAAI,GAAG,IAAH,GAAU,KAA3B;AACA,YAAMG,IAAI,GAAGL,IAAI,GAAGA,IAAH,GAAUI,IAA3B;AAEA,aAAOC,IAAP;AAAa,KALF,EAKI,KALJ,CAAb;AAMA,UAAMC,IAAI,GAAGtG,MAAM,CAACwE,GAAP,CAAWZ,GAAX,EAAgB5D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,CAA1E,CAAhB,CAAb;AACA,UAAMoF,IAAI,GAAG,CAAC1C,GAAD,EAAMF,GAAN,EAAWC,GAAX,CAAb;AACA,UAAM4C,IAAI,GAAG,CAACb,IAAD,EAAOE,IAAP,EAAaS,IAAb,CAAb;AACA,UAAMG,IAAI,GAAGX,IAAI,GAAGS,IAAH,GAAUC,IAA3B;AACA,UAAME,IAAI,GAAGD,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMwF,IAAI,GAAGF,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAMyF,IAAI,GAAGH,IAAI,CAACzG,MAAM,CAACkB,mBAAP,CAA2B,yBAA3B,EAAsDlB,MAAM,CAACmB,QAA7D,EAAuE,CAAvE,CAAD,CAAjB;AACA,UAAM0F,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGF,IAAb;AACA,UAAMG,IAAI,GAAGL,IAAb;AACA,UAAMM,KAAK,GAAG1B,IAAd;AACA,UAAM2B,KAAK,GAAGnD,IAAd;AACA,UAAMoD,KAAK,GAAGlD,IAAd;AAEAL,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,GAAG,GAAGkD,IAAN;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AACAjD,IAAAA,IAAI,GAAGkD,KAAP;AAEA;AACC;;AACH,QAAM3C,IAAI,GAAGvE,MAAM,CAACwE,GAAP,CAAWT,IAAX,EAAiB/D,MAAM,CAACkB,mBAAP,CAA2B,4BAA3B,EAAyDlB,MAAM,CAACmB,QAAhE,EAA0E,IAA1E,CAAjB,CAAb;AACA,MAAIsD,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;AACA,MAAIY,IAAI,GAAGX,IAAX;;AAEA,SAAO,CAAC,MAAM;AACZ,UAAMY,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,WAAOE,IAAP;AAAa,GAHR,GAAP,EAGoB;AAClB,UAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACA,UAAMqF,IAAI,GAAG/J,MAAM,CAACgC,OAAP,CAAelB,IAAf,EAAqB,MAAMP,QAAQ,CAACyJ,eAAT,EAA3B,EAAuD;AAClE9H,MAAAA,EAAE,EAAE,gCAD8D;AAElEC,MAAAA,EAAE,EAAE,CAAC,4GAAD,EAA+G,4GAA/G,CAF8D;AAGlEC,MAAAA,GAAG,EAAE,iBAH6D;AAIlEC,MAAAA,GAAG,EAAE;AAJ6D,KAAvD,CAAb;AAMA,UAAM4H,IAAI,GAAGF,IAAI,CAAC/J,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AAGA,UAAMgE,IAAI,GAAG,MAAO7E,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAnB,EAA6F,CAACX,IAAD,EAAOY,IAAP,EAAaV,IAAb,EAAmBA,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,CAA7F,EAAyI,CAACuC,GAAD,EAAMY,GAAN,EAAWU,IAAX,EAAiBO,IAAjB,EAAuBL,IAAvB,EAA6BE,IAA7B,EAAmCsF,IAAnC,CAAzI,EAAmL,CAACA,IAAD,EAAO,EAAP,CAAnL,EAA+L,CAACvJ,IAAD,CAA/L,EAAuM,IAAvM,EAA6M,KAA7M,EAAoNoE,IAApN,EAA2N,MAAOK,IAAP,IAAgB;AAC7P,YAAM3C,KAAK,GAAG;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAD,MAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGL,IAAjG,EAAuGE,IAAvG,CAApB,CAAf;AACAnC,MAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGH,IAAjG,CAApB,CAA1B;AACA,YAAM,CAAC+C,IAAD,IAASvC,IAAI,CAACrC,IAApB;AACA,YAAM6E,IAAI,GAAGxC,IAAI,CAACnC,IAAlB;AACA,YAAM4E,IAAI,GAAGzC,IAAI,CAACjC,IAAlB;AAEA,YAAM2E,IAAI,GAAG7H,MAAM,CAACwE,GAAP,CAAWG,IAAX,EAAiB+C,IAAjB,CAAb;AACAlF,MAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,QAAAA,GAAG,EAAEsE,IADS;AAEdrE,QAAAA,IAAI,EAAE,IAFQ;AAGdC,QAAAA,GAAG,EAAEC;AAHS,OAAhB;AAKA,YAAMgE,KAAK,GAAGI,IAAd;AACA,YAAMH,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAGI,IAAd;;AAEA,OAAC,MAAM;AACL,cAAMpD,IAAI,GAAG8C,KAAb;AACA,cAAM7C,IAAI,GAAG8C,KAAb;AACA,cAAM7C,IAAI,GAAG8C,KAAb;;AAEA,YAAI,CAAC,MAAM;AACT,gBAAM7C,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,iBAAOE,IAAP;AAAa,SAHX,GAAJ,EAGoB;AAClB,gBAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,UAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,UAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAApB,CAAtB;AACAnC,UAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACtD,IAAD,EAAO,CAACf,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,UAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,SATH,MAUK;AACH,gBAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,gBAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,UAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,YAAAA,GAAG,EAAEuB,IADS;AAEdtB,YAAAA,IAAI,EAAE,MAFQ;AAGd6B,YAAAA,EAAE,EAAED,IAHU;AAId3B,YAAAA,GAAG,EAAEC;AAJS,WAAhB;AAMAf,UAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,CAACvB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAApB,CAAf;AACAjC,UAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,UAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACtD,IAAD,EAAO,CAACf,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,UAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC,OA5BN;;AA6BA,aAAO9B,KAAP;AACC,KAhDiB,CAApB;;AAiDA,QAAI2C,IAAI,CAACgC,UAAT,EAAqB;AAEnB,YAAMC,IAAI,GAAG,MAAO9G,GAAG,CAACiC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBvC,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAnB,EAA6F,CAACX,IAAD,EAAOY,IAAP,EAAaV,IAAb,EAAmBA,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,CAA7F,EAAmI,CAACuC,GAAD,EAAMY,GAAN,EAAWU,IAAX,EAAiBO,IAAjB,EAAuBL,IAAvB,EAA6BE,IAA7B,CAAnI,EAAuK,CAAC3E,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CAAD,EAAwE,EAAxE,CAAvK,EAAoP,EAApP,EAAwP,IAAxP,EAA8P,KAA9P,EAAqQ,KAArQ,EAA6Q,MAAOiG,IAAP,IAAgB;AAC/S,cAAM5E,KAAK,GAAG;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAD,QAAAA,KAAK,CAACE,MAAN,GAAe1C,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGL,IAAjG,EAAuGE,IAAvG,CAApB,CAAf;AACAnC,QAAAA,KAAK,CAACI,iBAAN,GAA0B5C,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,wBAA3B,EAAqDlB,MAAM,CAACmB,QAA5D,EAAsE,CAAtE,CAAD,EAA2E8B,GAA3E,EAAgFY,GAAhF,EAAqFU,IAArF,EAA2FO,IAA3F,EAAiGH,IAAjG,CAApB,CAA1B;AACA,cAAM,KAAKyC,IAAI,CAACtE,IAAhB;AACA,cAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,cAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AAEAV,QAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,UAAAA,GAAG,EAAEpD,MAAM,CAACkB,mBAAP,CAA2B,qBAA3B,EAAkDlB,MAAM,CAACmB,QAAzD,EAAmE,CAAnE,CADS;AAEdkC,UAAAA,IAAI,EAAE,IAFQ;AAGdC,UAAAA,GAAG,EAAEC;AAHS,SAAhB;AAKA,cAAMgE,KAAK,GAAGF,IAAd;AACA,cAAMG,KAAK,GAAG/C,IAAd;AACA,cAAMgD,KAAK,GAAG9C,IAAd;;AAEA,SAAC,MAAM;AACL,gBAAMF,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;AACA,gBAAM7C,IAAI,GAAG8C,KAAb;;AAEA,cAAI,CAAC,MAAM;AACT,kBAAM7C,IAAI,GAAG5E,MAAM,CAAC6E,EAAP,CAAUN,IAAV,EAAgBG,IAAhB,CAAb;AAEA,mBAAOE,IAAP;AAAa,WAHX,GAAJ,EAGoB;AAClB,kBAAME,IAAI,GAAG9E,MAAM,CAAC+E,GAAP,CAAWR,IAAX,EAAiBG,IAAjB,CAAb;AACAlC,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAActB,IAAd,EAAoB,CAACrB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHL,IAAvH,EAA6HE,IAA7H,CAApB,CAAf;AACAnC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAcrB,IAAd,EAAoB,CAACtB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGY,GAAtG,EAA2GU,IAA3G,EAAiHO,IAAjH,EAAuHH,IAAvH,CAApB,CAAtB;AACAnC,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACtD,IAAD,EAAO,CAACf,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC,WATH,MAUK;AACH,kBAAMU,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,kBAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACAqB,YAAAA,KAAK,CAACC,IAAN,CAAWU,IAAX,CAAgB;AACdC,cAAAA,GAAG,EAAEuB,IADS;AAEdtB,cAAAA,IAAI,EAAE,MAFQ;AAGd6B,cAAAA,EAAE,EAAED,IAHU;AAId3B,cAAAA,GAAG,EAAEC;AAJS,aAAhB;AAMAf,YAAAA,KAAK,CAAC2B,MAAN,GAAenE,MAAM,CAAC2C,MAAP,CAAcpB,IAAd,EAAoB,CAACvB,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,EAAsGwB,IAAtG,CAApB,CAAf;AACAjC,YAAAA,KAAK,CAAC4B,aAAN,GAAsBpE,MAAM,CAAC2C,MAAP,CAAc/B,IAAd,EAAoB,CAACZ,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,EAAiG8B,GAAjG,CAApB,CAAtB;AACAT,YAAAA,KAAK,CAAC6B,IAAN,GAAa,CAACtD,IAAD,EAAO,CAACf,MAAM,CAACkB,mBAAP,CAA2B,8CAA3B,EAA2ElB,MAAM,CAACmB,QAAlF,EAA4F,CAA5F,CAAD,CAAP,CAAb;AACAqB,YAAAA,KAAK,CAAC8B,MAAN,GAAe,KAAf;AACC;AAAC,SA5BN;;AA6BA,eAAO9B,KAAP;AACC,OA/CiB,CAApB;AAgDA,YAAM,KAAK4E,IAAI,CAACtE,IAAhB;AACA,YAAMuE,IAAI,GAAGD,IAAI,CAACpE,IAAlB;AACA,YAAMsE,IAAI,GAAGF,IAAI,CAAClE,IAAlB;AACA;AACA,YAAMqE,KAAK,GAAGF,IAAd;AACA,YAAMG,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAG9C,IAAd;AAEAF,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AACC,KA/DH,MAgEK;AACH,YAAM,CAACC,IAAD,IAASvC,IAAI,CAACrC,IAApB;AACA,YAAM6E,IAAI,GAAGxC,IAAI,CAACnC,IAAlB;AACA,YAAM4E,IAAI,GAAGzC,IAAI,CAACjC,IAAlB;AACA,YAAM2E,IAAI,GAAG7H,MAAM,CAACwE,GAAP,CAAWG,IAAX,EAAiB+C,IAAjB,CAAb;AACA;AACA,YAAMH,KAAK,GAAGI,IAAd;AACA,YAAMH,KAAK,GAAG/C,IAAd;AACA,YAAMgD,KAAK,GAAGI,IAAd;AAEApD,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AACA7C,MAAAA,IAAI,GAAG8C,KAAP;AAEA;AAAU;AACX;;AACH,QAAMzC,IAAI,GAAGnB,GAAG,CAAC7D,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAhB;AACA,QAAM8D,IAAI,GAAGD,IAAI,CAAChF,MAAM,CAACkB,mBAAP,CAA2B,8BAA3B,EAA2DlB,MAAM,CAACmB,QAAlE,EAA4E,CAA5E,CAAD,CAAjB;AACA;AACA,QAAMgE,IAAI,GAAG,MAAO7E,GAAG,CAAC8E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC1E,IAAD,CAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAApB;AACA,QAAM,CAACqH,IAAD,IAAS5C,IAAI,CAACrC,IAApB;AACA,QAAMkF,IAAI,GAAG7C,IAAI,CAACnC,IAAlB;AACA,QAAMiF,IAAI,GAAG9C,IAAI,CAACjC,IAAlB;AACA;AACA,QAAMgF,IAAI,GAAGlI,MAAM,CAACmG,SAAP,CAAiBlD,GAAjB,EAAsBgF,IAAtB,CAAb;AACAjI,EAAAA,MAAM,CAACmI,MAAP,CAAcD,IAAd,EAAoB;AAClBhG,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AAGC;MAhPmByH,K;AAgPnB;AAEH,MAAMI,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFc;AAuFZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArJc;AAsJZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArKc;AAsKZ/J,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3Mc;AA4MZgK,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL,IAHK,EAGC,IAHD,EAGO,IAHP,EAGa,IAHb,EAGmB;AAC3BD,IAAAA,KAAK,EAAE,CADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAHnB,EAML;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GANK,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,CA5ME;AA4NZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjmhXS,EAgxnBS,EAwnv3BS,EAuzsCS,CA5NK;AAs6CZC,EAAAA,WAAW,EAAE;AAt6CD,CAAd;AAw6CA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAvqBa;AAwqBXC,EAAAA,QAAQ,EAAG,whWAxqBA;AAyqBXC,EAAAA,UAAU,EAAG,gBAzqBF;AA0qBX1K,EAAAA,KAAK,EAAE;AA1qBI,CAAb;AA8qBA,OAAO,MAAM2K,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Address;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc0, ctc0]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc1, ctc5, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc1, ctc0]);\n  const ctc9 = stdlib.T_Tuple([]);\n  const ctc10 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc1, ctc10, ctc0, ctc5, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:32:23:application', stdlib.UInt_max, 19));\n  stdlib.protect(ctc0, await interact.announce(v20, stdlib.checkedBigNumberify('./index.rsh:34:66:decimal', stdlib.UInt_max, 5)), {\n    at: './index.rsh:34:60:application',\n    fs: ['at ./index.rsh:32:23:application call to [unknown function] (defined at: ./index.rsh:32:27:function exp)'],\n    msg: 'announce',\n    who: 'Admin'\n    });\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0), [ctc0, ctc1], [v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:36:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v52 = [v24, v24];\n    const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n    const v55 = [v53, v53];\n    const v49 = v52;\n    const v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v51 = v55;\n    const v388 = v26;\n    const v389 = v18;\n    const v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      \n      return v58;})()) {\n      sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v391 = v388;\n      const v392 = v389;\n      const v393 = v390;\n      \n      if ((() => {\n        const v332 = stdlib.gt(v324, v392);\n        \n        return v332;})()) {\n        const v362 = stdlib.sub(v324, v392);\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n        const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v393,\n          kind: 'from',\n          to: v370,\n          tok: undefined\n          });\n        sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v58;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc2], false, false));\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      \n      return v309;}, false)\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    \n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    \n    continue;\n    }\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n  \n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    \n    return v332;})()) {\n    const v362 = stdlib.sub(v324, v392);\n    const txn2 = await (ctc.recv(7, 1, [ctc0], false, v362));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc1, ctc5, ctc0, ctc0, ctc0, ctc0], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n        \n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n          \n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            \n            return v332;})()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;\n      }\n    else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;}\n    }\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v380 = v369[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  \n  \n  const txn2 = await (ctc.sendrecv(6, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc1, ctc0, ctc0], [v23, v391, v380], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 5), v23, v391]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 5), v23]);\n    const [v382] = txn2.data;\n    const v385 = txn2.time;\n    const v381 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v384 = stdlib.addressEq(v23, v381);\n    stdlib.assert(v384, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc9, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc9, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  return;\n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc0], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v58;})()) {\n    const v171 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 170));\n    const v174 = stdlib.protect(ctc1, await interact.getParams(v171), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v182 = ['None', null];\n    const v208 = v49[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v209 = v49[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v231 = stdlib.addressEq(v208, v171);\n    const v235 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v236 = [v235, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v238 = [v182, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v239 = v231 ? v236 : v238;\n    const v244 = v239[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v245 = v239[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v246;\n    switch (v244[0]) {\n      case 'None': {\n        \n        const v249 = stdlib.addressEq(v209, v171);\n        const v253 = stdlib.add(v245, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v254 = ['Some', v245];\n        const v255 = [v254, v245];\n        const v256 = [v244, v253];\n        const v257 = v249 ? v255 : v256;\n        v246 = v257;\n        \n        break;\n        }\n      case 'Some': {\n        const v260 = v244[1];\n        v246 = v239;\n        \n        break;\n        }\n      }\n    const v265 = v246[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v271;\n    switch (v265[0]) {\n      case 'None': {\n        \n        v271 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v275 = v265[1];\n        v271 = v275;\n        \n        break;\n        }\n      }\n    \n    const v281 = [v174, v171];\n    \n    const txn2 = await (ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v23, v49, v50, v51, v388, v390, v281], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n      const [v285] = txn2.data;\n      const v289 = txn2.time;\n      const v284 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v293 = [v291, v50, v292];\n      const v295 = stdlib.Array_set(v51, v50, v293);\n      const v298 = stdlib.Array_set(v49, v50, v291);\n      const v311 = v49.reduce((v304, v305) => {\n        const v307 = stdlib.addressEq(v291, v305);\n        const v308 = v307 ? true : false;\n        const v309 = v304 ? v304 : v308;\n        \n        return v309;}, false)\n      const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v315 = [v51, v49, v50];\n      const v316 = [v295, v298, v314];\n      const v317 = v311 ? v315 : v316;\n      const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv49 = v320;\n      const cv50 = v321;\n      const cv51 = v319;\n      const cv388 = v289;\n      const cv389 = v388;\n      const cv390 = v390;\n      \n      (() => {\n        const v49 = cv49;\n        const v50 = cv50;\n        const v51 = cv51;\n        const v388 = cv388;\n        const v389 = cv389;\n        const v390 = cv390;\n        \n        if ((() => {\n          const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          \n          return v58;})()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v388, v390]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v49, v50, v51, v390]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v391 = v388;\n          const v392 = v389;\n          const v393 = v390;\n          \n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            \n            return v332;})()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      \n      return v309;}, false)\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    \n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    \n    continue;\n    }\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n  \n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    \n    return v332;})()) {\n    const v362 = stdlib.sub(v324, v392);\n    const txn2 = await (ctc.recv(7, 1, [ctc1], false, v362));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n        \n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n          \n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            \n            return v332;})()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;\n      }\n    else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;}\n    }\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn2 = await (ctc.recv(6, 1, [ctc1], false, false));\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  return;\n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc0], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v52 = [v24, v24];\n  const v53 = [v24, stdlib.checkedBigNumberify('./index.rsh:38:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:38:44:decimal', stdlib.UInt_max, 0)];\n  const v55 = [v53, v53];\n  let v49 = v52;\n  let v50 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v51 = v55;\n  let v388 = v26;\n  let v389 = v18;\n  let v390 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v58 = stdlib.le(v50, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v58;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc2], false, false));\n    const [v285] = txn2.data;\n    const v289 = txn2.time;\n    const v284 = txn2.from;\n    ;\n    const v291 = v285[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v292 = v285[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v293 = [v291, v50, v292];\n    const v295 = stdlib.Array_set(v51, v50, v293);\n    const v298 = stdlib.Array_set(v49, v50, v291);\n    const v311 = v49.reduce((v304, v305) => {\n      const v307 = stdlib.addressEq(v291, v305);\n      const v308 = v307 ? true : false;\n      const v309 = v304 ? v304 : v308;\n      \n      return v309;}, false)\n    const v314 = stdlib.add(v50, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v315 = [v51, v49, v50];\n    const v316 = [v295, v298, v314];\n    const v317 = v311 ? v315 : v316;\n    const v319 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v320 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v321 = v317[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv49 = v320;\n    const cv50 = v321;\n    const cv51 = v319;\n    const cv388 = v289;\n    const cv389 = v388;\n    const cv390 = v390;\n    \n    v49 = cv49;\n    v50 = cv50;\n    v51 = cv51;\n    v388 = cv388;\n    v389 = cv389;\n    v390 = cv390;\n    \n    continue;\n    }\n  const v324 = stdlib.add(v389, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  let v391 = v388;\n  let v392 = v389;\n  let v393 = v390;\n  \n  while ((() => {\n    const v332 = stdlib.gt(v324, v392);\n    \n    return v332;})()) {\n    const v362 = stdlib.sub(v324, v392);\n    const v345 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:102:48:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    const v346 = v345[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    \n    \n    const txn2 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393, v346], [v346, []], [ctc1], true, false, v362, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      \n      const v355 = stdlib.add(v393, v351);\n      sim_r.txns.push({\n        amt: v351,\n        kind: 'to',\n        tok: undefined\n        });\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      \n      (() => {\n        const v391 = cv391;\n        const v392 = cv392;\n        const v393 = cv393;\n        \n        if ((() => {\n          const v332 = stdlib.gt(v324, v392);\n          \n          return v332;})()) {\n          const v362 = stdlib.sub(v324, v392);\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n          const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v393,\n            kind: 'from',\n            to: v370,\n            tok: undefined\n            });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), [ctc0, ctc6, ctc1, ctc1, ctc1, ctc1], [v23, v51, v324, v362, v391, v393], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:dot', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n        const [] = txn3.data;\n        const v367 = txn3.time;\n        const v365 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv391 = v367;\n        const cv392 = v391;\n        const cv393 = v393;\n        \n        (() => {\n          const v391 = cv391;\n          const v392 = cv392;\n          const v393 = cv393;\n          \n          if ((() => {\n            const v332 = stdlib.gt(v324, v392);\n            \n            return v332;})()) {\n            const v362 = stdlib.sub(v324, v392);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v391, v393]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v51, v324, v362, v393]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:48:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n            const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v393,\n              kind: 'from',\n              to: v370,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v391]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v367 = txn3.time;\n      const v365 = txn3.from;\n      ;\n      const cv391 = v367;\n      const cv392 = v391;\n      const cv393 = v393;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;\n      }\n    else {\n      const [v351] = txn2.data;\n      const v356 = txn2.time;\n      const v350 = txn2.from;\n      const v355 = stdlib.add(v393, v351);\n      ;\n      const cv391 = v356;\n      const cv392 = v391;\n      const cv393 = v355;\n      \n      v391 = cv391;\n      v392 = cv392;\n      v393 = cv393;\n      \n      continue;}\n    }\n  const v369 = v51[stdlib.checkedBigNumberify('./index.rsh:139:40:array ref', stdlib.UInt_max, 0)];\n  const v370 = v369[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn2 = await (ctc.recv(6, 1, [ctc1], false, false));\n  const [v382] = txn2.data;\n  const v385 = txn2.time;\n  const v381 = txn2.from;\n  ;\n  const v384 = stdlib.addressEq(v23, v381);\n  stdlib.assert(v384, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 121\n    }, null, null, null, null, {\n    count: 8,\n    size: 129\n    }, {\n    count: 12,\n    size: 249\n    }, {\n    count: 11,\n    size: 241\n    }, {\n    count: 12,\n    size: 337\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:36:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 254\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 255\nload 255\nconcat\nconcat\nint 0\nitob\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 251\nload 250\n+\nstore 249\n// \"CheckPay\"\n// \"./index.rsh:102:48:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 250\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nbtoi\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:48:dot\"\n// \"[at ./index.rsh:102:48:application call to [unknown function] (defined at: ./index.rsh:102:48:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 250\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 250\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 252\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\ndup\nstore 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 243\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v382\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v351\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v49\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v388\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v390\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T26\",\n                \"name\": \"v285\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v382\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v351\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T23\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v324\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v362\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v391\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v393\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v49\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T3[2]\",\n                \"name\": \"v51\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v388\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v390\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T26\",\n                \"name\": \"v285\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611588806100826000396000f3fe60806040526004361061004e5760003560e01c80630e02fe3b1461005a578063372c9abf1461006f5780637216f683146100825780639645fa5614610095578063bf5e3746146100a857610055565b3661005557005b600080fd5b61006d610068366004611165565b6100bb565b005b61006d61007d3660046110ba565b610231565b61006d6100903660046110e7565b6102d9565b61006d6100a33660046110cb565b61064e565b61006d6100b63660046110cb565b6107af565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c600054146100f857600080fd5b60008055610104610d77565b341561010f57600080fd5b61011f6040830160208401611099565b81516001600160a01b0391909116905261013f6040830160208401611099565b81516001600160a01b03919091166020918201526101639060408401908401611099565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f3edc19012383f1a954d272136ca587df4f30f9b69fd94318a56658f3640102eb906101d390849061139c565b60405180910390a16101e3610da9565b80513390528151602080830180519290925281516000910181905260408085015183519091015281514360609091015281518535608090910152905160a0015261022c816108f9565b505050565b60405161024590600590839060200161143a565b6040516020818303038152906040528051906020012060001c6000541461026b57600080fd5b60008055341561027a57600080fd5b336102886020830183611099565b6001600160a01b03161461029b57600080fd5b7f3fd684d5a5cd7a8e5e62ecf7a1cfbbc4e9d8ed03496e7d09af98f376e95ccd7f816040516102ca91906112f3565b60405180910390a16000805533ff5b6040516102ed90600290839060200161144e565b6040516020818303038152906040528051906020012060001c6000541461031357600080fd5b6000805561031f610dca565b341561032a57600080fd5b61033c6101c083016101a08401611099565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156104215760208301816002811061039b57634e487b7160e01b600052603260045260246000fd5b6020020160208101906103ae9190611099565b6001600160a01b0316604083015260208201516104025760408201516001600160a01b03166103e56101c085016101a08601611099565b6001600160a01b0316146103fa5760006103fd565b60015b610408565b81602001515b151560208301528061041981611521565b91505061036f565b50602081015115156060820152604080518082019091526080830160026000835b8282101561046e5761045f606083028501368190038101906110f9565b81526020019060010190610442565b5050505060808201515260408051808201825290602084019060029083908390808284376000920182905250608080860180516020019590955293516060870135604091820152805180820190915261050b9490935086019150600290835b828210156104f9576104ea606083028501368190038101906110f9565b815260200190600101906104cd565b505084516060870135925090506109f6565b60a0820151526040805180820182526105559160208501906002908390839080828437600092019190915250505060608401356105506101c086016101a08701611099565b610a94565b60a08201516020015261056d600160608401356114f2565b60a0820151604001526060810151610589578060a0015161058f565b80608001515b60c08201526040517ff676ac3f2efb8dbd11a37943b910eb4d888e3f22bdbf526e961d493ae952a7b0906105c4908490611360565b60405180910390a16105d4610da9565b6105e16020840184611099565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261022c816108f9565b6040516106629060049083906020016113c4565b6040516020818303038152906040528051906020012060001c6000541461068857600080fd5b600080556106a06101008201356101208301356114f2565b43106106ab57600080fd5b34610160820135146106bc57600080fd5b7f589dad80e3910e29a7387fd6250e4ec3654840609b69d32931872a4e73dfa11e816040516106eb919061130f565b60405180910390a16106fb610e19565b6107086020830183611099565b81516001600160a01b039091169052604080518082019091526020830160026000835b8282101561075757610748606083028501368190038101906110f9565b8152602001906001019061072b565b505083516020908101939093525050815160e08401356040909101528082018051439052516101208401359101526107996101608301356101408401356114f2565b6020820151604001526107ab81610b4e565b5050565b6040516107c39060049083906020016113c4565b6040516020818303038152906040528051906020012060001c600054146107e957600080fd5b600080556108016101008201356101208301356114f2565b43101561080d57600080fd5b341561081857600080fd5b7f0c4d355a064bbc44930ff544ed8946198d654feb166504864cb91d9da58c46f881604051610847919061132d565b60405180910390a1610857610e19565b6108646020830183611099565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156108b3576108a4606083028501368190038101906110f9565b81526020019060010190610887565b505083516020908101939093525050815160e08401356040918201528183018051439052805161012086013593019290925290516101408401359101526107ab81610b4e565b60018160200151602001511161098d57610911610e55565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a090810151908401525161096c91600291849101611463565b60408051601f198184030181529190528051602090910120600055506109f3565b610995610ea0565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a001518251909101526107ab81610c4f565b50565b6109fe610ec0565b60005b6002811015610a6657848160028110610a2a57634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610a4f57634e487b7160e01b600052603260045260246000fd5b602002015280610a5e81611521565b915050610a01565b5081818460028110610a8857634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610a9c610eed565b60005b6002811015610b1257848160028110610ac857634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610aed57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610b0a81611521565b915050610a9f565b5081818460028110610b3457634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b60408051602081019091526000815260208083015101518251604001511115610c05576020808301510151825160400151610b89919061150a565b8152610b93610f0b565b8251516001600160a01b031681528251602090810151818301528351604090810151818401528351606084015281850180515160808501525181015160a084015251610be4916004918491016113d9565b60408051601f198184030181529190528051602090910120600055506107ab565b610c0d610f50565b82515181516001600160a01b03909116905282516020908101518251820152830180515182516040908101919091529051015181516060015261022c81610cc6565b610c57610e19565b81515181516001600160a01b0390911690528151602090810151825190910152815160600151610c8a90612328906114f2565b8151604090810191909152825181015160208084018051929092528451606001518251909101528351608001519051909101526107ab81610b4e565b8051602081015151516060909101516040516001600160a01b03909216916108fc82150291906000818181858888f19350505050158015610d0b573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528451516001600160a01b039081168452855185015183528451600592810192909252835116938101939093525160608301529060800160408051601f1981840301815291905280516020909101206000555050565b6040518060600160405280610d8a610eed565b8152602001610d97610f63565b8152602001610da4610ec0565b905290565b60408051606081018252600091810191825290815260208101610da4610f8d565b6040518060e00160405280610ddd610f63565b8152600060208201819052604082018190526060820152608001610dff610fcf565b8152602001610e0c610fcf565b8152602001610da4610fcf565b6040518060400160405280610e2c610ffc565b8152602001610da460405180606001604052806000815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b03168152602001610e78610eed565b815260200160008152602001610e8c610ec0565b815260200160008152602001600081525090565b6040518060400160405280610eb361101f565b8152600060209091015290565b60405180604001604052806002905b610ed7610f63565b815260200190600190039081610ecf5790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b03168152602001610f2e610ec0565b8152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280610eb3611042565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060c00160405280610fa0610eed565b815260200160008152602001610fb4610ec0565b81526020016000815260200160008152602001600081525090565b6040518060600160405280610fe2610ec0565b8152602001610fef610eed565b8152602001600081525090565b604051806060016040528060006001600160a01b03168152602001610fef610ec0565b6040518060a0016040528060006001600160a01b03168152602001610fb4610ec0565b604051806080016040528060006001600160a01b03168152602001610e8c610ec0565b80356001600160a01b038116811461107c57600080fd5b919050565b60006101808284031215611093578081fd5b50919050565b6000602082840312156110aa578081fd5b6110b382611065565b9392505050565b600060608284031215611093578081fd5b600061018082840312156110dd578081fd5b6110b38383611081565b60006101c08284031215611093578081fd5b60006060828403121561110a578081fd5b6040516060810181811067ffffffffffffffff8211171561113957634e487b7160e01b83526041600452602483fd5b60405261114583611065565b815260208301356020820152604083013560408201528091505092915050565b600060408284031215611093578081fd5b8060005b60028110156111bd576001600160a01b0361119483611065565b16845260208281013590850152604080830135908501526060938401939091019060010161117a565b50505050565b8060005b60028110156111bd57815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016111c7565b6001600160a01b0361121982611065565b16825261122c6020830160208301611176565b60e081810135908301526101008082013590830152610120808201359083015261014090810135910152565b6001600160a01b0361126982611065565b168252602090810135910152565b6001600160a01b038061128983611065565b168352602080840181840160005b60028110156112bd57846112aa83611065565b1683529183019190830190600101611297565b5050505050606081013560608301526112dc6080830160808301611176565b610140818101359083015261016090810135910152565b606081016113018284611258565b604092830135919092015290565b610180810161131e8284611208565b61016092830135919092015290565b610180810161133c8284611208565b6101608084013580151580821461135257600080fd5b808386015250505092915050565b6101c0810161136f8284611277565b61018083810135908301526101a06001600160a01b03611390828601611065565b16818401525092915050565b81358152604081016001600160a01b036113b860208501611065565b16602083015292915050565b82815261018081016110b36020830184611208565b82815281516001600160a01b031660208083019190915282015161018082019061140660408401826111c3565b5060408301516101008301526060830151610120830152608083015161014083015260a08301516101608301529392505050565b828152606081016110b36020830184611258565b8281526101a081016110b36020830184611277565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b60028110156114b45782516001600160a01b031682526020820192840192915060010161148c565b505050506040830151608083015260608301516114d460a08401826111c3565b50608083015161016083015260a08301516101808301529392505050565b600082198211156115055761150561153c565b500190565b60008282101561151c5761151c61153c565b500390565b60006000198214156115355761153561153c565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e600b1d6c7e9c8abc56329f18abf9e6b8bc0ed38647eacaf4b84c02d0bd9398f64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}