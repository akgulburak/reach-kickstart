{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), [ctc1], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    return sim_r;\n  });\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc0], [v19, v21, v19], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v26] = txn2.data;\n    const v29 = txn2.time;\n    const v25 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v28 = stdlib.addressEq(v19, v25);\n    stdlib.assert(v28, {\n      at: './index.rsh:37:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    const v55 = [v26, v26];\n    const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v58 = [v56, v56];\n    const v52 = v55;\n    const v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v54 = v58;\n    const v527 = v29;\n    const v528 = v21;\n    const v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      return v61;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n      const v340 = v342;\n      const v530 = v527;\n      const v531 = v528;\n      const v532 = v529;\n\n      if ((() => {\n        const v347 = stdlib.gt(v327, v531);\n        return v347;\n      })()) {\n        const v377 = stdlib.sub(v327, v531);\n        sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        const v399 = v340.reduce((v391, v392) => {\n          const v395 = stdlib.gt(v392, v391);\n          const v397 = v395 ? v392 : v391;\n          return v397;\n        }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n        const v408 = ['None', null];\n        const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n        const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n        const v457 = stdlib.eq(v434, v399);\n        const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n        const v465 = v457 ? v462 : v464;\n        const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n        const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n        let v472;\n\n        switch (v470[0]) {\n          case 'None':\n            {\n              const v475 = stdlib.eq(v435, v399);\n              const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n              const v480 = ['Some', v471];\n              const v481 = [v480, v471];\n              const v482 = [v470, v479];\n              const v483 = v475 ? v481 : v482;\n              v472 = v483;\n              break;\n            }\n\n          case 'Some':\n            {\n              const v486 = v470[1];\n              v472 = v465;\n              break;\n            }\n        }\n\n        const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n        let v497;\n\n        switch (v491[0]) {\n          case 'None':\n            {\n              v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n              break;\n            }\n\n          case 'Some':\n            {\n              const v501 = v491[1];\n              v497 = v501;\n              break;\n            }\n        }\n\n        const v507 = v54[v497];\n        const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v532,\n          kind: 'from',\n          to: v508,\n          tok: undefined\n        });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v61;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      return v312;\n    }, false);\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    continue;\n  }\n\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n\n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    return v347;\n  })()) {\n    const v377 = stdlib.sub(v327, v531);\n    const txn3 = await ctc.recv(8, 1, [ctc1], false, v377);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n\n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n\n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            return v347;\n          })()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              return v397;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n\n            switch (v470[0]) {\n              case 'None':\n                {\n                  const v475 = stdlib.eq(v435, v399);\n                  const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v480 = ['Some', v471];\n                  const v481 = [v480, v471];\n                  const v482 = [v470, v479];\n                  const v483 = v475 ? v481 : v482;\n                  v472 = v483;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v486 = v470[1];\n                  v472 = v465;\n                  break;\n                }\n            }\n\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n\n            switch (v491[0]) {\n              case 'None':\n                {\n                  v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v501 = v491[1];\n                  v497 = v501;\n                  break;\n                }\n            }\n\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    } else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    }\n  }\n\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    return v397;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n\n  switch (v470[0]) {\n    case 'None':\n      {\n        const v475 = stdlib.eq(v435, v399);\n        const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v480 = ['Some', v471];\n        const v481 = [v480, v471];\n        const v482 = [v470, v479];\n        const v483 = v475 ? v481 : v482;\n        v472 = v483;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v486 = v470[1];\n        v472 = v465;\n        break;\n      }\n  }\n\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n\n  switch (v491[0]) {\n    case 'None':\n      {\n        v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v501 = v491[1];\n        v497 = v501;\n        break;\n      }\n  }\n\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v519 = v507[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  const txn3 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v19, v530, v519], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, async txn3 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v19, v530]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v19]);\n    const [v521] = txn3.data;\n    const v524 = txn3.time;\n    const v520 = txn3.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v523 = stdlib.addressEq(v19, v520);\n    stdlib.assert(v523, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc10, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v61;\n  })()) {\n    const v174 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 173));\n    const v177 = stdlib.protect(ctc1, await interact.getParams(v174), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v185 = ['None', null];\n    const v211 = v52[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v212 = v52[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v234 = stdlib.addressEq(v211, v174);\n    const v238 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v239 = [v238, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v241 = [v185, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v242 = v234 ? v239 : v241;\n    const v247 = v242[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v248 = v242[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v249;\n\n    switch (v247[0]) {\n      case 'None':\n        {\n          const v252 = stdlib.addressEq(v212, v174);\n          const v256 = stdlib.add(v248, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v257 = ['Some', v248];\n          const v258 = [v257, v248];\n          const v259 = [v247, v256];\n          const v260 = v252 ? v258 : v259;\n          v249 = v260;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v263 = v247[1];\n          v249 = v242;\n          break;\n        }\n    }\n\n    const v268 = v249[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v274;\n\n    switch (v268[0]) {\n      case 'None':\n        {\n          v274 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v278 = v268[1];\n          v274 = v278;\n          break;\n        }\n    }\n\n    const v284 = [v177, v174];\n    const txn3 = await ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v19, v52, v53, v54, v527, v529, v284], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n      const [v288] = txn3.data;\n      const v292 = txn3.time;\n      const v287 = txn3.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v296 = [v294, v53, v295];\n      const v298 = stdlib.Array_set(v54, v53, v296);\n      const v301 = stdlib.Array_set(v52, v53, v294);\n      const v314 = v52.reduce((v307, v308) => {\n        const v310 = stdlib.addressEq(v294, v308);\n        const v311 = v310 ? true : false;\n        const v312 = v307 ? v307 : v311;\n        return v312;\n      }, false);\n      const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v318 = [v54, v52, v53];\n      const v319 = [v298, v301, v317];\n      const v320 = v314 ? v318 : v319;\n      const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv52 = v323;\n      const cv53 = v324;\n      const cv54 = v322;\n      const cv527 = v292;\n      const cv528 = v527;\n      const cv529 = v529;\n\n      (() => {\n        const v52 = cv52;\n        const v53 = cv53;\n        const v54 = cv54;\n        const v527 = cv527;\n        const v528 = cv528;\n        const v529 = cv529;\n\n        if ((() => {\n          const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          return v61;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n          const v340 = v342;\n          const v530 = v527;\n          const v531 = v528;\n          const v532 = v529;\n\n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            return v347;\n          })()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              return v397;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n\n            switch (v470[0]) {\n              case 'None':\n                {\n                  const v475 = stdlib.eq(v435, v399);\n                  const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v480 = ['Some', v471];\n                  const v481 = [v480, v471];\n                  const v482 = [v470, v479];\n                  const v483 = v475 ? v481 : v482;\n                  v472 = v483;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v486 = v470[1];\n                  v472 = v465;\n                  break;\n                }\n            }\n\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n\n            switch (v491[0]) {\n              case 'None':\n                {\n                  v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v501 = v491[1];\n                  v497 = v501;\n                  break;\n                }\n            }\n\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      return v312;\n    }, false);\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    continue;\n  }\n\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n\n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    return v347;\n  })()) {\n    const v377 = stdlib.sub(v327, v531);\n    const txn3 = await ctc.recv(8, 1, [ctc1], false, v377);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n\n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n\n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            return v347;\n          })()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              return v397;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n\n            switch (v470[0]) {\n              case 'None':\n                {\n                  const v475 = stdlib.eq(v435, v399);\n                  const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v480 = ['Some', v471];\n                  const v481 = [v480, v471];\n                  const v482 = [v470, v479];\n                  const v483 = v475 ? v481 : v482;\n                  v472 = v483;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v486 = v470[1];\n                  v472 = v465;\n                  break;\n                }\n            }\n\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n\n            switch (v491[0]) {\n              case 'None':\n                {\n                  v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v501 = v491[1];\n                  v497 = v501;\n                  break;\n                }\n            }\n\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    } else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    }\n  }\n\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    return v397;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n\n  switch (v470[0]) {\n    case 'None':\n      {\n        const v475 = stdlib.eq(v435, v399);\n        const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v480 = ['Some', v471];\n        const v481 = [v480, v471];\n        const v482 = [v470, v479];\n        const v483 = v475 ? v481 : v482;\n        v472 = v483;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v486 = v470[1];\n        v472 = v465;\n        break;\n      }\n  }\n\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n\n  switch (v491[0]) {\n    case 'None':\n      {\n        v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v501 = v491[1];\n        v497 = v501;\n        break;\n      }\n  }\n\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v61;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      return v312;\n    }, false);\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    continue;\n  }\n\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n\n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    return v347;\n  })()) {\n    const v377 = stdlib.sub(v327, v531);\n    const v360 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v361 = v360[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    const txn3 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532, v361], [v361, []], [ctc1], true, false, v377, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      sim_r.txns.push({\n        amt: v366,\n        kind: 'to',\n        tok: undefined\n      });\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n\n      (() => {\n        const v340 = cv340;\n        const v530 = cv530;\n        const v531 = cv531;\n        const v532 = cv532;\n\n        if ((() => {\n          const v347 = stdlib.gt(v327, v531);\n          return v347;\n        })()) {\n          const v377 = stdlib.sub(v327, v531);\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v399 = v340.reduce((v391, v392) => {\n            const v395 = stdlib.gt(v392, v391);\n            const v397 = v395 ? v392 : v391;\n            return v397;\n          }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n          const v408 = ['None', null];\n          const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n          const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n          const v457 = stdlib.eq(v434, v399);\n          const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n          const v465 = v457 ? v462 : v464;\n          const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n          const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n          let v472;\n\n          switch (v470[0]) {\n            case 'None':\n              {\n                const v475 = stdlib.eq(v435, v399);\n                const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v480 = ['Some', v471];\n                const v481 = [v480, v471];\n                const v482 = [v470, v479];\n                const v483 = v475 ? v481 : v482;\n                v472 = v483;\n                break;\n              }\n\n            case 'Some':\n              {\n                const v486 = v470[1];\n                v472 = v465;\n                break;\n              }\n          }\n\n          const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n          let v497;\n\n          switch (v491[0]) {\n            case 'None':\n              {\n                v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                break;\n              }\n\n            case 'Some':\n              {\n                const v501 = v491[1];\n                v497 = v501;\n                break;\n              }\n          }\n\n          const v507 = v54[v497];\n          const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v532,\n            kind: 'from',\n            to: v508,\n            tok: undefined\n          });\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n\n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n\n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            return v347;\n          })()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              return v397;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n\n            switch (v470[0]) {\n              case 'None':\n                {\n                  const v475 = stdlib.eq(v435, v399);\n                  const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v480 = ['Some', v471];\n                  const v481 = [v480, v471];\n                  const v482 = [v470, v479];\n                  const v483 = v475 ? v481 : v482;\n                  v472 = v483;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v486 = v470[1];\n                  v472 = v465;\n                  break;\n                }\n            }\n\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n\n            switch (v491[0]) {\n              case 'None':\n                {\n                  v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v501 = v491[1];\n                  v497 = v501;\n                  break;\n                }\n            }\n\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    } else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      continue;\n    }\n  }\n\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    return v397;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n\n  switch (v470[0]) {\n    case 'None':\n      {\n        const v475 = stdlib.eq(v435, v399);\n        const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v480 = ['Some', v471];\n        const v481 = [v480, v471];\n        const v482 = [v470, v479];\n        const v483 = v475 ? v481 : v482;\n        v472 = v483;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v486 = v470[1];\n        v472 = v465;\n        break;\n      }\n  }\n\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n\n  switch (v491[0]) {\n    case 'None':\n      {\n        v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v501 = v491[1];\n        v497 = v501;\n        break;\n      }\n  }\n\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n  }, {\n    count: 8,\n    size: 153\n  }, null, null, null, null, {\n    count: 8,\n    size: 129\n  }, {\n    count: 13,\n    size: 265\n  }, {\n    count: 12,\n    size: 257\n  }, {\n    count: 12,\n    size: 337\n  }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 251\nint 0\nitob\nint 0\nitob\nconcat\nstore 250\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 250\nsubstring 0 8\nbtoi\nstore 249\nload 250\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl3:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl4:\nl2:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 241\nl6:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl7:\nl5:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 250\nload 249\n+\nstore 248\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 249\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 247\nitob\nconcat\nload 248\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 247\nload 252\nsubstring 8 16\nbtoi\nstore 246\nint 0\nload 247\nload 247\nint 0\n>\nselect\ndup\nstore 245\nload 246\nload 246\nload 245\n>\nselect\nstore 244\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 247\nload 244\n==\nselect\ndup\nstore 243\nsubstring 0 9\nstore 242\nload 243\nsubstring 9 17\nbtoi\nstore 241\nload 242\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 242\nload 241\nint 1\n+\nitob\nconcat\nint 1\nload 241\nconcat\nbyte base64()\nconcat\nload 241\nitob\nconcat\nload 246\nload 244\n==\nselect\nstore 240\nl2:\nload 242\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 242\nsubstring 1 9\nbtoi\nstore 239\nload 243\nstore 240\nl3:\nl1:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 239\nl5:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 240\nsubstring 1 10\nbtoi\ndup\nstore 238\nstore 239\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 239\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 248\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 249\nload 252\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 250\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 244\nint 0\nitob\nint 0\nitob\nconcat\nstore 243\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 242\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nconcat\nload 242\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 243\nsubstring 0 8\nbtoi\nstore 242\nload 243\nsubstring 8 16\nbtoi\nstore 241\nint 0\nload 242\nload 242\nint 0\n>\nselect\ndup\nstore 240\nload 241\nload 241\nload 240\n>\nselect\nstore 239\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 242\nload 239\n==\nselect\ndup\nstore 238\nsubstring 0 9\nstore 237\nload 238\nsubstring 9 17\nbtoi\nstore 236\nload 237\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 236\nint 1\n+\nitob\nconcat\nint 1\nload 236\nconcat\nbyte base64()\nconcat\nload 236\nitob\nconcat\nload 241\nload 239\n==\nselect\nstore 235\nl3:\nload 237\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 237\nsubstring 1 9\nbtoi\nstore 234\nload 238\nstore 235\nl4:\nl2:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 234\nl6:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 235\nsubstring 1 10\nbtoi\ndup\nstore 233\nstore 234\nl7:\nl5:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nint 48\nload 234\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v52\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v53\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v288\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v521\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v52\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v53\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v288\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v521\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: ``,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Tuple","ctc3","ctc4","ctc5","T_Array","checkedBigNumberify","UInt_max","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","ctc14","v18","creationTime","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","data","v21","time","v19","from","push","amt","kind","tok","undefined","nextSt","nextSt_noTime","view","isHalt","txn2","v26","v29","v25","v28","addressEq","assert","at","fs","msg","who","v55","v56","v58","v52","v53","v54","v527","v528","v529","v61","le","v327","add","v342","v340","v530","v531","v532","v347","gt","v377","sub","v399","reduce","v391","v392","v395","v397","v408","v434","v435","v457","eq","v461","v462","v464","v465","v470","v471","v472","v475","v479","v480","v481","v482","v483","v486","v491","v497","v501","v507","v508","to","txn3","recv","v288","v292","v287","v294","v295","v296","v298","Array_set","v301","v314","v307","v308","v310","v311","v312","v317","v318","v319","v320","v322","v323","v324","cv52","cv53","cv54","cv527","cv528","cv529","didTimeout","txn4","v382","v380","cv340","cv530","cv531","cv532","v366","v371","v365","v370","v519","v521","v524","v520","v523","Nominee","v174","selfAddress","v177","protect","getParams","v185","v211","v212","v234","v238","v239","v241","v242","v247","v248","v249","v252","v256","v257","v258","v259","v260","v263","v268","v274","v278","v284","Voter","v360","shouldBuyTicket","v361","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1Fc;AA2FZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzJc;AA0JZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzKc;AA0KZhM,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/Mc;AAgNZiM,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHK,EAML,IANK,EAMC,IAND,EAMO,IANP,EAMa,IANb,EAMmB;AAC3BD,IAAAA,KAAK,EAAE,CADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GANnB,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,CAhNE;AAmOZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjhHS,EAgheS,EAgeN,IAheM,EAgeA,IAheA,EAgeM,IAheN,EAgeY,IAheZ,EAgemtmBS,EAsmBL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9+BS,EA8+BL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA72CS,EA62CL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAj0DS,CAnOK;AAqiEZC,EAAAA,WAAW,EAAE;AAriED,CAAd;AAuiEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EArwBa;AAswBXC,EAAAA,QAAQ,EAAG,4/bAtwBA;AAuwBXC,EAAAA,UAAU,EAAG,gBAvwBF;AAwwBX3M,EAAAA,KAAK,EAAE;AAxwBI,CAAb;AA4wBA,OAAO,MAAM4M,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), [ctc1], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:19:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  \n  \n  const txn2 = await (ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc0], [v19, v21, v19], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v26] = txn2.data;\n    const v29 = txn2.time;\n    const v25 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v28 = stdlib.addressEq(v19, v25);\n    stdlib.assert(v28, {\n      at: './index.rsh:37:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    const v55 = [v26, v26];\n    const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v58 = [v56, v56];\n    const v52 = v55;\n    const v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v54 = v58;\n    const v527 = v29;\n    const v528 = v21;\n    const v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      \n      return v61;})()) {\n      sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n      const v340 = v342;\n      const v530 = v527;\n      const v531 = v528;\n      const v532 = v529;\n      \n      if ((() => {\n        const v347 = stdlib.gt(v327, v531);\n        \n        return v347;})()) {\n        const v377 = stdlib.sub(v327, v531);\n        sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        const v399 = v340.reduce((v391, v392) => {\n          const v395 = stdlib.gt(v392, v391);\n          const v397 = v395 ? v392 : v391;\n          \n          return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n        const v408 = ['None', null];\n        const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n        const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n        const v457 = stdlib.eq(v434, v399);\n        const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n        const v465 = v457 ? v462 : v464;\n        const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n        const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n        let v472;\n        switch (v470[0]) {\n          case 'None': {\n            \n            const v475 = stdlib.eq(v435, v399);\n            const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n            const v480 = ['Some', v471];\n            const v481 = [v480, v471];\n            const v482 = [v470, v479];\n            const v483 = v475 ? v481 : v482;\n            v472 = v483;\n            \n            break;\n            }\n          case 'Some': {\n            const v486 = v470[1];\n            v472 = v465;\n            \n            break;\n            }\n          }\n        const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n        let v497;\n        switch (v491[0]) {\n          case 'None': {\n            \n            v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n            \n            break;\n            }\n          case 'Some': {\n            const v501 = v491[1];\n            v497 = v501;\n            \n            break;\n            }\n          }\n        const v507 = v54[v497];\n        const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v532,\n          kind: 'from',\n          to: v508,\n          tok: undefined\n          });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v61;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      \n      return v312;}, false)\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    \n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    \n    continue;\n    }\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n  \n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    \n    return v347;})()) {\n    const v377 = stdlib.sub(v327, v531);\n    const txn3 = await (ctc.recv(8, 1, [ctc1], false, v377));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n        \n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n          \n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            \n            return v347;})()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              \n              return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n            switch (v470[0]) {\n              case 'None': {\n                \n                const v475 = stdlib.eq(v435, v399);\n                const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v480 = ['Some', v471];\n                const v481 = [v480, v471];\n                const v482 = [v470, v479];\n                const v483 = v475 ? v481 : v482;\n                v472 = v483;\n                \n                break;\n                }\n              case 'Some': {\n                const v486 = v470[1];\n                v472 = v465;\n                \n                break;\n                }\n              }\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n            switch (v491[0]) {\n              case 'None': {\n                \n                v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v501 = v491[1];\n                v497 = v501;\n                \n                break;\n                }\n              }\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;\n      }\n    else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;}\n    }\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    \n    return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n  switch (v470[0]) {\n    case 'None': {\n      \n      const v475 = stdlib.eq(v435, v399);\n      const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v480 = ['Some', v471];\n      const v481 = [v480, v471];\n      const v482 = [v470, v479];\n      const v483 = v475 ? v481 : v482;\n      v472 = v483;\n      \n      break;\n      }\n    case 'Some': {\n      const v486 = v470[1];\n      v472 = v465;\n      \n      break;\n      }\n    }\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n  switch (v491[0]) {\n    case 'None': {\n      \n      v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v501 = v491[1];\n      v497 = v501;\n      \n      break;\n      }\n    }\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v519 = v507[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  \n  \n  const txn3 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v19, v530, v519], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, (async (txn3) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v19, v530]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v19]);\n    const [v521] = txn3.data;\n    const v524 = txn3.time;\n    const v520 = txn3.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v523 = stdlib.addressEq(v19, v520);\n    stdlib.assert(v523, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc10, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v61;})()) {\n    const v174 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 173));\n    const v177 = stdlib.protect(ctc1, await interact.getParams(v174), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v185 = ['None', null];\n    const v211 = v52[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v212 = v52[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v234 = stdlib.addressEq(v211, v174);\n    const v238 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v239 = [v238, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v241 = [v185, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v242 = v234 ? v239 : v241;\n    const v247 = v242[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v248 = v242[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v249;\n    switch (v247[0]) {\n      case 'None': {\n        \n        const v252 = stdlib.addressEq(v212, v174);\n        const v256 = stdlib.add(v248, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v257 = ['Some', v248];\n        const v258 = [v257, v248];\n        const v259 = [v247, v256];\n        const v260 = v252 ? v258 : v259;\n        v249 = v260;\n        \n        break;\n        }\n      case 'Some': {\n        const v263 = v247[1];\n        v249 = v242;\n        \n        break;\n        }\n      }\n    const v268 = v249[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v274;\n    switch (v268[0]) {\n      case 'None': {\n        \n        v274 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v278 = v268[1];\n        v274 = v278;\n        \n        break;\n        }\n      }\n    \n    const v284 = [v177, v174];\n    \n    const txn3 = await (ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v19, v52, v53, v54, v527, v529, v284], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n      const [v288] = txn3.data;\n      const v292 = txn3.time;\n      const v287 = txn3.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v296 = [v294, v53, v295];\n      const v298 = stdlib.Array_set(v54, v53, v296);\n      const v301 = stdlib.Array_set(v52, v53, v294);\n      const v314 = v52.reduce((v307, v308) => {\n        const v310 = stdlib.addressEq(v294, v308);\n        const v311 = v310 ? true : false;\n        const v312 = v307 ? v307 : v311;\n        \n        return v312;}, false)\n      const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v318 = [v54, v52, v53];\n      const v319 = [v298, v301, v317];\n      const v320 = v314 ? v318 : v319;\n      const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv52 = v323;\n      const cv53 = v324;\n      const cv54 = v322;\n      const cv527 = v292;\n      const cv528 = v527;\n      const cv529 = v529;\n      \n      (() => {\n        const v52 = cv52;\n        const v53 = cv53;\n        const v54 = cv54;\n        const v527 = cv527;\n        const v528 = cv528;\n        const v529 = cv529;\n        \n        if ((() => {\n          const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          \n          return v61;})()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v527, v529]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v19, v52, v53, v54, v529]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n          const v340 = v342;\n          const v530 = v527;\n          const v531 = v528;\n          const v532 = v529;\n          \n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            \n            return v347;})()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              \n              return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n            switch (v470[0]) {\n              case 'None': {\n                \n                const v475 = stdlib.eq(v435, v399);\n                const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v480 = ['Some', v471];\n                const v481 = [v480, v471];\n                const v482 = [v470, v479];\n                const v483 = v475 ? v481 : v482;\n                v472 = v483;\n                \n                break;\n                }\n              case 'Some': {\n                const v486 = v470[1];\n                v472 = v465;\n                \n                break;\n                }\n              }\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n            switch (v491[0]) {\n              case 'None': {\n                \n                v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v501 = v491[1];\n                v497 = v501;\n                \n                break;\n                }\n              }\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      \n      return v312;}, false)\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    \n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    \n    continue;\n    }\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n  \n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    \n    return v347;})()) {\n    const v377 = stdlib.sub(v327, v531);\n    const txn3 = await (ctc.recv(8, 1, [ctc1], false, v377));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n        \n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n          \n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            \n            return v347;})()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              \n              return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n            switch (v470[0]) {\n              case 'None': {\n                \n                const v475 = stdlib.eq(v435, v399);\n                const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v480 = ['Some', v471];\n                const v481 = [v480, v471];\n                const v482 = [v470, v479];\n                const v483 = v475 ? v481 : v482;\n                v472 = v483;\n                \n                break;\n                }\n              case 'Some': {\n                const v486 = v470[1];\n                v472 = v465;\n                \n                break;\n                }\n              }\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n            switch (v491[0]) {\n              case 'None': {\n                \n                v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v501 = v491[1];\n                v497 = v501;\n                \n                break;\n                }\n              }\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;\n      }\n    else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;}\n    }\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    \n    return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n  switch (v470[0]) {\n    case 'None': {\n      \n      const v475 = stdlib.eq(v435, v399);\n      const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v480 = ['Some', v471];\n      const v481 = [v480, v471];\n      const v482 = [v470, v479];\n      const v483 = v475 ? v481 : v482;\n      v472 = v483;\n      \n      break;\n      }\n    case 'Some': {\n      const v486 = v470[1];\n      v472 = v465;\n      \n      break;\n      }\n    }\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n  switch (v491[0]) {\n    case 'None': {\n      \n      v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v501 = v491[1];\n      v497 = v501;\n      \n      break;\n      }\n    }\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v26] = txn2.data;\n  const v29 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v28 = stdlib.addressEq(v19, v25);\n  stdlib.assert(v28, {\n    at: './index.rsh:37:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  const v55 = [v26, v26];\n  const v56 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v58 = [v56, v56];\n  let v52 = v55;\n  let v53 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v54 = v58;\n  let v527 = v29;\n  let v528 = v21;\n  let v529 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v61 = stdlib.le(v53, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v61;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v288] = txn3.data;\n    const v292 = txn3.time;\n    const v287 = txn3.from;\n    ;\n    const v294 = v288[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v295 = v288[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v296 = [v294, v53, v295];\n    const v298 = stdlib.Array_set(v54, v53, v296);\n    const v301 = stdlib.Array_set(v52, v53, v294);\n    const v314 = v52.reduce((v307, v308) => {\n      const v310 = stdlib.addressEq(v294, v308);\n      const v311 = v310 ? true : false;\n      const v312 = v307 ? v307 : v311;\n      \n      return v312;}, false)\n    const v317 = stdlib.add(v53, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v318 = [v54, v52, v53];\n    const v319 = [v298, v301, v317];\n    const v320 = v314 ? v318 : v319;\n    const v322 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v323 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v324 = v320[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv52 = v323;\n    const cv53 = v324;\n    const cv54 = v322;\n    const cv527 = v292;\n    const cv528 = v527;\n    const cv529 = v529;\n    \n    v52 = cv52;\n    v53 = cv53;\n    v54 = cv54;\n    v527 = cv527;\n    v528 = cv528;\n    v529 = cv529;\n    \n    continue;\n    }\n  const v327 = stdlib.add(v528, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v342 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v340 = v342;\n  let v530 = v527;\n  let v531 = v528;\n  let v532 = v529;\n  \n  while ((() => {\n    const v347 = stdlib.gt(v327, v531);\n    \n    return v347;})()) {\n    const v377 = stdlib.sub(v327, v531);\n    const v360 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    const v361 = v360[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    \n    \n    const txn3 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532, v361], [v361, []], [ctc1], true, false, v377, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      \n      const v370 = stdlib.add(v532, v366);\n      sim_r.txns.push({\n        amt: v366,\n        kind: 'to',\n        tok: undefined\n        });\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      \n      (() => {\n        const v340 = cv340;\n        const v530 = cv530;\n        const v531 = cv531;\n        const v532 = cv532;\n        \n        if ((() => {\n          const v347 = stdlib.gt(v327, v531);\n          \n          return v347;})()) {\n          const v377 = stdlib.sub(v327, v531);\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v399 = v340.reduce((v391, v392) => {\n            const v395 = stdlib.gt(v392, v391);\n            const v397 = v395 ? v392 : v391;\n            \n            return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n          const v408 = ['None', null];\n          const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n          const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n          const v457 = stdlib.eq(v434, v399);\n          const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n          const v465 = v457 ? v462 : v464;\n          const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n          const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n          let v472;\n          switch (v470[0]) {\n            case 'None': {\n              \n              const v475 = stdlib.eq(v435, v399);\n              const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n              const v480 = ['Some', v471];\n              const v481 = [v480, v471];\n              const v482 = [v470, v479];\n              const v483 = v475 ? v481 : v482;\n              v472 = v483;\n              \n              break;\n              }\n            case 'Some': {\n              const v486 = v470[1];\n              v472 = v465;\n              \n              break;\n              }\n            }\n          const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n          let v497;\n          switch (v491[0]) {\n            case 'None': {\n              \n              v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n              \n              break;\n              }\n            case 'Some': {\n              const v501 = v491[1];\n              v497 = v501;\n              \n              break;\n              }\n            }\n          const v507 = v54[v497];\n          const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v532,\n            kind: 'from',\n            to: v508,\n            tok: undefined\n            });\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1], [v19, v54, v327, v340, v377, v530, v532], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n        const [] = txn4.data;\n        const v382 = txn4.time;\n        const v380 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv340 = v340;\n        const cv530 = v382;\n        const cv531 = v530;\n        const cv532 = v532;\n        \n        (() => {\n          const v340 = cv340;\n          const v530 = cv530;\n          const v531 = cv531;\n          const v532 = cv532;\n          \n          if ((() => {\n            const v347 = stdlib.gt(v327, v531);\n            \n            return v347;})()) {\n            const v377 = stdlib.sub(v327, v531);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v530, v532]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v19, v54, v327, v340, v377, v532]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v399 = v340.reduce((v391, v392) => {\n              const v395 = stdlib.gt(v392, v391);\n              const v397 = v395 ? v392 : v391;\n              \n              return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v408 = ['None', null];\n            const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v457 = stdlib.eq(v434, v399);\n            const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v465 = v457 ? v462 : v464;\n            const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v472;\n            switch (v470[0]) {\n              case 'None': {\n                \n                const v475 = stdlib.eq(v435, v399);\n                const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v480 = ['Some', v471];\n                const v481 = [v480, v471];\n                const v482 = [v470, v479];\n                const v483 = v475 ? v481 : v482;\n                v472 = v483;\n                \n                break;\n                }\n              case 'Some': {\n                const v486 = v470[1];\n                v472 = v465;\n                \n                break;\n                }\n              }\n            const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v497;\n            switch (v491[0]) {\n              case 'None': {\n                \n                v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v501 = v491[1];\n                v497 = v501;\n                \n                break;\n                }\n              }\n            const v507 = v54[v497];\n            const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v532,\n              kind: 'from',\n              to: v508,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19, v530]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v19]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v382 = txn4.time;\n      const v380 = txn4.from;\n      ;\n      const cv340 = v340;\n      const cv530 = v382;\n      const cv531 = v530;\n      const cv532 = v532;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;\n      }\n    else {\n      const [v366] = txn3.data;\n      const v371 = txn3.time;\n      const v365 = txn3.from;\n      const v370 = stdlib.add(v532, v366);\n      ;\n      const cv340 = v340;\n      const cv530 = v371;\n      const cv531 = v530;\n      const cv532 = v370;\n      \n      v340 = cv340;\n      v530 = cv530;\n      v531 = cv531;\n      v532 = cv532;\n      \n      continue;}\n    }\n  const v399 = v340.reduce((v391, v392) => {\n    const v395 = stdlib.gt(v392, v391);\n    const v397 = v395 ? v392 : v391;\n    \n    return v397;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v408 = ['None', null];\n  const v434 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v435 = v340[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v457 = stdlib.eq(v434, v399);\n  const v461 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v462 = [v461, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v464 = [v408, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v465 = v457 ? v462 : v464;\n  const v470 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v471 = v465[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v472;\n  switch (v470[0]) {\n    case 'None': {\n      \n      const v475 = stdlib.eq(v435, v399);\n      const v479 = stdlib.add(v471, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v480 = ['Some', v471];\n      const v481 = [v480, v471];\n      const v482 = [v470, v479];\n      const v483 = v475 ? v481 : v482;\n      v472 = v483;\n      \n      break;\n      }\n    case 'Some': {\n      const v486 = v470[1];\n      v472 = v465;\n      \n      break;\n      }\n    }\n  const v491 = v472[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v497;\n  switch (v491[0]) {\n    case 'None': {\n      \n      v497 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v501 = v491[1];\n      v497 = v501;\n      \n      break;\n      }\n    }\n  const v507 = v54[v497];\n  const v508 = v507[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v521] = txn3.data;\n  const v524 = txn3.time;\n  const v520 = txn3.from;\n  ;\n  const v523 = stdlib.addressEq(v19, v520);\n  stdlib.assert(v523, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  return;\n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n    }, {\n    count: 8,\n    size: 153\n    }, null, null, null, null, {\n    count: 8,\n    size: 129\n    }, {\n    count: 13,\n    size: 265\n    }, {\n    count: 12,\n    size: 257\n    }, {\n    count: 12,\n    size: 337\n    }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 251\nint 0\nitob\nint 0\nitob\nconcat\nstore 250\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 250\nsubstring 0 8\nbtoi\nstore 249\nload 250\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl3:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl4:\nl2:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 241\nl6:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl7:\nl5:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 250\nload 249\n+\nstore 248\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 249\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 247\nitob\nconcat\nload 248\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 247\nload 252\nsubstring 8 16\nbtoi\nstore 246\nint 0\nload 247\nload 247\nint 0\n>\nselect\ndup\nstore 245\nload 246\nload 246\nload 245\n>\nselect\nstore 244\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 247\nload 244\n==\nselect\ndup\nstore 243\nsubstring 0 9\nstore 242\nload 243\nsubstring 9 17\nbtoi\nstore 241\nload 242\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 242\nload 241\nint 1\n+\nitob\nconcat\nint 1\nload 241\nconcat\nbyte base64()\nconcat\nload 241\nitob\nconcat\nload 246\nload 244\n==\nselect\nstore 240\nl2:\nload 242\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 242\nsubstring 1 9\nbtoi\nstore 239\nload 243\nstore 240\nl3:\nl1:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 239\nl5:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 240\nsubstring 1 10\nbtoi\ndup\nstore 238\nstore 239\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 239\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 248\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 249\nload 252\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 250\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 244\nint 0\nitob\nint 0\nitob\nconcat\nstore 243\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 242\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nconcat\nload 242\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 243\nsubstring 0 8\nbtoi\nstore 242\nload 243\nsubstring 8 16\nbtoi\nstore 241\nint 0\nload 242\nload 242\nint 0\n>\nselect\ndup\nstore 240\nload 241\nload 241\nload 240\n>\nselect\nstore 239\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 242\nload 239\n==\nselect\ndup\nstore 238\nsubstring 0 9\nstore 237\nload 238\nsubstring 9 17\nbtoi\nstore 236\nload 237\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 236\nint 1\n+\nitob\nconcat\nint 1\nload 236\nconcat\nbyte base64()\nconcat\nload 236\nitob\nconcat\nload 241\nload 239\n==\nselect\nstore 235\nl3:\nload 237\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 237\nsubstring 1 9\nbtoi\nstore 234\nload 238\nstore 235\nl4:\nl2:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 234\nl6:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 235\nsubstring 1 10\nbtoi\ndup\nstore 233\nstore 234\nl7:\nl5:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nint 48\nload 234\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v52\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v53\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v288\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v521\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v52\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v53\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v527\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v288\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v521\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v366\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v54\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v327\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v340\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v377\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v530\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v532\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: ``,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}