{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/app/reach-react-template/src/components/participants/NomineeViews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { parseCurrency } from \"@reach-sh/stdlib/ALGO\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NomineeViews = ({\n  appState,\n  args,\n  getParamsReady,\n  getParams\n}) => {\n  switch (appState) {\n    case \"getParams\":\n      return getParamsReady ? /*#__PURE__*/_jsxDEV(GetParams, {\n        functionToCall: getParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading the getParams page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 23\n      }, this);\n\n    case \"showOutcome\":\n      return /*#__PURE__*/_jsxDEV(ShowOutcome, {\n        address: args[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n_c = NomineeViews;\n\nconst GetParams = ({\n  functionToCall\n}) => {\n  _s();\n\n  const [deadline, setDeadline] = useState(500);\n  const [ticketPrice, setTicketPrice] = useState(1);\n\n  const handleClick = () => {\n    functionToCall({\n      deadline: deadline,\n      ticketPrice: parseCurrency(ticketPrice)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ticket Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: ticketPrice,\n        onChange: e => setTicketPrice(e.target.value),\n        type: \"number\",\n        placeholder: \"Ticket price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Set Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetParams, \"USdfQ62TbmdGjyxzCqqncG67/mE=\");\n\n_c2 = GetParams;\n\nconst ShowOutcome = ({\n  address\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Winner address: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ShowOutcome;\nexport default NomineeViews;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NomineeViews\");\n$RefreshReg$(_c2, \"GetParams\");\n$RefreshReg$(_c3, \"ShowOutcome\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/components/participants/NomineeViews.js"],"names":["React","useState","parseCurrency","Container","Form","Button","NomineeViews","appState","args","getParamsReady","getParams","GetParams","functionToCall","deadline","setDeadline","ticketPrice","setTicketPrice","handleClick","e","target","value","ShowOutcome","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,cAAlB;AAAkCC,EAAAA;AAAlC,CAAD,KAAmD;AACpE,UAAQH,QAAR;AACI,SAAK,WAAL;AACI,aACIE,cAAc,gBACR,QAAC,SAAD;AAAW,QAAA,cAAc,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cADQ,gBAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHV;;AAKJ,SAAK,aAAL;AACI,0BAAQ,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEF,IAAI,CAAC,CAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAR;;AACJ;AACI,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAVR;AAYH,CAbD;;KAAMF,Y;;AAeN,MAAMK,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAEtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMgB,WAAW,GAAG,MAAM;AACtBL,IAAAA,cAAc,CAAC;AACXC,MAAAA,QAAQ,EAAEA,QADC;AAEXE,MAAAA,WAAW,EAAEb,aAAa,CAACa,WAAD;AAFf,KAAD,CAAd;AAIH,GALD;;AAOA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,8BAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,KAAK,EAAEA,WADX;AAEI,QAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAFnC;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA/BD;;GAAMN,S;;MAAAA,S;;AAiCN,MAAMU,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,kDAAoB;AAAA,kBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMD,W;AAQN,eAAef,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { parseCurrency } from \"@reach-sh/stdlib/ALGO\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst NomineeViews = ({ appState, args, getParamsReady, getParams }) => {\n    switch (appState) {\n        case \"getParams\":\n            return (\n                getParamsReady\n                    ? <GetParams functionToCall={getParams} />\n                    : <h1>Loading the getParams page</h1>\n            );\n        case \"showOutcome\":\n            return (<ShowOutcome address={args[0]} />);\n        default:\n            return (<h1>Waiting for contract</h1>);\n    }\n}\n\nconst GetParams = ({ functionToCall }) => {\n\n    const [deadline, setDeadline] = useState(500);\n    const [ticketPrice, setTicketPrice] = useState(1);\n\n    const handleClick = () => {\n        functionToCall({\n            deadline: deadline,\n            ticketPrice: parseCurrency(ticketPrice)\n        });\n    }\n\n    return (\n        <Container>\n            <Form.Group>\n                {/* <p>Deadline</p>\n                <Form.Control\n                    value={deadline}\n                    onChange={(e) => setDeadline(e.target.value)}\n                    type=\"number\"\n                    placeholder=\"Deadline in blocks\" /> */}\n                <p>Ticket Price</p>\n                <Form.Control\n                    value={ticketPrice}\n                    onChange={(e) => setTicketPrice(e.target.value)}\n                    type=\"number\"\n                    placeholder=\"Ticket price\" />\n            </Form.Group>\n            <Button onClick={handleClick}>Set Parameters</Button>\n        </Container>\n    );\n}\n\nconst ShowOutcome = ({ address }) => {\n    return (\n        <Container>\n            <h1>Winner address: <small>{address}</small></h1>\n        </Container>\n    );\n}\n\nexport default NomineeViews;"]},"metadata":{},"sourceType":"module"}