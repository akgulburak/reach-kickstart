{"ast":null,"code":"const {\n  JSONRequest\n} = require('../jsonrequest');\n\nclass StatusAfterBlock extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  } // eslint-disable-next-line no-underscore-dangle\n\n\n  _path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n\n}\n\nmodule.exports = {\n  StatusAfterBlock\n};","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/algosdk/src/client/v2/algod/statusAfterBlock.js"],"names":["JSONRequest","require","StatusAfterBlock","constructor","c","intDecoding","round","Number","isInteger","Error","_path","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,gBAAD,CAA/B;;AAEA,MAAMC,gBAAN,SAA+BF,WAA/B,CAA2C;AACzCG,EAAAA,WAAW,CAACC,CAAD,EAAIC,WAAJ,EAAiBC,KAAjB,EAAwB;AACjC,UAAMF,CAAN,EAASC,WAAT;AACA,QAAI,CAACE,MAAM,CAACC,SAAP,CAAiBF,KAAjB,CAAL,EAA8B,MAAMG,KAAK,CAAC,4BAAD,CAAX;AAC9B,SAAKH,KAAL,GAAaA,KAAb;AACD,GALwC,CAOzC;;;AACAI,EAAAA,KAAK,GAAG;AACN,WAAQ,mCAAkC,KAAKJ,KAAM,EAArD;AACD;;AAVwC;;AAa3CK,MAAM,CAACC,OAAP,GAAiB;AAAEV,EAAAA;AAAF,CAAjB","sourcesContent":["const { JSONRequest } = require('../jsonrequest');\n\nclass StatusAfterBlock extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}\n\nmodule.exports = { StatusAfterBlock };\n"]},"metadata":{},"sourceType":"script"}