{"ast":null,"code":"const outputFunctions = require('./output-functions');\n\nconst ValidationError = require('./errors/validation-error');\n\nfunction validateParameters(params) {\n  //  Coerce the protocol.\n  const protocol = params.protocol || undefined; //  The protocol can be nothing or http.\n\n  if (protocol && protocol !== 'http') throw new ValidationError('\\'protocol\\' can be nothing or http'); //  Validate and coerce the port.\n\n  const port = params.port;\n  if (!port) throw new ValidationError('\\'port\\' is required.');\n  if (!Number.isInteger(port)) throw new ValidationError('\\'port\\' must be a number.');\n  if (port < 1) throw new ValidationError('\\'port\\' must be greater than 0.');\n  if (port > 65535) throw new ValidationError('\\'port\\' must not be greater than 65535.'); //  Coerce the host.\n\n  const host = params.host || 'localhost'; //  Coerce the path.\n  //  If we have the http protocol, but no path, assume root.\n\n  const path = params.path || (protocol === 'http' ? '/' : undefined); //  Validate and coerce the interval.\n\n  const interval = params.interval || 1000;\n  if (!Number.isInteger(interval)) throw new ValidationError('\\'interval\\' must be a number.');\n  if (interval < 0) throw new ValidationError('\\'interval\\' must be greater or equal to 0.'); //  Validate and coerce the timeout.\n\n  const timeout = params.timeout || 0;\n  if (!Number.isInteger(timeout)) throw new ValidationError('\\'timeout\\' must be a number.');\n  if (timeout < 0) throw new ValidationError('\\'timeout\\' must be greater or equal to 0.'); //  Validate and coerce the wait-for-dns parameter.\n\n  const waitForDns = params.waitForDns || false;\n  if (typeof waitForDns !== 'boolean') throw new ValidationError('\\'wait-for-dns\\' must be a boolean.'); //  Coerce the output.\n\n  const output = params.output || 'dots'; //  The only valid output options are out named output functions.\n\n  if (!outputFunctions[output]) {\n    const validOutputFunctions = Object.keys(outputFunctions);\n    const set = validOutputFunctions.join(', ');\n    const errorMessage = `'output' must be in the set ${set}`;\n    throw new ValidationError(errorMessage);\n  }\n\n  return {\n    protocol,\n    port,\n    host,\n    path,\n    interval,\n    timeout,\n    output,\n    waitForDns\n  };\n}\n\nmodule.exports = validateParameters;","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/wait-port/lib/validate-parameters.js"],"names":["outputFunctions","require","ValidationError","validateParameters","params","protocol","undefined","port","Number","isInteger","host","path","interval","timeout","waitForDns","output","validOutputFunctions","Object","keys","set","join","errorMessage","module","exports"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AAEA,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC;AACA,QAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAP,IAAmBC,SAApC,CAFkC,CAIlC;;AACA,MAAID,QAAQ,IAAIA,QAAQ,KAAK,MAA7B,EAAqC,MAAM,IAAIH,eAAJ,CAAoB,qCAApB,CAAN,CALH,CAOlC;;AACA,QAAMK,IAAI,GAAGH,MAAM,CAACG,IAApB;AACA,MAAI,CAACA,IAAL,EAAW,MAAM,IAAIL,eAAJ,CAAoB,uBAApB,CAAN;AACX,MAAI,CAACM,MAAM,CAACC,SAAP,CAAiBF,IAAjB,CAAL,EAA6B,MAAM,IAAIL,eAAJ,CAAoB,4BAApB,CAAN;AAC7B,MAAIK,IAAI,GAAG,CAAX,EAAc,MAAM,IAAIL,eAAJ,CAAoB,kCAApB,CAAN;AACd,MAAIK,IAAI,GAAG,KAAX,EAAkB,MAAM,IAAIL,eAAJ,CAAoB,0CAApB,CAAN,CAZgB,CAclC;;AACA,QAAMQ,IAAI,GAAGN,MAAM,CAACM,IAAP,IAAe,WAA5B,CAfkC,CAiBlC;AACA;;AACA,QAAMC,IAAI,GAAGP,MAAM,CAACO,IAAP,KAAgBN,QAAQ,KAAK,MAAb,GAAsB,GAAtB,GAA4BC,SAA5C,CAAb,CAnBkC,CAqBlC;;AACA,QAAMM,QAAQ,GAAGR,MAAM,CAACQ,QAAP,IAAmB,IAApC;AACA,MAAI,CAACJ,MAAM,CAACC,SAAP,CAAiBG,QAAjB,CAAL,EAAiC,MAAM,IAAIV,eAAJ,CAAoB,gCAApB,CAAN;AACjC,MAAIU,QAAQ,GAAG,CAAf,EAAkB,MAAM,IAAIV,eAAJ,CAAoB,6CAApB,CAAN,CAxBgB,CA0BlC;;AACA,QAAMW,OAAO,GAAGT,MAAM,CAACS,OAAP,IAAkB,CAAlC;AACA,MAAI,CAACL,MAAM,CAACC,SAAP,CAAiBI,OAAjB,CAAL,EAAgC,MAAM,IAAIX,eAAJ,CAAoB,+BAApB,CAAN;AAChC,MAAIW,OAAO,GAAG,CAAd,EAAiB,MAAM,IAAIX,eAAJ,CAAoB,4CAApB,CAAN,CA7BiB,CA+BlC;;AACA,QAAMY,UAAU,GAAGV,MAAM,CAACU,UAAP,IAAqB,KAAxC;AACA,MAAI,OAAOA,UAAP,KAAsB,SAA1B,EAAqC,MAAM,IAAIZ,eAAJ,CAAoB,qCAApB,CAAN,CAjCH,CAmClC;;AACA,QAAMa,MAAM,GAAGX,MAAM,CAACW,MAAP,IAAiB,MAAhC,CApCkC,CAsClC;;AACA,MAAI,CAACf,eAAe,CAACe,MAAD,CAApB,EAA8B;AAC5B,UAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYlB,eAAZ,CAA7B;AACA,UAAMmB,GAAG,GAAGH,oBAAoB,CAACI,IAArB,CAA0B,IAA1B,CAAZ;AACA,UAAMC,YAAY,GAAI,+BAA8BF,GAAI,EAAxD;AACA,UAAM,IAAIjB,eAAJ,CAAoBmB,YAApB,CAAN;AACD;;AAED,SAAO;AACLhB,IAAAA,QADK;AAELE,IAAAA,IAFK;AAGLG,IAAAA,IAHK;AAILC,IAAAA,IAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,OANK;AAOLE,IAAAA,MAPK;AAQLD,IAAAA;AARK,GAAP;AAUD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBpB,kBAAjB","sourcesContent":["const outputFunctions = require('./output-functions');\nconst ValidationError = require('./errors/validation-error');\n\nfunction validateParameters(params) {\n  //  Coerce the protocol.\n  const protocol = params.protocol || undefined;\n\n  //  The protocol can be nothing or http.\n  if (protocol && protocol !== 'http') throw new ValidationError('\\'protocol\\' can be nothing or http');\n\n  //  Validate and coerce the port.\n  const port = params.port;\n  if (!port) throw new ValidationError('\\'port\\' is required.');\n  if (!Number.isInteger(port)) throw new ValidationError('\\'port\\' must be a number.');\n  if (port < 1) throw new ValidationError('\\'port\\' must be greater than 0.');\n  if (port > 65535) throw new ValidationError('\\'port\\' must not be greater than 65535.');\n\n  //  Coerce the host.\n  const host = params.host || 'localhost';\n\n  //  Coerce the path.\n  //  If we have the http protocol, but no path, assume root.\n  const path = params.path || (protocol === 'http' ? '/' : undefined);\n\n  //  Validate and coerce the interval.\n  const interval = params.interval || 1000;\n  if (!Number.isInteger(interval)) throw new ValidationError('\\'interval\\' must be a number.');\n  if (interval < 0) throw new ValidationError('\\'interval\\' must be greater or equal to 0.');\n\n  //  Validate and coerce the timeout.\n  const timeout = params.timeout || 0;\n  if (!Number.isInteger(timeout)) throw new ValidationError('\\'timeout\\' must be a number.');\n  if (timeout < 0) throw new ValidationError('\\'timeout\\' must be greater or equal to 0.');\n\n  //  Validate and coerce the wait-for-dns parameter.\n  const waitForDns = params.waitForDns || false;\n  if (typeof waitForDns !== 'boolean') throw new ValidationError('\\'wait-for-dns\\' must be a boolean.');\n\n  //  Coerce the output.\n  const output = params.output || 'dots';\n\n  //  The only valid output options are out named output functions.\n  if (!outputFunctions[output]) {\n    const validOutputFunctions = Object.keys(outputFunctions);\n    const set = validOutputFunctions.join(', ');\n    const errorMessage = `'output' must be in the set ${set}`;\n    throw new ValidationError(errorMessage);\n  }\n\n  return {\n    protocol,\n    port,\n    host,\n    path,\n    interval,\n    timeout,\n    output,\n    waitForDns,\n  };\n}\n\nmodule.exports = validateParameters;\n"]},"metadata":{},"sourceType":"script"}