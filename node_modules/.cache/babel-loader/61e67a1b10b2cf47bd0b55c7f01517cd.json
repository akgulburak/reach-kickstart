{"ast":null,"code":"const {\n  JSONRequest\n} = require('../jsonrequest');\n\nclass SearchForAssets extends JSONRequest {\n  // eslint-disable-next-line no-underscore-dangle,class-methods-use-this\n  _path() {\n    return '/v2/assets';\n  } // limit for filter, as int\n\n\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  } // asset creator address for filter, as string\n\n\n  creator(creator) {\n    this.query.creator = creator;\n    return this;\n  } // asset name for filter, as string\n\n\n  name(name) {\n    this.query.name = name;\n    return this;\n  } // asset unit name for filter, as string\n\n\n  unit(unit) {\n    this.query.unit = unit;\n    return this;\n  } // asset ID for filter, as int\n\n\n  index(index) {\n    this.query['asset-id'] = index;\n    return this;\n  } // used for pagination\n\n\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  } // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n\n\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n}\n\nmodule.exports = {\n  SearchForAssets\n};","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/algosdk/src/client/v2/indexer/searchForAssets.js"],"names":["JSONRequest","require","SearchForAssets","_path","limit","query","creator","name","unit","index","nextToken","next","includeAll","value","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,gBAAD,CAA/B;;AAEA,MAAMC,eAAN,SAA8BF,WAA9B,CAA0C;AACxC;AACAG,EAAAA,KAAK,GAAG;AACN,WAAO,YAAP;AACD,GAJuC,CAMxC;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKC,KAAL,CAAWD,KAAX,GAAmBA,KAAnB;AACA,WAAO,IAAP;AACD,GAVuC,CAYxC;;;AACAE,EAAAA,OAAO,CAACA,OAAD,EAAU;AACf,SAAKD,KAAL,CAAWC,OAAX,GAAqBA,OAArB;AACA,WAAO,IAAP;AACD,GAhBuC,CAkBxC;;;AACAC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACT,SAAKF,KAAL,CAAWE,IAAX,GAAkBA,IAAlB;AACA,WAAO,IAAP;AACD,GAtBuC,CAwBxC;;;AACAC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACT,SAAKH,KAAL,CAAWG,IAAX,GAAkBA,IAAlB;AACA,WAAO,IAAP;AACD,GA5BuC,CA8BxC;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKJ,KAAL,CAAW,UAAX,IAAyBI,KAAzB;AACA,WAAO,IAAP;AACD,GAlCuC,CAoCxC;;;AACAC,EAAAA,SAAS,CAACA,SAAD,EAAY;AACnB,SAAKL,KAAL,CAAWM,IAAX,GAAkBD,SAAlB;AACA,WAAO,IAAP;AACD,GAxCuC,CA0CxC;;;AACAE,EAAAA,UAAU,CAACC,KAAK,GAAG,IAAT,EAAe;AACvB,SAAKR,KAAL,CAAW,aAAX,IAA4BQ,KAA5B;AACA,WAAO,IAAP;AACD;;AA9CuC;;AAiD1CC,MAAM,CAACC,OAAP,GAAiB;AAAEb,EAAAA;AAAF,CAAjB","sourcesContent":["const { JSONRequest } = require('../jsonrequest');\n\nclass SearchForAssets extends JSONRequest {\n  // eslint-disable-next-line no-underscore-dangle,class-methods-use-this\n  _path() {\n    return '/v2/assets';\n  }\n\n  // limit for filter, as int\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // asset creator address for filter, as string\n  creator(creator) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  // asset name for filter, as string\n  name(name) {\n    this.query.name = name;\n    return this;\n  }\n\n  // asset unit name for filter, as string\n  unit(unit) {\n    this.query.unit = unit;\n    return this;\n  }\n\n  // asset ID for filter, as int\n  index(index) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n\n  // used for pagination\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n\nmodule.exports = { SearchForAssets };\n"]},"metadata":{},"sourceType":"script"}