{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const v23 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 22));\n  const txn2 = await ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc0], [v19, v21, v23], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v26] = txn2.data;\n    const v28 = txn2.time;\n    const v25 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v54 = [v26, v26];\n    const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v57 = [v55, v55];\n    const v51 = v54;\n    const v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v53 = v57;\n    const v526 = v28;\n    const v527 = v21;\n    const v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      return v60;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n      const v339 = v341;\n      const v529 = v526;\n      const v530 = v527;\n      const v531 = v528;\n\n      if ((() => {\n        const v346 = stdlib.gt(v326, v530);\n        return v346;\n      })()) {\n        const v376 = stdlib.sub(v326, v530);\n        sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        const v398 = v339.reduce((v390, v391) => {\n          const v394 = stdlib.gt(v391, v390);\n          const v396 = v394 ? v391 : v390;\n          return v396;\n        }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n        const v407 = ['None', null];\n        const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n        const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n        const v456 = stdlib.eq(v433, v398);\n        const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n        const v464 = v456 ? v461 : v463;\n        const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n        const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n        let v471;\n\n        switch (v469[0]) {\n          case 'None':\n            {\n              const v474 = stdlib.eq(v434, v398);\n              const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n              const v479 = ['Some', v470];\n              const v480 = [v479, v470];\n              const v481 = [v469, v478];\n              const v482 = v474 ? v480 : v481;\n              v471 = v482;\n              break;\n            }\n\n          case 'Some':\n            {\n              const v485 = v469[1];\n              v471 = v464;\n              break;\n            }\n        }\n\n        const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n        let v496;\n\n        switch (v490[0]) {\n          case 'None':\n            {\n              v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n              break;\n            }\n\n          case 'Some':\n            {\n              const v500 = v490[1];\n              v496 = v500;\n              break;\n            }\n        }\n\n        const v506 = v53[v496];\n        const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v531,\n          kind: 'from',\n          to: v507,\n          tok: undefined\n        });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v60;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      return v311;\n    }, false);\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    continue;\n  }\n\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n\n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    return v346;\n  })()) {\n    const v376 = stdlib.sub(v326, v530);\n    const txn3 = await ctc.recv(8, 1, [ctc1], false, v376);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n\n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n\n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            return v346;\n          })()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              return v396;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n\n            switch (v469[0]) {\n              case 'None':\n                {\n                  const v474 = stdlib.eq(v434, v398);\n                  const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v479 = ['Some', v470];\n                  const v480 = [v479, v470];\n                  const v481 = [v469, v478];\n                  const v482 = v474 ? v480 : v481;\n                  v471 = v482;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v485 = v469[1];\n                  v471 = v464;\n                  break;\n                }\n            }\n\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n\n            switch (v490[0]) {\n              case 'None':\n                {\n                  v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v500 = v490[1];\n                  v496 = v500;\n                  break;\n                }\n            }\n\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    } else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    }\n  }\n\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    return v396;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n\n  switch (v469[0]) {\n    case 'None':\n      {\n        const v474 = stdlib.eq(v434, v398);\n        const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v479 = ['Some', v470];\n        const v480 = [v479, v470];\n        const v481 = [v469, v478];\n        const v482 = v474 ? v480 : v481;\n        v471 = v482;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v485 = v469[1];\n        v471 = v464;\n        break;\n      }\n  }\n\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n\n  switch (v490[0]) {\n    case 'None':\n      {\n        v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v500 = v490[1];\n        v496 = v500;\n        break;\n      }\n  }\n\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v518 = v506[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  const txn3 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v25, v529, v518], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, async txn3 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v25, v529]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v25]);\n    const [v520] = txn3.data;\n    const v523 = txn3.time;\n    const v519 = txn3.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v522 = stdlib.addressEq(v25, v519);\n    stdlib.assert(v522, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc10, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0), [ctc1], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    return sim_r;\n  });\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v60;\n  })()) {\n    const v173 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 172));\n    const v176 = stdlib.protect(ctc1, await interact.getParams(v173), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v184 = ['None', null];\n    const v210 = v51[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v211 = v51[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v233 = stdlib.addressEq(v210, v173);\n    const v237 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v238 = [v237, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v240 = [v184, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v241 = v233 ? v238 : v240;\n    const v246 = v241[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v247 = v241[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v248;\n\n    switch (v246[0]) {\n      case 'None':\n        {\n          const v251 = stdlib.addressEq(v211, v173);\n          const v255 = stdlib.add(v247, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v256 = ['Some', v247];\n          const v257 = [v256, v247];\n          const v258 = [v246, v255];\n          const v259 = v251 ? v257 : v258;\n          v248 = v259;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v262 = v246[1];\n          v248 = v241;\n          break;\n        }\n    }\n\n    const v267 = v248[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v273;\n\n    switch (v267[0]) {\n      case 'None':\n        {\n          v273 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v277 = v267[1];\n          v273 = v277;\n          break;\n        }\n    }\n\n    const v283 = [v176, v173];\n    const txn3 = await ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v25, v51, v52, v53, v526, v528, v283], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n      const [v287] = txn3.data;\n      const v291 = txn3.time;\n      const v286 = txn3.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v295 = [v293, v52, v294];\n      const v297 = stdlib.Array_set(v53, v52, v295);\n      const v300 = stdlib.Array_set(v51, v52, v293);\n      const v313 = v51.reduce((v306, v307) => {\n        const v309 = stdlib.addressEq(v293, v307);\n        const v310 = v309 ? true : false;\n        const v311 = v306 ? v306 : v310;\n        return v311;\n      }, false);\n      const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v317 = [v53, v51, v52];\n      const v318 = [v297, v300, v316];\n      const v319 = v313 ? v317 : v318;\n      const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv51 = v322;\n      const cv52 = v323;\n      const cv53 = v321;\n      const cv526 = v291;\n      const cv527 = v526;\n      const cv528 = v528;\n\n      (() => {\n        const v51 = cv51;\n        const v52 = cv52;\n        const v53 = cv53;\n        const v526 = cv526;\n        const v527 = cv527;\n        const v528 = cv528;\n\n        if ((() => {\n          const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          return v60;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n          const v339 = v341;\n          const v529 = v526;\n          const v530 = v527;\n          const v531 = v528;\n\n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            return v346;\n          })()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              return v396;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n\n            switch (v469[0]) {\n              case 'None':\n                {\n                  const v474 = stdlib.eq(v434, v398);\n                  const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v479 = ['Some', v470];\n                  const v480 = [v479, v470];\n                  const v481 = [v469, v478];\n                  const v482 = v474 ? v480 : v481;\n                  v471 = v482;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v485 = v469[1];\n                  v471 = v464;\n                  break;\n                }\n            }\n\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n\n            switch (v490[0]) {\n              case 'None':\n                {\n                  v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v500 = v490[1];\n                  v496 = v500;\n                  break;\n                }\n            }\n\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      return v311;\n    }, false);\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    continue;\n  }\n\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n\n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    return v346;\n  })()) {\n    const v376 = stdlib.sub(v326, v530);\n    const txn3 = await ctc.recv(8, 1, [ctc1], false, v376);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n\n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n\n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            return v346;\n          })()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              return v396;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n\n            switch (v469[0]) {\n              case 'None':\n                {\n                  const v474 = stdlib.eq(v434, v398);\n                  const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v479 = ['Some', v470];\n                  const v480 = [v479, v470];\n                  const v481 = [v469, v478];\n                  const v482 = v474 ? v480 : v481;\n                  v471 = v482;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v485 = v469[1];\n                  v471 = v464;\n                  break;\n                }\n            }\n\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n\n            switch (v490[0]) {\n              case 'None':\n                {\n                  v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v500 = v490[1];\n                  v496 = v500;\n                  break;\n                }\n            }\n\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    } else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    }\n  }\n\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    return v396;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n\n  switch (v469[0]) {\n    case 'None':\n      {\n        const v474 = stdlib.eq(v434, v398);\n        const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v479 = ['Some', v470];\n        const v480 = [v479, v470];\n        const v481 = [v469, v478];\n        const v482 = v474 ? v480 : v481;\n        v471 = v482;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v485 = v469[1];\n        v471 = v464;\n        break;\n      }\n  }\n\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n\n  switch (v490[0]) {\n    case 'None':\n      {\n        v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v500 = v490[1];\n        v496 = v500;\n        break;\n      }\n  }\n\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 0, [], false, false);\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await ctc.recv(2, 1, [ctc0], false, false);\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    return v60;\n  })()) {\n    const txn3 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      return v311;\n    }, false);\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    continue;\n  }\n\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n\n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    return v346;\n  })()) {\n    const v376 = stdlib.sub(v326, v530);\n    const v359 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v360 = v359[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    const txn3 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531, v360], [v360, []], [ctc1], true, false, v376, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      sim_r.txns.push({\n        amt: v365,\n        kind: 'to',\n        tok: undefined\n      });\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n\n      (() => {\n        const v339 = cv339;\n        const v529 = cv529;\n        const v530 = cv530;\n        const v531 = cv531;\n\n        if ((() => {\n          const v346 = stdlib.gt(v326, v530);\n          return v346;\n        })()) {\n          const v376 = stdlib.sub(v326, v530);\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v398 = v339.reduce((v390, v391) => {\n            const v394 = stdlib.gt(v391, v390);\n            const v396 = v394 ? v391 : v390;\n            return v396;\n          }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n          const v407 = ['None', null];\n          const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n          const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n          const v456 = stdlib.eq(v433, v398);\n          const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n          const v464 = v456 ? v461 : v463;\n          const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n          const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n          let v471;\n\n          switch (v469[0]) {\n            case 'None':\n              {\n                const v474 = stdlib.eq(v434, v398);\n                const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v479 = ['Some', v470];\n                const v480 = [v479, v470];\n                const v481 = [v469, v478];\n                const v482 = v474 ? v480 : v481;\n                v471 = v482;\n                break;\n              }\n\n            case 'Some':\n              {\n                const v485 = v469[1];\n                v471 = v464;\n                break;\n              }\n          }\n\n          const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n          let v496;\n\n          switch (v490[0]) {\n            case 'None':\n              {\n                v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                break;\n              }\n\n            case 'Some':\n              {\n                const v500 = v490[1];\n                v496 = v500;\n                break;\n              }\n          }\n\n          const v506 = v53[v496];\n          const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v531,\n            kind: 'from',\n            to: v507,\n            tok: undefined\n          });\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n\n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n\n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            return v346;\n          })()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              return v396;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n\n            switch (v469[0]) {\n              case 'None':\n                {\n                  const v474 = stdlib.eq(v434, v398);\n                  const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v479 = ['Some', v470];\n                  const v480 = [v479, v470];\n                  const v481 = [v469, v478];\n                  const v482 = v474 ? v480 : v481;\n                  v471 = v482;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v485 = v469[1];\n                  v471 = v464;\n                  break;\n                }\n            }\n\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n\n            switch (v490[0]) {\n              case 'None':\n                {\n                  v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v500 = v490[1];\n                  v496 = v500;\n                  break;\n                }\n            }\n\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    } else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      continue;\n    }\n  }\n\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    return v396;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n\n  switch (v469[0]) {\n    case 'None':\n      {\n        const v474 = stdlib.eq(v434, v398);\n        const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v479 = ['Some', v470];\n        const v480 = [v479, v470];\n        const v481 = [v469, v478];\n        const v482 = v474 ? v480 : v481;\n        v471 = v482;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v485 = v469[1];\n        v471 = v464;\n        break;\n      }\n  }\n\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n\n  switch (v490[0]) {\n    case 'None':\n      {\n        v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v500 = v490[1];\n        v496 = v500;\n        break;\n      }\n  }\n\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n  }, {\n    count: 8,\n    size: 153\n  }, null, null, null, null, {\n    count: 8,\n    size: 129\n  }, {\n    count: 13,\n    size: 265\n  }, {\n    count: 12,\n    size: 257\n  }, {\n    count: 12,\n    size: 337\n  }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:21:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 251\nint 0\nitob\nint 0\nitob\nconcat\nstore 250\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 250\nsubstring 0 8\nbtoi\nstore 249\nload 250\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl3:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl4:\nl2:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 241\nl6:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl7:\nl5:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 250\nload 249\n+\nstore 248\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 249\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 247\nitob\nconcat\nload 248\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 247\nload 252\nsubstring 8 16\nbtoi\nstore 246\nint 0\nload 247\nload 247\nint 0\n>\nselect\ndup\nstore 245\nload 246\nload 246\nload 245\n>\nselect\nstore 244\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 247\nload 244\n==\nselect\ndup\nstore 243\nsubstring 0 9\nstore 242\nload 243\nsubstring 9 17\nbtoi\nstore 241\nload 242\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 242\nload 241\nint 1\n+\nitob\nconcat\nint 1\nload 241\nconcat\nbyte base64()\nconcat\nload 241\nitob\nconcat\nload 246\nload 244\n==\nselect\nstore 240\nl2:\nload 242\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 242\nsubstring 1 9\nbtoi\nstore 239\nload 243\nstore 240\nl3:\nl1:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 239\nl5:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 240\nsubstring 1 10\nbtoi\ndup\nstore 238\nstore 239\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 239\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 248\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 249\nload 252\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 250\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 244\nint 0\nitob\nint 0\nitob\nconcat\nstore 243\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 242\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nconcat\nload 242\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 243\nsubstring 0 8\nbtoi\nstore 242\nload 243\nsubstring 8 16\nbtoi\nstore 241\nint 0\nload 242\nload 242\nint 0\n>\nselect\ndup\nstore 240\nload 241\nload 241\nload 240\n>\nselect\nstore 239\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 242\nload 239\n==\nselect\ndup\nstore 238\nsubstring 0 9\nstore 237\nload 238\nsubstring 9 17\nbtoi\nstore 236\nload 237\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 236\nint 1\n+\nitob\nconcat\nint 1\nload 236\nconcat\nbyte base64()\nconcat\nload 236\nitob\nconcat\nload 241\nload 239\n==\nselect\nstore 235\nl3:\nload 237\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 237\nsubstring 1 9\nbtoi\nstore 234\nload 238\nstore 235\nl4:\nl2:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 234\nl6:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 235\nsubstring 1 10\nbtoi\ndup\nstore 233\nstore 234\nl7:\nl5:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nint 48\nload 234\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v51\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v52\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v528\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v287\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v365\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v51\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v52\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v528\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v287\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v365\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611b42806100826000396000f3fe6080604052600436106100595760003560e01c8063193afc731461006557806347931b2b1461007a5780635754bb121461008d5780638f7a1344146100a0578063a496364f146100b3578063ad5542c4146100c657610060565b3661006057005b600080fd5b61007861007336600461161f565b6100d9565b005b610078610088366004611603565b6101a4565b61007861009b366004611603565b61031f565b6100786100ae366004611603565b6104aa565b6100786100c13660046115e8565b610824565b6100786100d43660046115e8565b6108cc565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b7fc32df0ce290a4082d696e286eb47ee901bff58c6d9bf2b65b404efaab9a729c78160405161015491906118fd565b60405180910390a1604080518082018252338152436020808301919091529151909161018591600191849101611a85565b60408051601f1981840301815291905280516020909101206000555050565b6040516101b89060059083906020016119cb565b6040516020818303038152906040528051906020012060001c600054146101de57600080fd5b600080556101f6610140820135610160830135611aac565b43101561020257600080fd5b341561020d57600080fd5b7fd77bd1be4ecd0807633fb030d52c4b728e2bc3c01c09685da8aea29f7e6191ea8160405161023c919061188e565b60405180910390a161024c61118e565b61025960208301836115c7565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156102a85761029960608302850136819003810190611630565b8152602001906001019061027c565b50508351602001929092525050805160e0830135604091820152805180820182529061010084019060029083908390808284376000920191909152505050602080830180519290925281514391015280516101608401356040909101525161018083013560609091015261031b81610a3c565b5050565b6040516103339060059083906020016119cb565b6040516020818303038152906040528051906020012060001c6000541461035957600080fd5b60008055610371610140820135610160830135611aac565b431061037c57600080fd5b346101a08201351461038d57600080fd5b7fda80f58ba2478e3dba7530b2892195da521482b5cc679ec67cd2417c135760be816040516103bc9190611870565b60405180910390a16103cc61118e565b6103d960208301836115c7565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156104285761041960608302850136819003810190611630565b815260200190600101906103fc565b50508351602001929092525050805160e08301356040918201528051808201825290610100840190600290839083908082843760009201919091525050506020808301805192909252815143910152516101608301356040909101526104986101a0830135610180840135611aac565b60208201516060015261031b81610a3c565b6040516104be906003908390602001611927565b6040516020818303038152906040528051906020012060001c600054146104e457600080fd5b600080556104f06111b3565b34156104fb57600080fd5b61050d6101c083016101a084016115c7565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156105f25760208301816002811061056c57634e487b7160e01b600052603260045260246000fd5b60200201602081019061057f91906115c7565b6001600160a01b0316604083015260208201516105d35760408201516001600160a01b03166105b66101c085016101a086016115c7565b6001600160a01b0316146105cb5760006105ce565b60015b6105d9565b81602001515b15156020830152806105ea81611adb565b915050610540565b50602081015115156060820152604080518082019091526080830160026000835b8282101561063f5761063060608302850136819003810190611630565b81526020019060010190610613565b505050506080820151526040805180820182529060208401906002908390839080828437600092018290525060808086018051602001959095529351606087013560409182015280518082019091526106dc9490935086019150600290835b828210156106ca576106bb60608302850136819003810190611630565b8152602001906001019061069e565b50508451606087013592509050610b60565b60a0820151526040805180820182526107269160208501906002908390839080828437600092019190915250505060608401356107216101c086016101a087016115c7565b610bfe565b60a08201516020015261073e60016060840135611aac565b60a082015160400152606081015161075a578060a00151610760565b80608001515b60c08201526040517f385f8646716a83170a0dce3b1830eb8bcac8f924070fb3930970bb2b37c5d0f0906107959084906118c1565b60405180910390a16107a5611202565b6107b260208401846115c7565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261081f81610cb8565b505050565b604051610838906006908390602001611a71565b6040516020818303038152906040528051906020012060001c6000541461085e57600080fd5b60008055341561086d57600080fd5b3361087b60208301836115c7565b6001600160a01b03161461088e57600080fd5b7f38f10beaf24daa7993ba7875418dd447d7b55c9eea359e9c56d6c87fbd66de1c816040516108bd9190611854565b60405180910390a16000805533ff5b6040516108e0906001908390602001611a71565b6040516020818303038152906040528051906020012060001c6000541461090657600080fd5b60008055610912611223565b341561091d57600080fd5b61092d60608301604084016115c7565b81516001600160a01b0391909116905261094d60608301604084016115c7565b81516001600160a01b039190911660209182015261096d908301836115c7565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f8d95bc010eb8fd21ab686d3989fca5a9fd1d3e71af61373db9c3fb4e8c62c509906109dd908490611826565b60405180910390a16109ed611202565b80513390528151602080830180519290925281516000908201819052604080860151845190910152825143606090910152825191860135608090920191909152905160a0015261081f81610cb8565b6040805160208101909152600081528160200151604001518260000151604001511115610b0957816020015160400151826000015160400151610a7f9190611ac4565b8152610a89611250565b8251516001600160a01b0316815282516020908101518183015283516040908101518184015281850180515160608086019190915285516080860152815184015160a08601529051015160c084015251610ae8916005918491016119e0565b60408051601f1981840301815291905280516020909101206000555061031b565b610b116112a2565b82515181516001600160a01b0390911690528251602090810151825182015280840180515183516040015280519091015182516060908101919091529051015181516080015261081f81610db5565b610b686112c2565b60005b6002811015610bd057848160028110610b9457634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610bb957634e487b7160e01b600052603260045260246000fd5b602002015280610bc881611adb565b915050610b6b565b5081818460028110610bf257634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610c066112ef565b60005b6002811015610c7c57848160028110610c3257634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610c5757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610c7481611adb565b915050610c09565b5081818460028110610c9e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b600181602001516020015111610d4c57610cd061130d565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a0908101519084015251610d2b9160039184910161193c565b60408051601f19818403018152919052805160209091012060005550610db2565b610d54611358565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a0015182519091015261031b816110f4565b50565b610dbd61136b565b60008082525b6002811015610e29578251604001518160028110610df157634e487b7160e01b600052603260045260246000fd5b60209081029190910151908301819052825110610e0f578151610e15565b81602001515b825280610e2181611adb565b915050610dc3565b5080516040808301918252606083018051600090819052815160016020918201819052608087018051829052805186018490525160a0880180519190915251820192909252915160c08601805191909152519091015290518351909101515114610e97578060c00151610e9d565b8060a001515b60e0820181905251516000906001811115610ec857634e487b7160e01b600052602160045260246000fd5b1415610f5c576101208101805160019081905260e0830180516020908101518451604001529251610140850180519190915281518401519051840152805151610160850151525190910151610f1d9190611aac565b610160820151602001526040808201518351909101516001602002015114610f4a57806101600151610f51565b8061014001515b610100820152610fa2565b600160e082015151516001811115610f8457634e487b7160e01b600052602160045260246000fd5b1415610fa25760e08101518051604001516101808301526101008201525b600061010082015151516001811115610fcb57634e487b7160e01b600052602160045260246000fd5b1415610fde5760006101a0820152611027565b60016101008201515151600181111561100757634e487b7160e01b600052602160045260246000fd5b14156110275761010081015151604001516101c082018190526101a08201525b8151602001516101a08201516002811061105157634e487b7160e01b600052603260045260246000fd5b6020020151518251608001516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611093573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528551516001600160a01b03168352855160600151909152915190916110d491600691849101611a85565b60408051601f198184030181529190528051602090910120600055505050565b6110fc61143f565b805160009081905281516020015261111261118e565b82515181516001600160a01b03909116905282516020908101518251909101528251606001516111459061232890611aac565b8151604090810191909152825160208084018051929092528551830151825190910152845160609081015182519093019290925284516080015190519091015261081f81610a3c565b60405180604001604052806111a1611452565b81526020016111ae611482565b905290565b6040518060e001604052806111c6611495565b81526000602082018190526040820181905260608201526080016111e86114bf565b81526020016111f56114bf565b81526020016111ae6114bf565b604080516060810182526000918101918252908152602081016111ae6114df565b60405180606001604052806112366112ef565b8152602001611243611495565b81526020016111ae6112c2565b6040518060e0016040528060006001600160a01b031681526020016112736112c2565b8152602001600081526020016112876112ef565b81526020016000815260200160008152602001600081525090565b60405180604001604052806112b5611506565b8152600060209091015290565b60405180604001604052806002905b6112d9611495565b8152602001906001900390816112d15790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b031681526020016113306112ef565b8152602001600081526020016113446112c2565b815260200160008152602001600081525090565b60405180604001604052806112b5611536565b604051806101e001604052806000815260200160008152602001600081526020016113b16040805160608101909152806000815260006020820181905260409091015290565b815260408051606081018252600080825260208281018290529282015291019081526020016113de611559565b81526020016113eb611559565b81526020016113f8611559565b8152602001611405611559565b81526040805160608101825260008082526020828101829052928201529101908152602001611432611559565b8152602001611287611559565b60405180602001604052806111ae6112ef565b604051806060016040528060006001600160a01b031681526020016114756112c2565b8152602001600081525090565b60405180608001604052806112876112ef565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b60405180606001604052806114d26112c2565b81526020016114756112ef565b6040518060c001604052806114f26112ef565b8152602001600081526020016112876112c2565b6040518060a0016040528060006001600160a01b031681526020016115296112c2565b81526020016113446112ef565b6040518060a0016040528060006001600160a01b031681526020016112876112c2565b6040805160a0810182526000918101828152606082018390526080820192909252908190611475565b80356001600160a01b038116811461159957600080fd5b919050565b6000606082840312156115af578081fd5b50919050565b60006101c082840312156115af578081fd5b6000602082840312156115d8578081fd5b6115e182611582565b9392505050565b6000606082840312156115f9578081fd5b6115e1838361159e565b60006101c08284031215611615578081fd5b6115e183836115b5565b6000604082840312156115af578081fd5b600060608284031215611641578081fd5b6040516060810181811067ffffffffffffffff8211171561167057634e487b7160e01b83526041600452602483fd5b60405261167c83611582565b815260208301356020820152604083013560408201528091505092915050565b8060005b60028110156116e3576001600160a01b036116ba83611582565b1684526020828101359085015260408083013590850152606093840193909101906001016116a0565b50505050565b8060005b60028110156116e357815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016116ed565b6001600160a01b038061174083611582565b168352602080840181840160005b6002811015611774578461176183611582565b168352918301919083019060010161174e565b505050505060608101356060830152611793608083016080830161169c565b610140818101359083015261016090810135910152565b6001600160a01b036117bb82611582565b1682526117ce602083016020830161169c565b60e081013560e0830152610100604081830182850137506101408181013590830152610160808201359083015261018090810135910152565b6001600160a01b0361181882611582565b168252602090810135910152565b606081016118348284611807565b6001600160a01b0361184860408501611582565b16604083015292915050565b606081016118628284611807565b604092830135919092015290565b6101c0810161187f82846117aa565b6101a092830135919092015290565b6101c0810161189d82846117aa565b6101a0808401358015158082146118b357600080fd5b808386015250505092915050565b6101c081016118d0828461172e565b61018083810135908301526101a06001600160a01b036118f1828601611582565b16818401525092915050565b8135815260408101602083013580151580821461191957600080fd5b806020850152505092915050565b8281526101a081016115e1602083018461172e565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b600281101561198d5782516001600160a01b0316825260208201928401929150600101611965565b505050506040830151608083015260608301516119ad60a08401826116e9565b50608083015161016083015260a08301516101808301529392505050565b8281526101c081016115e160208301846117aa565b82815281516001600160a01b0316602080830191909152828101516101c083019190611a0f60408501826116e9565b5060408401516101008401526060840151610120840160005b6002811015611a4557825182529183019190830190600101611a28565b50505050608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b828152606081016115e16020830184611807565b828152606081016115e1602083018480516001600160a01b03168252602090810151910152565b60008219821115611abf57611abf611af6565b500190565b600082821015611ad657611ad6611af6565b500390565b6000600019821415611aef57611aef611af6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204a6c29da24fd926d77cd056dd2ff69f507fc0e0da3f1a34847c1db23b00b0f1864736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Tuple","ctc3","ctc4","ctc5","T_Array","checkedBigNumberify","UInt_max","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","v18","creationTime","txn1","recv","data","v21","time","v19","from","v23","selfAddress","txn2","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v26","v28","v25","push","amt","kind","tok","undefined","v54","v55","v57","v51","v52","v53","v526","v527","v528","v60","le","nextSt","nextSt_noTime","view","isHalt","v326","add","v341","v339","v529","v530","v531","v346","gt","v376","sub","v398","reduce","v390","v391","v394","v396","v407","v433","v434","v456","eq","v460","v461","v463","v464","v469","v470","v471","v474","v478","v479","v480","v481","v482","v485","v490","v496","v500","v506","v507","to","txn3","v287","v291","v286","v293","v294","v295","v297","Array_set","v300","v313","v306","v307","v309","addressEq","v310","v311","v316","v317","v318","v319","v321","v322","v323","cv51","cv52","cv53","cv526","cv527","cv528","didTimeout","txn4","v381","v379","cv339","cv529","cv530","cv531","v365","v370","v364","v369","v518","v520","v523","v519","v522","assert","at","fs","msg","who","Nominee","v173","v176","protect","getParams","v184","v210","v211","v233","v237","v238","v240","v241","v246","v247","v248","v251","v255","v256","v257","v258","v259","v262","v267","v273","v277","v283","Voter","v359","shouldBuyTicket","v360","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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ACA,QAAM,CAACgJ,IAAD,IAAS3C,IAAI,CAAC/E,IAApB;AACA,QAAM2H,IAAI,GAAG5C,IAAI,CAAC7E,IAAlB;AACA,QAAM0H,IAAI,GAAG7C,IAAI,CAAC3E,IAAlB;AACA;AACA,QAAMyH,IAAI,GAAG7J,MAAM,CAAC6H,SAAP,CAAiB7E,GAAjB,EAAsB4G,IAAtB,CAAb;AACA5J,EAAAA,MAAM,CAAC8J,MAAP,CAAcD,IAAd,EAAoB;AAClBE,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AAIC;MA7ZmB4B,K;AA6ZnB;AAEH,MAAMI,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1Fc;AA2FZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzJc;AA0JZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzKc;AA0KZ/L,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/Mc;AAgNZgM,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHK,EAML,IANK,EAMC,IAND,EAMO,IANP,EAMa,IANb,EAMmB;AAC3BD,IAAAA,KAAK,EAAE,CADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GANnB,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,CAhNE;AAmOZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjhHS,EAgzdS,EAydN,IAzdM,EAydA,IAzdA,EAydM,IAzdN,EAydY,IAzdZ,EAydmlBS,EA+lv+BS,EAut2CS,EAszDS,CAnOK;AA8hEZC,EAAAA,WAAW,EAAE;AA9hED,CAAd;AAgiEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EArwBa;AAswBXC,EAAAA,QAAQ,EAAG,44bAtwBA;AAuwBXC,EAAAA,UAAU,EAAG,gBAvwBF;AAwwBX1M,EAAAA,KAAK,EAAE;AAxwBI,CAAb;AA4wBA,OAAO,MAAM2M,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc10 = stdlib.T_Tuple([]);\n  const ctc11 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc11, ctc1, ctc5, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const v23 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 22));\n  \n  \n  const txn2 = await (ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc0], [v19, v21, v23], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 1), v19]);\n    const [v26] = txn2.data;\n    const v28 = txn2.time;\n    const v25 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v54 = [v26, v26];\n    const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n    const v57 = [v55, v55];\n    const v51 = v54;\n    const v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n    const v53 = v57;\n    const v526 = v28;\n    const v527 = v21;\n    const v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n      \n      return v60;})()) {\n      sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n      const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n      const v339 = v341;\n      const v529 = v526;\n      const v530 = v527;\n      const v531 = v528;\n      \n      if ((() => {\n        const v346 = stdlib.gt(v326, v530);\n        \n        return v346;})()) {\n        const v376 = stdlib.sub(v326, v530);\n        sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        const v398 = v339.reduce((v390, v391) => {\n          const v394 = stdlib.gt(v391, v390);\n          const v396 = v394 ? v391 : v390;\n          \n          return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n        const v407 = ['None', null];\n        const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n        const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n        const v456 = stdlib.eq(v433, v398);\n        const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n        const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n        const v464 = v456 ? v461 : v463;\n        const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n        const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n        let v471;\n        switch (v469[0]) {\n          case 'None': {\n            \n            const v474 = stdlib.eq(v434, v398);\n            const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n            const v479 = ['Some', v470];\n            const v480 = [v479, v470];\n            const v481 = [v469, v478];\n            const v482 = v474 ? v480 : v481;\n            v471 = v482;\n            \n            break;\n            }\n          case 'Some': {\n            const v485 = v469[1];\n            v471 = v464;\n            \n            break;\n            }\n          }\n        const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n        let v496;\n        switch (v490[0]) {\n          case 'None': {\n            \n            v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n            \n            break;\n            }\n          case 'Some': {\n            const v500 = v490[1];\n            v496 = v500;\n            \n            break;\n            }\n          }\n        const v506 = v53[v496];\n        const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n        sim_r.txns.push({\n          amt: v531,\n          kind: 'from',\n          to: v507,\n          tok: undefined\n          });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n        sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v60;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      \n      return v311;}, false)\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    \n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    \n    continue;\n    }\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n  \n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    \n    return v346;})()) {\n    const v376 = stdlib.sub(v326, v530);\n    const txn3 = await (ctc.recv(8, 1, [ctc1], false, v376));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc5, ctc1, ctc6, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n        \n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n          \n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            \n            return v346;})()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              \n              return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n            switch (v469[0]) {\n              case 'None': {\n                \n                const v474 = stdlib.eq(v434, v398);\n                const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v479 = ['Some', v470];\n                const v480 = [v479, v470];\n                const v481 = [v469, v478];\n                const v482 = v474 ? v480 : v481;\n                v471 = v482;\n                \n                break;\n                }\n              case 'Some': {\n                const v485 = v469[1];\n                v471 = v464;\n                \n                break;\n                }\n              }\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n            switch (v490[0]) {\n              case 'None': {\n                \n                v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v500 = v490[1];\n                v496 = v500;\n                \n                break;\n                }\n              }\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;\n      }\n    else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;}\n    }\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    \n    return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n  switch (v469[0]) {\n    case 'None': {\n      \n      const v474 = stdlib.eq(v434, v398);\n      const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v479 = ['Some', v470];\n      const v480 = [v479, v470];\n      const v481 = [v469, v478];\n      const v482 = v474 ? v480 : v481;\n      v471 = v482;\n      \n      break;\n      }\n    case 'Some': {\n      const v485 = v469[1];\n      v471 = v464;\n      \n      break;\n      }\n    }\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n  switch (v490[0]) {\n    case 'None': {\n      \n      v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v500 = v490[1];\n      v496 = v500;\n      \n      break;\n      }\n    }\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v518 = v506[stdlib.checkedBigNumberify('./index.rsh:144:55:array ref', stdlib.UInt_max, 2)];\n  \n  \n  const txn3 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v25, v529, v518], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, (async (txn3) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v25, v529]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:148:19:dot', stdlib.UInt_max, 6), v25]);\n    const [v520] = txn3.data;\n    const v523 = txn3.time;\n    const v519 = txn3.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v522 = stdlib.addressEq(v25, v519);\n    stdlib.assert(v522, {\n      at: './index.rsh:148:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc10, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc10, []);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:150:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc1]);\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc9, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 0, stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0), [ctc1], [v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:28:21:dot', stdlib.UInt_max, 0)]);\n    const [] = txn1.data;\n    const v21 = txn1.time;\n    const v19 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19, v21]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 1), v19]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:33:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v60;})()) {\n    const v173 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:42:27:application', stdlib.UInt_max, 172));\n    const v176 = stdlib.protect(ctc1, await interact.getParams(v173), {\n      at: './index.rsh:47:64:application',\n      fs: ['at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:46:21:function exp)', 'at ./index.rsh:42:27:application call to [unknown function] (defined at: ./index.rsh:42:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v184 = ['None', null];\n    const v210 = v51[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v211 = v51[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v233 = stdlib.addressEq(v210, v173);\n    const v237 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v238 = [v237, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v240 = [v184, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v241 = v233 ? v238 : v240;\n    const v246 = v241[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v247 = v241[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v248;\n    switch (v246[0]) {\n      case 'None': {\n        \n        const v251 = stdlib.addressEq(v211, v173);\n        const v255 = stdlib.add(v247, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v256 = ['Some', v247];\n        const v257 = [v256, v247];\n        const v258 = [v246, v255];\n        const v259 = v251 ? v257 : v258;\n        v248 = v259;\n        \n        break;\n        }\n      case 'Some': {\n        const v262 = v246[1];\n        v248 = v241;\n        \n        break;\n        }\n      }\n    const v267 = v248[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v273;\n    switch (v267[0]) {\n      case 'None': {\n        \n        v273 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v277 = v267[1];\n        v273 = v277;\n        \n        break;\n        }\n      }\n    \n    const v283 = [v176, v173];\n    \n    const txn3 = await (ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 4), [ctc0, ctc4, ctc1, ctc6, ctc1, ctc1, ctc2], [v25, v51, v52, v53, v526, v528, v283], [stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:dot', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n      const [v287] = txn3.data;\n      const v291 = txn3.time;\n      const v286 = txn3.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:54:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n      const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n      const v295 = [v293, v52, v294];\n      const v297 = stdlib.Array_set(v53, v52, v295);\n      const v300 = stdlib.Array_set(v51, v52, v293);\n      const v313 = v51.reduce((v306, v307) => {\n        const v309 = stdlib.addressEq(v293, v307);\n        const v310 = v309 ? true : false;\n        const v311 = v306 ? v306 : v310;\n        \n        return v311;}, false)\n      const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n      const v317 = [v53, v51, v52];\n      const v318 = [v297, v300, v316];\n      const v319 = v313 ? v317 : v318;\n      const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n      const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n      const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n      const cv51 = v322;\n      const cv52 = v323;\n      const cv53 = v321;\n      const cv526 = v291;\n      const cv527 = v526;\n      const cv528 = v528;\n      \n      (() => {\n        const v51 = cv51;\n        const v52 = cv52;\n        const v53 = cv53;\n        const v526 = cv526;\n        const v527 = cv527;\n        const v528 = cv528;\n        \n        if ((() => {\n          const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n          \n          return v60;})()) {\n          sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v526, v528]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 3), v25, v51, v52, v53, v528]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:42:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n          const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n          const v339 = v341;\n          const v529 = v526;\n          const v530 = v527;\n          const v531 = v528;\n          \n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            \n            return v346;})()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              \n              return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n            switch (v469[0]) {\n              case 'None': {\n                \n                const v474 = stdlib.eq(v434, v398);\n                const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v479 = ['Some', v470];\n                const v480 = [v479, v470];\n                const v481 = [v469, v478];\n                const v482 = v474 ? v480 : v481;\n                v471 = v482;\n                \n                break;\n                }\n              case 'Some': {\n                const v485 = v469[1];\n                v471 = v464;\n                \n                break;\n                }\n              }\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n            switch (v490[0]) {\n              case 'None': {\n                \n                v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v500 = v490[1];\n                v496 = v500;\n                \n                break;\n                }\n              }\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      \n      return v311;}, false)\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    \n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    \n    continue;\n    }\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n  \n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    \n    return v346;})()) {\n    const v376 = stdlib.sub(v326, v530);\n    const txn3 = await (ctc.recv(8, 1, [ctc1], false, v376));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc9, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n        \n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n          \n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            \n            return v346;})()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              \n              return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n            switch (v469[0]) {\n              case 'None': {\n                \n                const v474 = stdlib.eq(v434, v398);\n                const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v479 = ['Some', v470];\n                const v480 = [v479, v470];\n                const v481 = [v469, v478];\n                const v482 = v474 ? v480 : v481;\n                v471 = v482;\n                \n                break;\n                }\n              case 'Some': {\n                const v485 = v469[1];\n                v471 = v464;\n                \n                break;\n                }\n              }\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n            switch (v490[0]) {\n              case 'None': {\n                \n                v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v500 = v490[1];\n                v496 = v500;\n                \n                break;\n                }\n              }\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;\n      }\n    else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;}\n    }\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    \n    return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n  switch (v469[0]) {\n    case 'None': {\n      \n      const v474 = stdlib.eq(v434, v398);\n      const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v479 = ['Some', v470];\n      const v480 = [v479, v470];\n      const v481 = [v469, v478];\n      const v482 = v474 ? v480 : v481;\n      v471 = v482;\n      \n      break;\n      }\n    case 'Some': {\n      const v485 = v469[1];\n      v471 = v464;\n      \n      break;\n      }\n    }\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n  switch (v490[0]) {\n    case 'None': {\n      \n      v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v500 = v490[1];\n      v496 = v500;\n      \n      break;\n      }\n    }\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 0, [], false, false));\n  const [] = txn1.data;\n  const v21 = txn1.time;\n  const v19 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc0], false, false));\n  const [v26] = txn2.data;\n  const v28 = txn2.time;\n  const v25 = txn2.from;\n  ;\n  const v54 = [v26, v26];\n  const v55 = [v19, stdlib.checkedBigNumberify('./index.rsh:30:33:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:30:36:decimal', stdlib.UInt_max, 0)];\n  const v57 = [v55, v55];\n  let v51 = v54;\n  let v52 = stdlib.checkedBigNumberify('./index.rsh:42:87:decimal', stdlib.UInt_max, 0);\n  let v53 = v57;\n  let v526 = v28;\n  let v527 = v21;\n  let v528 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v60 = stdlib.le(v52, stdlib.checkedBigNumberify('./index.rsh:44:31:decimal', stdlib.UInt_max, 1));\n    \n    return v60;})()) {\n    const txn3 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v287] = txn3.data;\n    const v291 = txn3.time;\n    const v286 = txn3.from;\n    ;\n    const v293 = v287[stdlib.checkedBigNumberify('./index.rsh:57:65:array ref', stdlib.UInt_max, 1)];\n    const v294 = v287[stdlib.checkedBigNumberify('./index.rsh:57:83:array ref', stdlib.UInt_max, 0)];\n    const v295 = [v293, v52, v294];\n    const v297 = stdlib.Array_set(v53, v52, v295);\n    const v300 = stdlib.Array_set(v51, v52, v293);\n    const v313 = v51.reduce((v306, v307) => {\n      const v309 = stdlib.addressEq(v293, v307);\n      const v310 = v309 ? true : false;\n      const v311 = v306 ? v306 : v310;\n      \n      return v311;}, false)\n    const v316 = stdlib.add(v52, stdlib.checkedBigNumberify('./index.rsh:64:118:decimal', stdlib.UInt_max, 1));\n    const v317 = [v53, v51, v52];\n    const v318 = [v297, v300, v316];\n    const v319 = v313 ? v317 : v318;\n    const v321 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v322 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v323 = v319[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 2)];\n    const cv51 = v322;\n    const cv52 = v323;\n    const cv53 = v321;\n    const cv526 = v291;\n    const cv527 = v526;\n    const cv528 = v528;\n    \n    v51 = cv51;\n    v52 = cv52;\n    v53 = cv53;\n    v526 = cv526;\n    v527 = cv527;\n    v528 = cv528;\n    \n    continue;\n    }\n  const v326 = stdlib.add(v527, stdlib.checkedBigNumberify('./index.rsh:100:63:decimal', stdlib.UInt_max, 9000));\n  const v341 = [stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:102:76:decimal', stdlib.UInt_max, 0)];\n  let v339 = v341;\n  let v529 = v526;\n  let v530 = v527;\n  let v531 = v528;\n  \n  while ((() => {\n    const v346 = stdlib.gt(v326, v530);\n    \n    return v346;})()) {\n    const v376 = stdlib.sub(v326, v530);\n    const v359 = stdlib.protect(ctc3, await interact.shouldBuyTicket(), {\n      at: './index.rsh:107:73:application',\n      fs: ['at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:106:25:function exp)', 'at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    const v360 = v359[stdlib.checkedBigNumberify('./index.rsh:110:38:array ref', stdlib.UInt_max, 1)];\n    \n    \n    const txn3 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531, v360], [v360, []], [ctc1], true, false, v376, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      \n      const v369 = stdlib.add(v531, v365);\n      sim_r.txns.push({\n        amt: v365,\n        kind: 'to',\n        tok: undefined\n        });\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      \n      (() => {\n        const v339 = cv339;\n        const v529 = cv529;\n        const v530 = cv530;\n        const v531 = cv531;\n        \n        if ((() => {\n          const v346 = stdlib.gt(v326, v530);\n          \n          return v346;})()) {\n          const v376 = stdlib.sub(v326, v530);\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v398 = v339.reduce((v390, v391) => {\n            const v394 = stdlib.gt(v391, v390);\n            const v396 = v394 ? v391 : v390;\n            \n            return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n          const v407 = ['None', null];\n          const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n          const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n          const v456 = stdlib.eq(v433, v398);\n          const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n          const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n          const v464 = v456 ? v461 : v463;\n          const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n          const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n          let v471;\n          switch (v469[0]) {\n            case 'None': {\n              \n              const v474 = stdlib.eq(v434, v398);\n              const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n              const v479 = ['Some', v470];\n              const v480 = [v479, v470];\n              const v481 = [v469, v478];\n              const v482 = v474 ? v480 : v481;\n              v471 = v482;\n              \n              break;\n              }\n            case 'Some': {\n              const v485 = v469[1];\n              v471 = v464;\n              \n              break;\n              }\n            }\n          const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n          let v496;\n          switch (v490[0]) {\n            case 'None': {\n              \n              v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n              \n              break;\n              }\n            case 'Some': {\n              const v500 = v490[1];\n              v496 = v500;\n              \n              break;\n              }\n            }\n          const v506 = v53[v496];\n          const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n          sim_r.txns.push({\n            amt: v531,\n            kind: 'from',\n            to: v507,\n            tok: undefined\n            });\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1], [v25, v53, v326, v339, v376, v529, v531], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:dot', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n        const [] = txn4.data;\n        const v381 = txn4.time;\n        const v379 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv339 = v339;\n        const cv529 = v381;\n        const cv530 = v529;\n        const cv531 = v531;\n        \n        (() => {\n          const v339 = cv339;\n          const v529 = cv529;\n          const v530 = cv530;\n          const v531 = cv531;\n          \n          if ((() => {\n            const v346 = stdlib.gt(v326, v530);\n            \n            return v346;})()) {\n            const v376 = stdlib.sub(v326, v530);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v529, v531]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 5), v25, v53, v326, v339, v376, v531]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:102:55:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v398 = v339.reduce((v390, v391) => {\n              const v394 = stdlib.gt(v391, v390);\n              const v396 = v394 ? v391 : v390;\n              \n              return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v407 = ['None', null];\n            const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v456 = stdlib.eq(v433, v398);\n            const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v464 = v456 ? v461 : v463;\n            const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v471;\n            switch (v469[0]) {\n              case 'None': {\n                \n                const v474 = stdlib.eq(v434, v398);\n                const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v479 = ['Some', v470];\n                const v480 = [v479, v470];\n                const v481 = [v469, v478];\n                const v482 = v474 ? v480 : v481;\n                v471 = v482;\n                \n                break;\n                }\n              case 'Some': {\n                const v485 = v469[1];\n                v471 = v464;\n                \n                break;\n                }\n              }\n            const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v496;\n            switch (v490[0]) {\n              case 'None': {\n                \n                v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v500 = v490[1];\n                v496 = v500;\n                \n                break;\n                }\n              }\n            const v506 = v53[v496];\n            const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v531,\n              kind: 'from',\n              to: v507,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25, v529]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 6), v25]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:142:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v381 = txn4.time;\n      const v379 = txn4.from;\n      ;\n      const cv339 = v339;\n      const cv529 = v381;\n      const cv530 = v529;\n      const cv531 = v531;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;\n      }\n    else {\n      const [v365] = txn3.data;\n      const v370 = txn3.time;\n      const v364 = txn3.from;\n      const v369 = stdlib.add(v531, v365);\n      ;\n      const cv339 = v339;\n      const cv529 = v370;\n      const cv530 = v529;\n      const cv531 = v369;\n      \n      v339 = cv339;\n      v529 = cv529;\n      v530 = cv530;\n      v531 = cv531;\n      \n      continue;}\n    }\n  const v398 = v339.reduce((v390, v391) => {\n    const v394 = stdlib.gt(v391, v390);\n    const v396 = v394 ? v391 : v390;\n    \n    return v396;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v407 = ['None', null];\n  const v433 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v434 = v339[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v456 = stdlib.eq(v433, v398);\n  const v460 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v461 = [v460, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v463 = [v407, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v464 = v456 ? v461 : v463;\n  const v469 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v470 = v464[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v471;\n  switch (v469[0]) {\n    case 'None': {\n      \n      const v474 = stdlib.eq(v434, v398);\n      const v478 = stdlib.add(v470, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v479 = ['Some', v470];\n      const v480 = [v479, v470];\n      const v481 = [v469, v478];\n      const v482 = v474 ? v480 : v481;\n      v471 = v482;\n      \n      break;\n      }\n    case 'Some': {\n      const v485 = v469[1];\n      v471 = v464;\n      \n      break;\n      }\n    }\n  const v490 = v471[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v496;\n  switch (v490[0]) {\n    case 'None': {\n      \n      v496 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v500 = v490[1];\n      v496 = v500;\n      \n      break;\n      }\n    }\n  const v506 = v53[v496];\n  const v507 = v506[stdlib.checkedBigNumberify('./index.rsh:139:53:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v520] = txn3.data;\n  const v523 = txn3.time;\n  const v519 = txn3.from;\n  ;\n  const v522 = stdlib.addressEq(v25, v519);\n  stdlib.assert(v522, {\n    at: './index.rsh:148:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  return;\n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 6,\n    size: 89\n    }, {\n    count: 8,\n    size: 153\n    }, null, null, null, null, {\n    count: 8,\n    size: 129\n    }, {\n    count: 13,\n    size: 265\n    }, {\n    count: 12,\n    size: 257\n    }, {\n    count: 12,\n    size: 337\n    }],\n  steps: [null, `#pragma version 3\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 6\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:28:21:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\ndup\ndup\nstore 253\nconcat\nstore 252\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 252\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 251\nint 0\nitob\nint 0\nitob\nconcat\nstore 250\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 251\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 250\nsubstring 0 8\nbtoi\nstore 249\nload 250\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl3:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl4:\nl2:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 241\nl6:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl7:\nl5:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\ngtxn 0 Sender\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:148:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 250\nload 249\n+\nstore 248\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 249\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 247\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 247\nitob\nconcat\nload 248\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 247\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 247\nload 252\nsubstring 8 16\nbtoi\nstore 246\nint 0\nload 247\nload 247\nint 0\n>\nselect\ndup\nstore 245\nload 246\nload 246\nload 245\n>\nselect\nstore 244\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 247\nload 244\n==\nselect\ndup\nstore 243\nsubstring 0 9\nstore 242\nload 243\nsubstring 9 17\nbtoi\nstore 241\nload 242\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 242\nload 241\nint 1\n+\nitob\nconcat\nint 1\nload 241\nconcat\nbyte base64()\nconcat\nload 241\nitob\nconcat\nload 246\nload 244\n==\nselect\nstore 240\nl2:\nload 242\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 242\nsubstring 1 9\nbtoi\nstore 239\nload 243\nstore 240\nl3:\nl1:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 239\nl5:\nload 240\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 240\nsubstring 1 10\nbtoi\ndup\nstore 238\nstore 239\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 239\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 248\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:102:55:dot\"\n// \"[at ./index.rsh:102:55:application call to [unknown function] (defined at: ./index.rsh:102:55:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 249\nitob\nconcat\nload 250\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 249\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 249\nload 252\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 250\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 251\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 12\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:42:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nsubstring 8 40\ndup\nstore 249\nload 254\nsubstring 0 32\n==\nstore 248\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 249\nload 253\nitob\nconcat\nload 250\nsubstring 0 8\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 249\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 249\nload 254\nsubstring 32 64\n==\nload 248\nload 248\nselect\nselect\ndup\nstore 247\nsubstring 0 96\nstore 246\nload 247\nsubstring 160 168\nbtoi\ndup\nstore 245\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 247\nsubstring 96 160\nconcat\nload 245\nitob\nconcat\nload 246\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 9000\n+\nstore 244\nint 0\nitob\nint 0\nitob\nconcat\nstore 243\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 244\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 242\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 246\nconcat\nload 244\nitob\nconcat\nload 243\nconcat\nload 242\nitob\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\nload 243\nsubstring 0 8\nbtoi\nstore 242\nload 243\nsubstring 8 16\nbtoi\nstore 241\nint 0\nload 242\nload 242\nint 0\n>\nselect\ndup\nstore 240\nload 241\nload 241\nload 240\n>\nselect\nstore 239\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 242\nload 239\n==\nselect\ndup\nstore 238\nsubstring 0 9\nstore 237\nload 238\nsubstring 9 17\nbtoi\nstore 236\nload 237\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 236\nint 1\n+\nitob\nconcat\nint 1\nload 236\nconcat\nbyte base64()\nconcat\nload 236\nitob\nconcat\nload 241\nload 239\n==\nselect\nstore 235\nl3:\nload 237\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 237\nsubstring 1 9\nbtoi\nstore 234\nload 238\nstore 235\nl4:\nl2:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 234\nl6:\nload 235\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 235\nsubstring 1 10\nbtoi\ndup\nstore 233\nstore 234\nl7:\nl5:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 246\nint 48\nload 234\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v51\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v52\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v528\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v287\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v365\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v51\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v52\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v526\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v528\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T31\",\n                \"name\": \"v287\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v19\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v26\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v520\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v365\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T27\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T28\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T6[2]\",\n                \"name\": \"v53\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v326\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v339\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v376\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v529\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v531\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T29\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611b42806100826000396000f3fe6080604052600436106100595760003560e01c8063193afc731461006557806347931b2b1461007a5780635754bb121461008d5780638f7a1344146100a0578063a496364f146100b3578063ad5542c4146100c657610060565b3661006057005b600080fd5b61007861007336600461161f565b6100d9565b005b610078610088366004611603565b6101a4565b61007861009b366004611603565b61031f565b6100786100ae366004611603565b6104aa565b6100786100c13660046115e8565b610824565b6100786100d43660046115e8565b6108cc565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461011657600080fd5b60008055341561012557600080fd5b7fc32df0ce290a4082d696e286eb47ee901bff58c6d9bf2b65b404efaab9a729c78160405161015491906118fd565b60405180910390a1604080518082018252338152436020808301919091529151909161018591600191849101611a85565b60408051601f1981840301815291905280516020909101206000555050565b6040516101b89060059083906020016119cb565b6040516020818303038152906040528051906020012060001c600054146101de57600080fd5b600080556101f6610140820135610160830135611aac565b43101561020257600080fd5b341561020d57600080fd5b7fd77bd1be4ecd0807633fb030d52c4b728e2bc3c01c09685da8aea29f7e6191ea8160405161023c919061188e565b60405180910390a161024c61118e565b61025960208301836115c7565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156102a85761029960608302850136819003810190611630565b8152602001906001019061027c565b50508351602001929092525050805160e0830135604091820152805180820182529061010084019060029083908390808284376000920191909152505050602080830180519290925281514391015280516101608401356040909101525161018083013560609091015261031b81610a3c565b5050565b6040516103339060059083906020016119cb565b6040516020818303038152906040528051906020012060001c6000541461035957600080fd5b60008055610371610140820135610160830135611aac565b431061037c57600080fd5b346101a08201351461038d57600080fd5b7fda80f58ba2478e3dba7530b2892195da521482b5cc679ec67cd2417c135760be816040516103bc9190611870565b60405180910390a16103cc61118e565b6103d960208301836115c7565b81516001600160a01b039091169052604080518082019091526020830160026000835b828210156104285761041960608302850136819003810190611630565b815260200190600101906103fc565b50508351602001929092525050805160e08301356040918201528051808201825290610100840190600290839083908082843760009201919091525050506020808301805192909252815143910152516101608301356040909101526104986101a0830135610180840135611aac565b60208201516060015261031b81610a3c565b6040516104be906003908390602001611927565b6040516020818303038152906040528051906020012060001c600054146104e457600080fd5b600080556104f06111b3565b34156104fb57600080fd5b61050d6101c083016101a084016115c7565b81516001600160a01b03909116905280516060830135602091820152815161018084013560409091015260009082018190525b60028110156105f25760208301816002811061056c57634e487b7160e01b600052603260045260246000fd5b60200201602081019061057f91906115c7565b6001600160a01b0316604083015260208201516105d35760408201516001600160a01b03166105b66101c085016101a086016115c7565b6001600160a01b0316146105cb5760006105ce565b60015b6105d9565b81602001515b15156020830152806105ea81611adb565b915050610540565b50602081015115156060820152604080518082019091526080830160026000835b8282101561063f5761063060608302850136819003810190611630565b81526020019060010190610613565b505050506080820151526040805180820182529060208401906002908390839080828437600092018290525060808086018051602001959095529351606087013560409182015280518082019091526106dc9490935086019150600290835b828210156106ca576106bb60608302850136819003810190611630565b8152602001906001019061069e565b50508451606087013592509050610b60565b60a0820151526040805180820182526107269160208501906002908390839080828437600092019190915250505060608401356107216101c086016101a087016115c7565b610bfe565b60a08201516020015261073e60016060840135611aac565b60a082015160400152606081015161075a578060a00151610760565b80608001515b60c08201526040517f385f8646716a83170a0dce3b1830eb8bcac8f924070fb3930970bb2b37c5d0f0906107959084906118c1565b60405180910390a16107a5611202565b6107b260208401846115c7565b81516001600160a01b03909116905260c08201805160209081015181840180519190915282516040908101518251909301929092529151518251909101528051436060909101528051610140850135608091909101525161016084013560a0919091015261081f81610cb8565b505050565b604051610838906006908390602001611a71565b6040516020818303038152906040528051906020012060001c6000541461085e57600080fd5b60008055341561086d57600080fd5b3361087b60208301836115c7565b6001600160a01b03161461088e57600080fd5b7f38f10beaf24daa7993ba7875418dd447d7b55c9eea359e9c56d6c87fbd66de1c816040516108bd9190611854565b60405180910390a16000805533ff5b6040516108e0906001908390602001611a71565b6040516020818303038152906040528051906020012060001c6000541461090657600080fd5b60008055610912611223565b341561091d57600080fd5b61092d60608301604084016115c7565b81516001600160a01b0391909116905261094d60608301604084016115c7565b81516001600160a01b039190911660209182015261096d908301836115c7565b602082810180516001600160a01b03939093169092528151600091018190528151604090810191909152815190830180519190915290519051600160200201526040517f8d95bc010eb8fd21ab686d3989fca5a9fd1d3e71af61373db9c3fb4e8c62c509906109dd908490611826565b60405180910390a16109ed611202565b80513390528151602080830180519290925281516000908201819052604080860151845190910152825143606090910152825191860135608090920191909152905160a0015261081f81610cb8565b6040805160208101909152600081528160200151604001518260000151604001511115610b0957816020015160400151826000015160400151610a7f9190611ac4565b8152610a89611250565b8251516001600160a01b0316815282516020908101518183015283516040908101518184015281850180515160608086019190915285516080860152815184015160a08601529051015160c084015251610ae8916005918491016119e0565b60408051601f1981840301815291905280516020909101206000555061031b565b610b116112a2565b82515181516001600160a01b0390911690528251602090810151825182015280840180515183516040015280519091015182516060908101919091529051015181516080015261081f81610db5565b610b686112c2565b60005b6002811015610bd057848160028110610b9457634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610bb957634e487b7160e01b600052603260045260246000fd5b602002015280610bc881611adb565b915050610b6b565b5081818460028110610bf257634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b610c066112ef565b60005b6002811015610c7c57848160028110610c3257634e487b7160e01b600052603260045260246000fd5b6020020151828260028110610c5757634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092909202015280610c7481611adb565b915050610c09565b5081818460028110610c9e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b600181602001516020015111610d4c57610cd061130d565b8151516001600160a01b0316815260208083018051518284015280518201516040808501919091528151810151606080860191909152825101516080850152905160a0908101519084015251610d2b9160039184910161193c565b60408051601f19818403018152919052805160209091012060005550610db2565b610d54611358565b81515181516001600160a01b03909116905260208083018051604090810151845190930192909252805160609081015184519093019290925280516080908101518451909301929092525160a0015182519091015261031b816110f4565b50565b610dbd61136b565b60008082525b6002811015610e29578251604001518160028110610df157634e487b7160e01b600052603260045260246000fd5b60209081029190910151908301819052825110610e0f578151610e15565b81602001515b825280610e2181611adb565b915050610dc3565b5080516040808301918252606083018051600090819052815160016020918201819052608087018051829052805186018490525160a0880180519190915251820192909252915160c08601805191909152519091015290518351909101515114610e97578060c00151610e9d565b8060a001515b60e0820181905251516000906001811115610ec857634e487b7160e01b600052602160045260246000fd5b1415610f5c576101208101805160019081905260e0830180516020908101518451604001529251610140850180519190915281518401519051840152805151610160850151525190910151610f1d9190611aac565b610160820151602001526040808201518351909101516001602002015114610f4a57806101600151610f51565b8061014001515b610100820152610fa2565b600160e082015151516001811115610f8457634e487b7160e01b600052602160045260246000fd5b1415610fa25760e08101518051604001516101808301526101008201525b600061010082015151516001811115610fcb57634e487b7160e01b600052602160045260246000fd5b1415610fde5760006101a0820152611027565b60016101008201515151600181111561100757634e487b7160e01b600052602160045260246000fd5b14156110275761010081015151604001516101c082018190526101a08201525b8151602001516101a08201516002811061105157634e487b7160e01b600052603260045260246000fd5b6020020151518251608001516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611093573d6000803e3d6000fd5b50604080518082018252600080825260208083019182528551516001600160a01b03168352855160600151909152915190916110d491600691849101611a85565b60408051601f198184030181529190528051602090910120600055505050565b6110fc61143f565b805160009081905281516020015261111261118e565b82515181516001600160a01b03909116905282516020908101518251909101528251606001516111459061232890611aac565b8151604090810191909152825160208084018051929092528551830151825190910152845160609081015182519093019290925284516080015190519091015261081f81610a3c565b60405180604001604052806111a1611452565b81526020016111ae611482565b905290565b6040518060e001604052806111c6611495565b81526000602082018190526040820181905260608201526080016111e86114bf565b81526020016111f56114bf565b81526020016111ae6114bf565b604080516060810182526000918101918252908152602081016111ae6114df565b60405180606001604052806112366112ef565b8152602001611243611495565b81526020016111ae6112c2565b6040518060e0016040528060006001600160a01b031681526020016112736112c2565b8152602001600081526020016112876112ef565b81526020016000815260200160008152602001600081525090565b60405180604001604052806112b5611506565b8152600060209091015290565b60405180604001604052806002905b6112d9611495565b8152602001906001900390816112d15790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c0016040528060006001600160a01b031681526020016113306112ef565b8152602001600081526020016113446112c2565b815260200160008152602001600081525090565b60405180604001604052806112b5611536565b604051806101e001604052806000815260200160008152602001600081526020016113b16040805160608101909152806000815260006020820181905260409091015290565b815260408051606081018252600080825260208281018290529282015291019081526020016113de611559565b81526020016113eb611559565b81526020016113f8611559565b8152602001611405611559565b81526040805160608101825260008082526020828101829052928201529101908152602001611432611559565b8152602001611287611559565b60405180602001604052806111ae6112ef565b604051806060016040528060006001600160a01b031681526020016114756112c2565b8152602001600081525090565b60405180608001604052806112876112ef565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b60405180606001604052806114d26112c2565b81526020016114756112ef565b6040518060c001604052806114f26112ef565b8152602001600081526020016112876112c2565b6040518060a0016040528060006001600160a01b031681526020016115296112c2565b81526020016113446112ef565b6040518060a0016040528060006001600160a01b031681526020016112876112c2565b6040805160a0810182526000918101828152606082018390526080820192909252908190611475565b80356001600160a01b038116811461159957600080fd5b919050565b6000606082840312156115af578081fd5b50919050565b60006101c082840312156115af578081fd5b6000602082840312156115d8578081fd5b6115e182611582565b9392505050565b6000606082840312156115f9578081fd5b6115e1838361159e565b60006101c08284031215611615578081fd5b6115e183836115b5565b6000604082840312156115af578081fd5b600060608284031215611641578081fd5b6040516060810181811067ffffffffffffffff8211171561167057634e487b7160e01b83526041600452602483fd5b60405261167c83611582565b815260208301356020820152604083013560408201528091505092915050565b8060005b60028110156116e3576001600160a01b036116ba83611582565b1684526020828101359085015260408083013590850152606093840193909101906001016116a0565b50505050565b8060005b60028110156116e357815180516001600160a01b031685526020808201518187015260409182015191860191909152606090940193909101906001016116ed565b6001600160a01b038061174083611582565b168352602080840181840160005b6002811015611774578461176183611582565b168352918301919083019060010161174e565b505050505060608101356060830152611793608083016080830161169c565b610140818101359083015261016090810135910152565b6001600160a01b036117bb82611582565b1682526117ce602083016020830161169c565b60e081013560e0830152610100604081830182850137506101408181013590830152610160808201359083015261018090810135910152565b6001600160a01b0361181882611582565b168252602090810135910152565b606081016118348284611807565b6001600160a01b0361184860408501611582565b16604083015292915050565b606081016118628284611807565b604092830135919092015290565b6101c0810161187f82846117aa565b6101a092830135919092015290565b6101c0810161189d82846117aa565b6101a0808401358015158082146118b357600080fd5b808386015250505092915050565b6101c081016118d0828461172e565b61018083810135908301526101a06001600160a01b036118f1828601611582565b16818401525092915050565b8135815260408101602083013580151580821461191957600080fd5b806020850152505092915050565b8281526101a081016115e1602083018461172e565b82815281516001600160a01b0316602080830191909152828101516101a0830191906040840160005b600281101561198d5782516001600160a01b0316825260208201928401929150600101611965565b505050506040830151608083015260608301516119ad60a08401826116e9565b50608083015161016083015260a08301516101808301529392505050565b8281526101c081016115e160208301846117aa565b82815281516001600160a01b0316602080830191909152828101516101c083019190611a0f60408501826116e9565b5060408401516101008401526060840151610120840160005b6002811015611a4557825182529183019190830190600101611a28565b50505050608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b828152606081016115e16020830184611807565b828152606081016115e1602083018480516001600160a01b03168252602090810151910152565b60008219821115611abf57611abf611af6565b500190565b600082821015611ad657611ad6611af6565b500390565b6000600019821415611aef57611aef611af6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204a6c29da24fd926d77cd056dd2ff69f507fc0e0da3f1a34847c1db23b00b0f1864736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}