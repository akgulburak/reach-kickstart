{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Null;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc4,\n    Voter: ctc5\n  });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Bool;\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc14 = stdlib.T_Tuple([]);\n  const ctc15 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc16 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc17 = stdlib.T_Tuple([ctc1, ctc0, ctc15, ctc1, ctc16, ctc9, ctc9, ctc1, ctc1]);\n  const ctc18 = stdlib.T_Tuple([ctc1, ctc0, ctc15, ctc1, ctc16, ctc9, ctc9, ctc1]);\n  const v18 = await ctc.creationTime();\n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 19));\n  const v22 = [v20, stdlib.checkedBigNumberify('./index.rsh:35:37:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:35:40:decimal', stdlib.UInt_max, 0)];\n  const txn1 = await ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), [ctc1, ctc2], [v18, v22], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n    const v63 = [v38, v38];\n    const v64 = [v24, v24];\n    const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n    const v59 = v63;\n    const v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n    const v61 = v64;\n    const v62 = v65;\n    const v615 = v26;\n    const v616 = v18;\n    const v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      return v68;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc17, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc18, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n      const v351 = true;\n      const v352 = v65;\n      const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n      const v618 = v615;\n      const v619 = v616;\n      const v620 = v617;\n\n      if ((() => {\n        const v359 = stdlib.gt(v338, v619);\n        const v361 = v359 ? v351 : false;\n        return v361;\n      })()) {\n        const v463 = stdlib.sub(v338, v619);\n        sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      } else {\n        sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n      }\n    }\n\n    return sim_r;\n  });\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc3], false, false);\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    continue;\n  }\n\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v463 = stdlib.sub(v338, v619);\n    const v399 = ['Admin', null];\n    const txn2 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v463, v618, v620, v399], [stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0), []], [ctc6], true, false, v463, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v416 = v411[1];\n            const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v412 = v418;\n            break;\n          }\n      }\n\n      const v422 = stdlib.add(v620, v412);\n      sim_r.txns.push({\n        amt: v412,\n        kind: 'to',\n        tok: undefined\n      });\n      let v424;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const v426 = stdlib.addressEq(v410, v23);\n            v424 = v426;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v429 = v411[1];\n            v424 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n      });\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const cv351 = false;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n\n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n\n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                return v361;\n              })()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              }\n            })();\n\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v436 = v411[1];\n            let v437;\n            const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v439) {\n              const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v444 = stdlib.sub(v422, v440);\n              sim_r.txns.push({\n                amt: v440,\n                kind: 'from',\n                to: v410,\n                tok: undefined\n              });\n              const v456 = [v352, v353, true];\n              v437 = v456;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v444;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v618 = cv618;\n                const v619 = cv619;\n                const v620 = cv620;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v619);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v463 = stdlib.sub(v338, v619);\n                  sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            } else {\n              const v449 = v352[v438];\n              const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v452 = stdlib.Array_set(v352, v438, v450);\n              const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v454 = stdlib.add(v353, v453);\n              const v457 = [v452, v454, true];\n              v437 = v457;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v422;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v618 = cv618;\n                const v619 = cv619;\n                const v620 = cv620;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v619);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v463 = stdlib.sub(v338, v619);\n                  sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            }\n\n            break;\n          }\n      }\n\n      return sim_r;\n    });\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      continue;\n    } else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v416 = v411[1];\n            const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v412 = v418;\n            break;\n          }\n      }\n\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const v426 = stdlib.addressEq(v410, v23);\n            v424 = v426;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v429 = v411[1];\n            v424 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n      });\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const cv351 = false;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v436 = v411[1];\n            let v437;\n            const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v439) {\n              const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v444 = stdlib.sub(v422, v440);\n              ;\n              const v456 = [v352, v353, true];\n              v437 = v456;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v444;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            } else {\n              const v449 = v352[v438];\n              const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v452 = stdlib.Array_set(v352, v438, v450);\n              const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v454 = stdlib.add(v353, v453);\n              const v457 = [v452, v454, true];\n              v437 = v457;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v422;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const v488 = v352.reduce((v480, v481) => {\n    const v484 = stdlib.gt(v481, v480);\n    const v486 = v484 ? v481 : v480;\n    return v486;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v497 = ['None', null];\n  const v523 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v524 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v546 = stdlib.eq(v523, v488);\n  const v550 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v551 = [v550, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v553 = [v497, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v554 = v546 ? v551 : v553;\n  const v559 = v554[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v560 = v554[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v561;\n\n  switch (v559[0]) {\n    case 'None':\n      {\n        const v564 = stdlib.eq(v524, v488);\n        const v568 = stdlib.add(v560, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v569 = ['Some', v560];\n        const v570 = [v569, v560];\n        const v571 = [v559, v568];\n        const v572 = v564 ? v570 : v571;\n        v561 = v572;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v575 = v559[1];\n        v561 = v554;\n        break;\n      }\n  }\n\n  const v580 = v561[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v586;\n\n  switch (v580[0]) {\n    case 'None':\n      {\n        v586 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v590 = v580[1];\n        v586 = v590;\n        break;\n      }\n  }\n\n  const v596 = v61[v586];\n  const v597 = v596[stdlib.checkedBigNumberify('./index.rsh:159:55:array ref', stdlib.UInt_max, 2)];\n  const v600 = v596[stdlib.checkedBigNumberify('./index.rsh:160:57:array ref', stdlib.UInt_max, 0)];\n  const txn2 = await ctc.sendrecv(6, 3, stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1, ctc1, ctc0, ctc1], [v23, v618, v620, v597, v600, v586], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 5), v23, v618, v620]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 5), v23, v620]);\n    const [v602, v603, v604] = txn2.data;\n    const v607 = txn2.time;\n    const v601 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v606 = stdlib.addressEq(v23, v601);\n    stdlib.assert(v606, {\n      at: './index.rsh:164:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      amt: v620,\n      kind: 'from',\n      to: v603,\n      tok: undefined\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc14, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc14, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:167:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  ;\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Bool;\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc15 = stdlib.T_Null;\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc17 = stdlib.T_Data({\n    Admin: ctc15,\n    Voter: ctc16\n  });\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc2], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const v181 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 180));\n    const v184 = stdlib.protect(ctc1, await interact.getParams(v181), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v192 = ['None', null];\n    const v218 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v219 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v241 = stdlib.addressEq(v218, v181);\n    const v245 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v246 = [v245, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v248 = [v192, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v249 = v241 ? v246 : v248;\n    const v254 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v255 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v256;\n\n    switch (v254[0]) {\n      case 'None':\n        {\n          const v259 = stdlib.addressEq(v219, v181);\n          const v263 = stdlib.add(v255, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v264 = ['Some', v255];\n          const v265 = [v264, v255];\n          const v266 = [v254, v263];\n          const v267 = v259 ? v265 : v266;\n          v256 = v267;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v270 = v254[1];\n          v256 = v249;\n          break;\n        }\n    }\n\n    const v275 = v256[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v281;\n\n    switch (v275[0]) {\n      case 'None':\n        {\n          v281 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v285 = v275[1];\n          v281 = v285;\n          break;\n        }\n    }\n\n    const v291 = [v184, v181];\n    const txn2 = await ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc3], [v23, v59, v60, v61, v62, v65, v615, v617, v291], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc3], true, false, false, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n      const [v295] = txn2.data;\n      const v299 = txn2.time;\n      const v294 = txn2.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v303 = [v301, v60, v302];\n      const v305 = stdlib.Array_set(v61, v60, v303);\n      const v308 = stdlib.Array_set(v59, v60, v301);\n      const v321 = v59.reduce((v314, v315) => {\n        const v317 = stdlib.addressEq(v301, v315);\n        const v318 = v317 ? true : false;\n        const v319 = v314 ? v314 : v318;\n        return v319;\n      }, false);\n      const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v327 = stdlib.Array_set(v62, v60, v302);\n      const v328 = [v61, v59, v60, v62];\n      const v329 = [v305, v308, v324, v327];\n      const v330 = v321 ? v328 : v329;\n      const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv59 = v333;\n      const cv60 = v334;\n      const cv61 = v332;\n      const cv62 = v335;\n      const cv615 = v299;\n      const cv616 = v615;\n      const cv617 = v617;\n\n      (() => {\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v62 = cv62;\n        const v615 = cv615;\n        const v616 = cv616;\n        const v617 = cv617;\n\n        if ((() => {\n          const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          return v68;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n          const v351 = true;\n          const v352 = v65;\n          const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n          const v618 = v615;\n          const v619 = v616;\n          const v620 = v617;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    continue;\n  }\n\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v463 = stdlib.sub(v338, v619);\n    const txn2 = await ctc.recv(7, 1, [ctc17], false, v463);\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      continue;\n    } else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v416 = v411[1];\n            const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v412 = v418;\n            break;\n          }\n      }\n\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const v426 = stdlib.addressEq(v410, v23);\n            v424 = v426;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v429 = v411[1];\n            v424 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Nominee'\n      });\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const cv351 = false;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v436 = v411[1];\n            let v437;\n            const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v439) {\n              const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v444 = stdlib.sub(v422, v440);\n              ;\n              const v456 = [v352, v353, true];\n              v437 = v456;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v444;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            } else {\n              const v449 = v352[v438];\n              const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v452 = stdlib.Array_set(v352, v438, v450);\n              const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v454 = stdlib.add(v353, v453);\n              const v457 = [v452, v454, true];\n              v437 = v457;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v422;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const txn2 = await ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false);\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  ;\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc5 = stdlib.T_Null;\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc5,\n    Voter: ctc4\n  });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Bool;\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc2], false, false);\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v68;\n  })()) {\n    const txn2 = await ctc.recv(9, 1, [ctc3], false, false);\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      return v319;\n    }, false);\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    continue;\n  }\n\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n\n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    return v361;\n  })()) {\n    const v463 = stdlib.sub(v338, v619);\n    const v383 = v62[stdlib.checkedBigNumberify('./index.rsh:108:81:array ref', stdlib.UInt_max, 0)];\n    const v384 = v62[stdlib.checkedBigNumberify('./index.rsh:108:91:array ref', stdlib.UInt_max, 1)];\n    const v385 = v352[stdlib.checkedBigNumberify('./index.rsh:108:102:array ref', stdlib.UInt_max, 0)];\n    const v386 = v352[stdlib.checkedBigNumberify('./index.rsh:108:111:array ref', stdlib.UInt_max, 1)];\n    const v387 = [v383, v384];\n    const v388 = [v385, v386];\n    const v389 = stdlib.protect(ctc4, await interact.shouldBuyTicket(v387, v388), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:64:application call to \"runVoter0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v404 = ['Voter', v389];\n    const v407 = v389[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n    const txn2 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v463, v618, v620, v404], [v407, []], [ctc6], true, false, v463, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v416 = v411[1];\n            const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v412 = v418;\n            break;\n          }\n      }\n\n      const v422 = stdlib.add(v620, v412);\n      sim_r.txns.push({\n        amt: v412,\n        kind: 'to',\n        tok: undefined\n      });\n      let v424;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const v426 = stdlib.addressEq(v410, v23);\n            v424 = v426;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v429 = v411[1];\n            v424 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n      });\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const cv351 = false;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n\n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n\n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                return v361;\n              })()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n              }\n            })();\n\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v436 = v411[1];\n            let v437;\n            const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v439) {\n              const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v444 = stdlib.sub(v422, v440);\n              sim_r.txns.push({\n                amt: v440,\n                kind: 'from',\n                to: v410,\n                tok: undefined\n              });\n              const v456 = [v352, v353, true];\n              v437 = v456;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v444;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v618 = cv618;\n                const v619 = cv619;\n                const v620 = cv620;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v619);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v463 = stdlib.sub(v338, v619);\n                  sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            } else {\n              const v449 = v352[v438];\n              const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v452 = stdlib.Array_set(v352, v438, v450);\n              const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v454 = stdlib.add(v353, v453);\n              const v457 = [v452, v454, true];\n              v437 = v457;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v422;\n\n              (() => {\n                const v351 = cv351;\n                const v352 = cv352;\n                const v353 = cv353;\n                const v618 = cv618;\n                const v619 = cv619;\n                const v620 = cv620;\n\n                if ((() => {\n                  const v359 = stdlib.gt(v338, v619);\n                  const v361 = v359 ? v351 : false;\n                  return v361;\n                })()) {\n                  const v463 = stdlib.sub(v338, v619);\n                  sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                  sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                  sim_r.isHalt = false;\n                }\n              })();\n            }\n\n            break;\n          }\n      }\n\n      return sim_r;\n    });\n\n    if (txn2.didTimeout) {\n      const txn3 = await ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n\n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n\n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            return v361;\n          })()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      continue;\n    } else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v416 = v411[1];\n            const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n            v412 = v418;\n            break;\n          }\n      }\n\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const v426 = stdlib.addressEq(v410, v23);\n            v424 = v426;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v429 = v411[1];\n            v424 = true;\n            break;\n          }\n      }\n\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n      });\n\n      switch (v411[0]) {\n        case 'Admin':\n          {\n            const cv351 = false;\n            const cv352 = v352;\n            const cv353 = v353;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            continue;\n            break;\n          }\n\n        case 'Voter':\n          {\n            const v436 = v411[1];\n            let v437;\n            const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n            const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n\n            if (v439) {\n              const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n              const v444 = stdlib.sub(v422, v440);\n              ;\n              const v456 = [v352, v353, true];\n              v437 = v456;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v444;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            } else {\n              const v449 = v352[v438];\n              const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n              const v452 = stdlib.Array_set(v352, v438, v450);\n              const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n              const v454 = stdlib.add(v353, v453);\n              const v457 = [v452, v454, true];\n              v437 = v457;\n              const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n              const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n              const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n              const cv351 = v460;\n              const cv352 = v458;\n              const cv353 = v459;\n              const cv618 = v423;\n              const cv619 = v618;\n              const cv620 = v422;\n              v351 = cv351;\n              v352 = cv352;\n              v353 = cv353;\n              v618 = cv618;\n              v619 = cv619;\n              v620 = cv620;\n              continue;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  const txn2 = await ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false);\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  ;\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 137\n  }, null, null, null, null, {\n    count: 11,\n    size: 177\n  }, {\n    count: 14,\n    size: 187\n  }, {\n    count: 13,\n    size: 170\n  }, {\n    count: 14,\n    size: 369\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nsubstring 0 32\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 255\nload 255\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 252\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:164:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:164:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 254\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l1\nint 0\nstore 244\nl1:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l2\nload 248\nsubstring 1 17\ndup\nstore 243\nsubstring 8 16\nbtoi\nstore 244\nl2:\nl0:\nload 249\nload 244\n+\nstore 243\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 244\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l4\ngtxn 0 Sender\nload 255\n==\nstore 242\nl4:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l5\nload 248\nsubstring 1 17\nstore 241\nint 1\nstore 242\nl5:\nl3:\n// Nothing\n// \"./index.rsh:103:64:application\"\n// \"[]\"\nload 242\nassert\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l7\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\n!\nint 0\n&&\nbz l8\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 241\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 241\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl7:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l9\nload 248\nsubstring 1 17\ndup\nstore 241\nsubstring 0 8\nbtoi\ndup\nstore 239\nint 2\n>=\nbz l10\nload 241\nsubstring 8 16\nbtoi\nstore 238\nload 243\nload 238\n-\nstore 237\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 238\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 0 16\nstore 236\nload 240\nsubstring 16 24\nbtoi\nstore 235\nload 240\nsubstring 24 25\nbtoi\nstore 234\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 233\nload 234\n&&\ndup\nstore 232\nbz l11\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 231\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 234\nitob // bool\nsubstring 7 8\nconcat\nload 236\nconcat\nload 235\nitob\nconcat\nload 231\nitob\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 231\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl11:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl10:\nload 252\nint 0\nint 8\nload 239\n*\nsubstring3\nload 252\nint 8\nload 239\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 239\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 241\nsubstring 8 16\nbtoi\n+\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 24 25\nbtoi\nstore 238\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 237\nload 238\n&&\ndup\nstore 236\nbz l12\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 235\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 238\nitob // bool\nsubstring 7 8\nconcat\nload 240\nsubstring 0 16\nconcat\nload 240\nsubstring 16 24\nconcat\nload 235\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 235\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl12:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl9:\nl6:\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 253\n&&\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 242\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 242\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 242\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 250\nconcat\nint 0\nitob\nconcat\nload 241\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v602\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v603\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v604\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v411\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v615\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v617\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v602\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v603\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v604\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v411\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v615\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v617\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611ee3806100826000396000f3fe60806040526004361061004e5760003560e01c8063404a34781461005a5780637ad466c21461006f578063b87338b014610082578063db8500b714610095578063ec2cc884146100a857610055565b3661005557005b600080fd5b61006d6100683660046118da565b6100bb565b005b61006d61007d366004611942565b610214565b61006d6100903660046118ec565b6103a2565b61006d6100a33660046118c8565b6107cd565b61006d6100b636600461187e565b610de2565b6040516100cf906004908390602001611d3f565b6040516020818303038152906040528051906020012060001c600054146100f557600080fd5b6000805561010b60c082013560e0830135611e4d565b43101561011757600080fd5b341561012257600080fd5b7fb91e5fee7d80cd4df9272e91ff7413963d1ef9dca2c3e540f3315850b08b2a8e816040516101519190611bef565b60405180910390a16101616113ea565b61016e6020830183611829565b81516001600160a01b0390911690528051602080840135910152610198606083016040840161184a565b60208201519015159052604080518082018252906060840190600290839083908082843760009201919091525050506020808301805190910191909152805160a080850135604090920191909152815143606090910152815160e0850135608090910152905161010084013591015261021081610ed6565b5050565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461025157600080fd5b6000805561025d611418565b341561026857600080fd5b6102786040830160208401611829565b81516001600160a01b039190911690526102986040830160208401611829565b81516001600160a01b03919091166020918201526102be903684900384019084016118fe565b602082810151919091526102da903684900384019084016118fe565b60208281015181019190915260408083018051600090819052905190920191909152517fa6e69dadb79658a46c005a5f88a8cb73e8d968dc2d6bcf01c1f3f07d907132d79061032a908490611c55565b60405180910390a161033a611445565b80513390526040808301805183516020908101919091528451818501805191909152805160009083018190529186015181519094019390935290518251606001528151436080909101528151853560a090910152905160c0015261039d8161100c565b505050565b6040516103b6906002908390602001611c73565b6040516020818303038152906040528051906020012060001c600054146103dc57600080fd5b600080556103e8611465565b34156103f357600080fd5b61040561024083016102208401611829565b81516001600160a01b03909116905280516060830135602091820152815161020084013560409091015260009082018190525b60028110156104ea5760208301816002811061046457634e487b7160e01b600052603260045260246000fd5b6020020160208101906104779190611829565b6001600160a01b0316604083015260208201516104cb5760408201516001600160a01b03166104ae61024085016102208601611829565b6001600160a01b0316146104c35760006104c6565b60015b6104d1565b81602001515b15156020830152806104e281611e7c565b915050610438565b50602081015115156060820152604080518082019091526080830160026000835b8282101561053757610528606083028501368190038101906118fe565b8152602001906001019061050b565b50505050608082015152604080518082018252906020840190600290839083908082843760009201919091525050506080820180516020019190915251606083013560409182015280518082018252906101408401906002908390839080828437600092018290525060808086015160600194909452604080518082019091526106059490935086019150600290835b828210156105f3576105e4606083028501368190038101906118fe565b815260200190600101906105c7565b50508451606087013592509050611115565b60a08201515260408051808201825261064f91602085019060029083908390808284376000920191909152505050606084013561064a61024086016102208701611829565b6111b3565b60a08201516020015261066760016060840135611e4d565b60a0820151604090810191909152805180820182526106ac9161014085019060029083908390808284376000920191909152505050606084013561020085013561126d565b8160a001516060018190525080606001516106cb578060a001516106d1565b80608001515b60c08201526040517f8400c30339f6628441ca54ee41b7d90613faa6c375dabda844e99fb7fe65a6bf90610706908490611c19565b60405180910390a1610716611445565b6107236020840184611829565b81516001600160a01b0390911690526040805180820182529061018085019060029083908390808284376000920191909152505082516020908101929092525060c080840180518301518385018051919091528151604090810151825190950194909452815151815190940193909352516060908101518351909101528151436080919091015281516101c086013560a0919091015290516101e085013591015261039d8161100c565b6040516107e1906004908390602001611d3f565b6040516020818303038152906040528051906020012060001c6000541461080757600080fd5b600080556108136114c6565b61082560c083013560e0840135611e4d565b431061083057600080fd5b600061084461014084016101208501611864565b600181111561086357634e487b7160e01b600052602160045260246000fd5b141561087257600081526108cb565b600161088661014084016101208501611864565b60018111156108a557634e487b7160e01b600052602160045260246000fd5b14156108cb576108be3683900383016101608401611895565b6020808301829052015181525b80516108dc90610100840135611e4d565b6040820152805134146108ee57600080fd5b600061090261014084016101208501611864565b600181111561092157634e487b7160e01b600052602160045260246000fd5b1415610949576109346020830183611829565b6001600160a01b0316331460608201526109a2565b600161095d61014084016101208501611864565b600181111561097c57634e487b7160e01b600052602160045260246000fd5b14156109a2576109953683900383016101608401611895565b6080820152600160608201525b80606001516109b057600080fd5b60006109c461014084016101208501611864565b60018111156109e357634e487b7160e01b600052602160045260246000fd5b1415610ac8577fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c82604051610a189190611b7f565b60405180910390a1610a286113ea565b610a356020840184611829565b81516001600160a01b03909116905280516020808501359181019190915281015160009052604080518082018252906060850190600290839083908082843760009201919091525050506020808301805190910191909152805160a080860135604092830152825143606090910152825160e08701356080909101529084015191510152610ac281610ed6565b50610210565b6001610adc61014084016101208501611864565b6001811115610afb57634e487b7160e01b600052602160045260246000fd5b141561021057610b143683900383016101608401611895565b60a0820181905251600211610c7d5760a081015160200151604051339180156108fc02916000818181858888f19350505050158015610b57573d6000803e3d6000fd5b506040805180820182529060608401906002908390839080828437600092019190915250505060e08201805191909152805160a084013560209091015280516001604091820152905160c0830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610bd3908490611b7f565b60405180910390a1610be36113ea565b610bf06020840184611829565b81516001600160a01b03909116905280516020808501359181019190915260c0830180516040908101518385018051911515909152825151815185015291518301518251820152815143606090910152905160e08601356080919091015260a08401519091015190830151610c659190611e65565b602082015160a00152610c7781610ed6565b50610ddd565b604080518082018252610ce49160608501906002908390839080828437600092019190915250505060a0830151516001606086018260028110610cd057634e487b7160e01b600052603260045260246000fd5b6020020135610cdf9190611e4d565b61126d565b6101008201515260a08082015160200151610d0191840135611e4d565b610100820180516020019190915280516001604091820152905160c0830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610d4e908490611b7f565b60405180910390a1610d5e6113ea565b610d6b6020840184611829565b81516001600160a01b03909116905280516020808501359181019190915260c083018051604090810151838501805191151590915282515181518501529151909201518151830152805143606090910152805160e08601356080919091015290830151905160a00152610ac281610ed6565b610210565b604051610df6906005908390602001611dc9565b6040516020818303038152906040528051906020012060001c60005414610e1c57600080fd5b600080553415610e2b57600080fd5b33610e396020830183611829565b6001600160a01b031614610e4c57600080fd5b610e5c60a0820160808301611829565b604080516001600160a01b0392909216919083013580156108fc02916000818181858888f19350505050158015610e97573d6000803e3d6000fd5b507f83e534428f92bfcb95a8170bbd5cd7a87ec89ee978b81e96168024da7cb7429d81604051610ec79190611b3d565b60405180910390a16000805533ff5b60408051602081019091526000815281602001516080015182600001516020015111610f03576000610f0a565b6020820151515b15610fca57816020015160800151826000015160200151610f2b9190611e65565b8152610f35611571565b8251516001600160a01b031681528251602090810151818301528084018051511515604080850191909152815183015160608086019190915282518201516080860152855160a08087019190915283519091015160c086015291519091015160e084015251610fa991600491849101611d54565b60408051601f19818403018152919052805160209091012060005550610210565b610fd26115c7565b82515181516001600160a01b03909116905260208084018051606001518351909201919091525160a0015181516040015261039d816112dd565b6001816020015160200151116110ba576110246115f9565b8151516001600160a01b031681526020808301805151828401528051820151604080850191909152815181015160608086019190915282510151608080860191909152855184015160a08601528251015160c08086019190915291519091015160e08401525161109991600291849101611c88565b60408051601f19818403018152919052805160209091012060005550611112565b6110c261165f565b81515181516001600160a01b0390911690528151602090810151825182015282018051608090810151835160400152815160a00151835160600152905160c001518251909101526102108161135f565b50565b61111d611672565b60005b60028110156111855784816002811061114957634e487b7160e01b600052603260045260246000fd5b602002015182826002811061116e57634e487b7160e01b600052603260045260246000fd5b60200201528061117d81611e7c565b915050611120565b50818184600281106111a757634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b6111bb6116c4565b60005b6002811015611231578481600281106111e757634e487b7160e01b600052603260045260246000fd5b602002015182826002811061120c57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201528061122981611e7c565b9150506111be565b508181846002811061125357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b6112756116c4565b60005b6002811015611185578481600281106112a157634e487b7160e01b600052603260045260246000fd5b60200201518282600281106112c657634e487b7160e01b600052603260045260246000fd5b6020020152806112d581611e7c565b915050611278565b61130a604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8151516001600160a01b031681528151602090810151818301528251604090810151818401525161134091600591849101611ddd565b60408051601f1981840301815291905280516020909101206000555050565b6113676113ea565b81515181516001600160a01b03909116905281516060015161138d906216e36090611e4d565b815160209081019190915280820180516001905283518201518151909201919091528051600060409182015283510151815160609081019190915283510151815160809081019190915283510151905160a0015261021081610ed6565b6040805160808101825260009181018281526060820192909252908152602081016114136116e2565b905290565b604051806060016040528061142b6116c4565b8152602001611438611672565b81526020016114136116c4565b60405180604001604052806114586116fe565b8152602001611413611721565b6040805161014081018252600060e08201818152610100830182905261012083018290528252602082018190529181018290526060810191909152608081016114ac611770565b81526020016114b9611770565b8152602001611413611770565b604051806101200160405280600081526020016114f6604051806040016040528060008152602001600081525090565b815260200160008152602001600015158152602001611528604051806040016040528060008152602001600081525090565b815260200161154a604051806040016040528060008152602001600081525090565b81526020016115576117a4565b81526020016115646117a4565b81526020016114136117a4565b60405180610100016040528060006001600160a01b03168152602001600081526020016000151581526020016115a56116c4565b8152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260009181018281526060820183905260808201929092529081905b8152600060209091015290565b60405180610100016040528060006001600160a01b0316815260200161161d6116c4565b815260200160008152602001611631611672565b815260200161163e6116c4565b815260200161164b6116c4565b815260200160008152602001600081525090565b60405180604001604052806115ec6117cb565b60405180604001604052806002905b6116ae604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816116815790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c001604052806000151581526020016115a56116c4565b604051806040016040528060006001600160a01b031681526020016114136116c4565b6040518060e001604052806117346116c4565b815260200160008152602001611748611672565b81526020016117556116c4565b81526020016000815260200160008152602001600081525090565b6040518060800160405280611783611672565b81526020016117906116c4565b8152602001600081526020016114136116c4565b60405180606001604052806117b76116c4565b815260006020820181905260409091015290565b6040518060a0016040528060006001600160a01b031681526020016117556116c4565b80356001600160a01b038116811461180557600080fd5b919050565b8035801515811461180557600080fd5b80356002811061180557600080fd5b60006020828403121561183a578081fd5b611843826117ee565b9392505050565b60006020828403121561185b578081fd5b6118438261180a565b600060208284031215611875578081fd5b6118438261181a565b600060c0828403121561188f578081fd5b50919050565b6000604082840312156118a6578081fd5b6118b06040611e0e565b82358152602083013560208201528091505092915050565b60006101a0828403121561188f578081fd5b6000610140828403121561188f578081fd5b6000610240828403121561188f578081fd5b60006060828403121561190f578081fd5b6119196060611e0e565b611922836117ee565b815260208301356020820152604083013560408201528091505092915050565b60006080828403121561188f578081fd5b8060005b600281101561197d5761196a8483611b14565b6060938401939190910190600101611957565b50505050565b8060005b600281101561197d576119b884835180516001600160a01b0316825260208082015190830152604090810151910152565b6060939093019260209190910190600101611987565b6040818337600060408301525050565b8060005b600281101561197d5781518452602093840193909101906001016119e2565b6001600160a01b03611a12826117ee565b168252602080830181830160005b6002811015611a5557611a4783611a36846117ee565b6001600160a01b0316815260200190565b925090830190600101611a20565b5050505060608101356060830152611a736080830160808301611953565b610140611a848184018284016119ce565b50610180611a968184018284016119ce565b506101c081810135908301526101e090810135910152565b6001600160a01b03611abf826117ee565b16825260208101356020830152611ad86040820161180a565b15156040830152604060608201606084013760a0818101359083015260c0808201359083015260e0808201359083015261010090810135910152565b6001600160a01b03611b25826117ee565b16825260208181013590830152604090810135910152565b60c08101611b4b8284611b14565b606083810135908301526001600160a01b03611b69608085016117ee565b16608083015260a083013560a083015292915050565b6101a08101611b8e8284611aae565b610120611b9c81850161181a565b60028110611bba57634e487b7160e01b600052602160045260246000fd5b90830152610140611bcc84820161180a565b151590830152610160838101359083015261018092830135929091019190915290565b6101408101611bfe8284611aae565b610120611c0c81850161180a565b1515818401525092915050565b6102408101611c288284611a01565b61020083810135908301526102206001600160a01b03611c498286016117ee565b16818401525092915050565b8135815260808101611c6d6020808401908501611b14565b92915050565b82815261022081016118436020830184611a01565b82815281516001600160a01b031660208083019190915282810151610220830191906040840160005b6002811015611cd95782516001600160a01b0316825260208201928401929150600101611cb1565b50505050604083015160808301526060830151611cf960a0840182611983565b506080830151611d0d6101608401826119de565b5060a0830151611d216101a08401826119de565b5060c08301516101e083015260e08301516102008301529392505050565b82815261014081016118436020830184611aae565b60006101408201905083825260018060a01b038351166020830152602083015160408301526040830151151560608301526060830151611d9760808401826119de565b50608083015160c083015260a083015160e083015260c083015161010083015260e08301516101208301529392505050565b828152608081016118436020830184611b14565b82815260808101611843602083018480516001600160a01b0316825260208082015190830152604090810151910152565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e4557634e487b7160e01b600052604160045260246000fd5b604052919050565b60008219821115611e6057611e60611e97565b500190565b600082821015611e7757611e77611e97565b500390565b6000600019821415611e9057611e90611e97565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d1c307e09e3bae37acfbe85e7d6c60715dc771b8d3fd90c6744d54d0e659123c64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/github/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Tuple","ctc3","ctc4","T_Null","ctc5","ctc6","T_Data","Voter","ctc7","ctc8","T_Bool","ctc9","T_Array","checkedBigNumberify","UInt_max","ctc10","ctc11","ctc12","ctc13","ctc14","ctc15","ctc16","ctc17","ctc18","v18","creationTime","v20","selfAddress","v22","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v24","data","v26","time","v23","from","push","amt","kind","tok","undefined","v38","v63","v64","v65","v59","v60","v61","v62","v615","v616","v617","v68","le","nextSt","nextSt_noTime","view","isHalt","v338","add","v351","v352","v353","v618","v619","v620","v359","gt","v361","v463","sub","txn2","recv","v295","v299","v294","v301","v302","v303","v305","Array_set","v308","v321","reduce","v314","v315","v317","addressEq","v318","v319","v324","v327","v328","v329","v330","v332","v333","v334","v335","cv59","cv60","cv61","cv62","cv615","cv616","cv617","v399","v411","v423","v410","v412","v416","v418","v422","v424","v426","v429","assert","at","fs","msg","who","cv351","cv352","cv353","cv618","cv619","cv620","v436","v437","v438","v439","ge","v440","v444","to","v456","v458","v459","v460","v449","v450","v452","v453","v454","v457","didTimeout","txn3","v468","v466","v488","v480","v481","v484","v486","v497","v523","v524","v546","eq","v550","v551","v553","v554","v559","v560","v561","v564","v568","v569","v570","v571","v572","v575","v580","v586","v590","v596","v597","v600","v602","v603","v604","v607","v601","v606","Nominee","v181","v184","protect","getParams","v192","v218","v219","v241","v245","v246","v248","v249","v254","v255","v256","v259","v263","v264","v265","v266","v267","v270","v275","v281","v285","v291","v383","v384","v385","v386","v387","v388","v389","shouldBuyTicket","v404","v407","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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AAS,CAAT,EAAY,CAAZ,EAAe,CAACjF,IAAD,EAAOF,IAAP,EAAaE,IAAb,CAAf,EAAmC,KAAnC,EAA0C,KAA1C,CAApB;AACA,QAAM,CAAC6L,IAAD,EAAOC,IAAP,EAAaC,IAAb,IAAqB/G,IAAI,CAACxC,IAAhC;AACA,QAAMwJ,IAAI,GAAGhH,IAAI,CAACtC,IAAlB;AACA,QAAMuJ,IAAI,GAAGjH,IAAI,CAACpC,IAAlB;AACA;AACA,QAAMsJ,IAAI,GAAG5M,MAAM,CAAC0G,SAAP,CAAiBrD,GAAjB,EAAsBsJ,IAAtB,CAAb;AACA3M,EAAAA,MAAM,CAACwI,MAAP,CAAcoE,IAAd,EAAoB;AAClBnE,IAAAA,EAAE,EAAE,wBADc;AAElBC,IAAAA,EAAE,EAAE,EAFc;AAGlBC,IAAAA,GAAG,EAAE,gBAHa;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAMA;AACA;AAGC;MAjgBmBxH,K;AAigBnB;AAEH,MAAM8N,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFc;AAuFZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArJc;AAsJZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArKc;AAsKZ/O,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3Mc;AA4MZgP,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL,IAHK,EAGC,IAHD,EAGO,IAHP,EAGa,IAHb,EAGmB;AAC3BD,IAAAA,KAAK,EAAE,EADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAHnB,EAML;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GANK,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,CA5ME;AA4NZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjvPS,EAuPN,IAvPM,EAuPA,IAvPA,EAuPM,IAvPN,EAuPY,IAvPZ,EAuPmvnCS,EAunzuDS,CA5NK;AAs8DZC,EAAAA,WAAW,EAAE;AAt8DD,CAAd;AAw8DA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzxBa;AA0xBXC,EAAAA,QAAQ,EAAG,8sfA1xBA;AA2xBXC,EAAAA,UAAU,EAAG,gBA3xBF;AA4xBX1P,EAAAA,KAAK,EAAE;AA5xBI,CAAb;AAgyBA,OAAO,MAAM2P,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Null;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc4,\n    Voter: ctc5\n    });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Bool;\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc14 = stdlib.T_Tuple([]);\n  const ctc15 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc16 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc17 = stdlib.T_Tuple([ctc1, ctc0, ctc15, ctc1, ctc16, ctc9, ctc9, ctc1, ctc1]);\n  const ctc18 = stdlib.T_Tuple([ctc1, ctc0, ctc15, ctc1, ctc16, ctc9, ctc9, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:34:23:application', stdlib.UInt_max, 19));\n  \n  const v22 = [v20, stdlib.checkedBigNumberify('./index.rsh:35:37:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:35:40:decimal', stdlib.UInt_max, 0)];\n  \n  const txn1 = await (ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), [ctc1, ctc2], [v18, v22], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:38:19:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v26 = txn1.time;\n    const v23 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n    const v63 = [v38, v38];\n    const v64 = [v24, v24];\n    const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n    const v59 = v63;\n    const v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n    const v61 = v64;\n    const v62 = v65;\n    const v615 = v26;\n    const v616 = v18;\n    const v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      \n      return v68;})()) {\n      sim_r.nextSt = stdlib.digest(ctc17, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc18, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n      const v351 = true;\n      const v352 = v65;\n      const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n      const v618 = v615;\n      const v619 = v616;\n      const v620 = v617;\n      \n      if ((() => {\n        const v359 = stdlib.gt(v338, v619);\n        const v361 = v359 ? v351 : false;\n        \n        return v361;})()) {\n        const v463 = stdlib.sub(v338, v619);\n        sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n        sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n        sim_r.isHalt = false;\n        }}\n    return sim_r;\n    })));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc3], false, false));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v463 = stdlib.sub(v338, v619);\n    \n    const v399 = ['Admin', null];\n    \n    const txn2 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v463, v618, v620, v399], [stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0), []], [ctc6], true, false, v463, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      \n      let v412;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v416 = v411[1];\n          const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v412 = v418;\n          \n          break;\n          }\n        }\n      const v422 = stdlib.add(v620, v412);\n      sim_r.txns.push({\n        amt: v412,\n        kind: 'to',\n        tok: undefined\n        });\n      let v424;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const v426 = stdlib.addressEq(v410, v23);\n          v424 = v426;\n          \n          break;\n          }\n        case 'Voter': {\n          const v429 = v411[1];\n          v424 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n        });\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const cv351 = false;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv618 = v423;\n          const cv619 = v618;\n          const cv620 = v422;\n          \n          (() => {\n            const v351 = cv351;\n            const v352 = cv352;\n            const v353 = cv353;\n            const v618 = cv618;\n            const v619 = cv619;\n            const v620 = cv620;\n            \n            if ((() => {\n              const v359 = stdlib.gt(v338, v619);\n              const v361 = v359 ? v351 : false;\n              \n              return v361;})()) {\n              const v463 = stdlib.sub(v338, v619);\n              sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }})();\n          break;\n          }\n        case 'Voter': {\n          const v436 = v411[1];\n          let v437;\n          const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v439) {\n            const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v444 = stdlib.sub(v422, v440);\n            sim_r.txns.push({\n              amt: v440,\n              kind: 'from',\n              to: v410,\n              tok: undefined\n              });\n            const v456 = [v352, v353, true];\n            v437 = v456;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v444;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          else {\n            const v449 = v352[v438];\n            const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v452 = stdlib.Array_set(v352, v438, v450);\n            const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v454 = stdlib.add(v353, v453);\n            const v457 = [v452, v454, true];\n            v437 = v457;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          break;\n          }\n        }\n      return sim_r;\n      })));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      \n      continue;\n      }\n    else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v416 = v411[1];\n          const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v412 = v418;\n          \n          break;\n          }\n        }\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const v426 = stdlib.addressEq(v410, v23);\n          v424 = v426;\n          \n          break;\n          }\n        case 'Voter': {\n          const v429 = v411[1];\n          v424 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Admin'\n        });\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const cv351 = false;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv618 = v423;\n          const cv619 = v618;\n          const cv620 = v422;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v618 = cv618;\n          v619 = cv619;\n          v620 = cv620;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v436 = v411[1];\n          let v437;\n          const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v439) {\n            const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v444 = stdlib.sub(v422, v440);\n            ;\n            const v456 = [v352, v353, true];\n            v437 = v456;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v444;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          else {\n            const v449 = v352[v438];\n            const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v452 = stdlib.Array_set(v352, v438, v450);\n            const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v454 = stdlib.add(v353, v453);\n            const v457 = [v452, v454, true];\n            v437 = v457;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const v488 = v352.reduce((v480, v481) => {\n    const v484 = stdlib.gt(v481, v480);\n    const v486 = v484 ? v481 : v480;\n    \n    return v486;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v497 = ['None', null];\n  const v523 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v524 = v352[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v546 = stdlib.eq(v523, v488);\n  const v550 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v551 = [v550, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v553 = [v497, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v554 = v546 ? v551 : v553;\n  const v559 = v554[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v560 = v554[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v561;\n  switch (v559[0]) {\n    case 'None': {\n      \n      const v564 = stdlib.eq(v524, v488);\n      const v568 = stdlib.add(v560, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v569 = ['Some', v560];\n      const v570 = [v569, v560];\n      const v571 = [v559, v568];\n      const v572 = v564 ? v570 : v571;\n      v561 = v572;\n      \n      break;\n      }\n    case 'Some': {\n      const v575 = v559[1];\n      v561 = v554;\n      \n      break;\n      }\n    }\n  const v580 = v561[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v586;\n  switch (v580[0]) {\n    case 'None': {\n      \n      v586 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v590 = v580[1];\n      v586 = v590;\n      \n      break;\n      }\n    }\n  const v596 = v61[v586];\n  const v597 = v596[stdlib.checkedBigNumberify('./index.rsh:159:55:array ref', stdlib.UInt_max, 2)];\n  const v600 = v596[stdlib.checkedBigNumberify('./index.rsh:160:57:array ref', stdlib.UInt_max, 0)];\n  \n  \n  const txn2 = await (ctc.sendrecv(6, 3, stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1, ctc1, ctc0, ctc1], [v23, v618, v620, v597, v600, v586], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 5), v23, v618, v620]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:164:19:dot', stdlib.UInt_max, 5), v23, v620]);\n    const [v602, v603, v604] = txn2.data;\n    const v607 = txn2.time;\n    const v601 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v606 = stdlib.addressEq(v23, v601);\n    stdlib.assert(v606, {\n      at: './index.rsh:164:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      amt: v620,\n      kind: 'from',\n      to: v603,\n      tok: undefined\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc14, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc14, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:167:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1]);\n  const ctc5 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Bool;\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc15 = stdlib.T_Null;\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc17 = stdlib.T_Data({\n    Admin: ctc15,\n    Voter: ctc16\n    });\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc2], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const v181 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 180));\n    const v184 = stdlib.protect(ctc1, await interact.getParams(v181), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v192 = ['None', null];\n    const v218 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v219 = v59[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v241 = stdlib.addressEq(v218, v181);\n    const v245 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v246 = [v245, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v248 = [v192, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v249 = v241 ? v246 : v248;\n    const v254 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v255 = v249[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v256;\n    switch (v254[0]) {\n      case 'None': {\n        \n        const v259 = stdlib.addressEq(v219, v181);\n        const v263 = stdlib.add(v255, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v264 = ['Some', v255];\n        const v265 = [v264, v255];\n        const v266 = [v254, v263];\n        const v267 = v259 ? v265 : v266;\n        v256 = v267;\n        \n        break;\n        }\n      case 'Some': {\n        const v270 = v254[1];\n        v256 = v249;\n        \n        break;\n        }\n      }\n    const v275 = v256[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v281;\n    switch (v275[0]) {\n      case 'None': {\n        \n        v281 = stdlib.checkedBigNumberify('./index.rsh:39:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v285 = v275[1];\n        v281 = v285;\n        \n        break;\n        }\n      }\n    \n    const v291 = [v184, v181];\n    \n    const txn2 = await (ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc3], [v23, v59, v60, v61, v62, v65, v615, v617, v291], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc3], true, false, false, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n      const [v295] = txn2.data;\n      const v299 = txn2.time;\n      const v294 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v303 = [v301, v60, v302];\n      const v305 = stdlib.Array_set(v61, v60, v303);\n      const v308 = stdlib.Array_set(v59, v60, v301);\n      const v321 = v59.reduce((v314, v315) => {\n        const v317 = stdlib.addressEq(v301, v315);\n        const v318 = v317 ? true : false;\n        const v319 = v314 ? v314 : v318;\n        \n        return v319;}, false)\n      const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v327 = stdlib.Array_set(v62, v60, v302);\n      const v328 = [v61, v59, v60, v62];\n      const v329 = [v305, v308, v324, v327];\n      const v330 = v321 ? v328 : v329;\n      const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv59 = v333;\n      const cv60 = v334;\n      const cv61 = v332;\n      const cv62 = v335;\n      const cv615 = v299;\n      const cv616 = v615;\n      const cv617 = v617;\n      \n      (() => {\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v62 = cv62;\n        const v615 = cv615;\n        const v616 = cv616;\n        const v617 = cv617;\n        \n        if ((() => {\n          const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          \n          return v68;})()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v615, v617]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v23, v59, v60, v61, v62, v65, v617]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n          const v351 = true;\n          const v352 = v65;\n          const v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n          const v618 = v615;\n          const v619 = v616;\n          const v620 = v617;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }}})();\n      return sim_r;\n      })));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v463 = stdlib.sub(v338, v619);\n    const txn2 = await (ctc.recv(7, 1, [ctc17], false, v463));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc10, ctc7, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      \n      continue;\n      }\n    else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v416 = v411[1];\n          const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v412 = v418;\n          \n          break;\n          }\n        }\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const v426 = stdlib.addressEq(v410, v23);\n          v424 = v426;\n          \n          break;\n          }\n        case 'Voter': {\n          const v429 = v411[1];\n          v424 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Nominee'\n        });\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const cv351 = false;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv618 = v423;\n          const cv619 = v618;\n          const cv620 = v422;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v618 = cv618;\n          v619 = cv619;\n          v620 = cv620;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v436 = v411[1];\n          let v437;\n          const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v439) {\n            const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v444 = stdlib.sub(v422, v440);\n            ;\n            const v456 = [v352, v353, true];\n            v437 = v456;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v444;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          else {\n            const v449 = v352[v438];\n            const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v452 = stdlib.Array_set(v352, v438, v450);\n            const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v454 = stdlib.add(v353, v453);\n            const v457 = [v452, v454, true];\n            v437 = v457;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const txn2 = await (ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false));\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  ;\n  return;\n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc3 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc5 = stdlib.T_Null;\n  const ctc6 = stdlib.T_Data({\n    Admin: ctc5,\n    Voter: ctc4\n    });\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Bool;\n  const ctc9 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc0, ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc2], false, false));\n  const [v24] = txn1.data;\n  const v26 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const v38 = v24[stdlib.checkedBigNumberify('./index.rsh:43:77:array ref', stdlib.UInt_max, 0)];\n  const v63 = [v38, v38];\n  const v64 = [v24, v24];\n  const v65 = [stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:103:decimal', stdlib.UInt_max, 0)];\n  let v59 = v63;\n  let v60 = stdlib.checkedBigNumberify('./index.rsh:43:82:decimal', stdlib.UInt_max, 0);\n  let v61 = v64;\n  let v62 = v65;\n  let v615 = v26;\n  let v616 = v18;\n  let v617 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v68 = stdlib.le(v60, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v68;})()) {\n    const txn2 = await (ctc.recv(9, 1, [ctc3], false, false));\n    const [v295] = txn2.data;\n    const v299 = txn2.time;\n    const v294 = txn2.from;\n    ;\n    const v301 = v295[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v302 = v295[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v303 = [v301, v60, v302];\n    const v305 = stdlib.Array_set(v61, v60, v303);\n    const v308 = stdlib.Array_set(v59, v60, v301);\n    const v321 = v59.reduce((v314, v315) => {\n      const v317 = stdlib.addressEq(v301, v315);\n      const v318 = v317 ? true : false;\n      const v319 = v314 ? v314 : v318;\n      \n      return v319;}, false)\n    const v324 = stdlib.add(v60, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v327 = stdlib.Array_set(v62, v60, v302);\n    const v328 = [v61, v59, v60, v62];\n    const v329 = [v305, v308, v324, v327];\n    const v330 = v321 ? v328 : v329;\n    const v332 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v333 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v334 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v335 = v330[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv59 = v333;\n    const cv60 = v334;\n    const cv61 = v332;\n    const cv62 = v335;\n    const cv615 = v299;\n    const cv616 = v615;\n    const cv617 = v617;\n    \n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v62 = cv62;\n    v615 = cv615;\n    v616 = cv616;\n    v617 = cv617;\n    \n    continue;\n    }\n  const v338 = stdlib.add(v616, stdlib.checkedBigNumberify('./index.rsh:101:63:decimal', stdlib.UInt_max, 1500000));\n  let v351 = true;\n  let v352 = v65;\n  let v353 = stdlib.checkedBigNumberify('./index.rsh:103:88:decimal', stdlib.UInt_max, 0);\n  let v618 = v615;\n  let v619 = v616;\n  let v620 = v617;\n  \n  while ((() => {\n    const v359 = stdlib.gt(v338, v619);\n    const v361 = v359 ? v351 : false;\n    \n    return v361;})()) {\n    const v463 = stdlib.sub(v338, v619);\n    const v383 = v62[stdlib.checkedBigNumberify('./index.rsh:108:81:array ref', stdlib.UInt_max, 0)];\n    const v384 = v62[stdlib.checkedBigNumberify('./index.rsh:108:91:array ref', stdlib.UInt_max, 1)];\n    const v385 = v352[stdlib.checkedBigNumberify('./index.rsh:108:102:array ref', stdlib.UInt_max, 0)];\n    const v386 = v352[stdlib.checkedBigNumberify('./index.rsh:108:111:array ref', stdlib.UInt_max, 1)];\n    const v387 = [v383, v384];\n    const v388 = [v385, v386];\n    const v389 = stdlib.protect(ctc4, await interact.shouldBuyTicket(v387, v388), {\n      at: './index.rsh:108:73:application',\n      fs: ['at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:107:25:function exp)', 'at ./index.rsh:103:64:application call to \"runVoter0\" (defined at: ./index.rsh:103:64:function exp)', 'at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    \n    const v404 = ['Voter', v389];\n    const v407 = v389[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n    \n    const txn2 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1, ctc6], [v23, v338, v351, v352, v353, v463, v618, v620, v404], [v407, []], [ctc6], true, false, v463, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      \n      let v412;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v416 = v411[1];\n          const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v412 = v418;\n          \n          break;\n          }\n        }\n      const v422 = stdlib.add(v620, v412);\n      sim_r.txns.push({\n        amt: v412,\n        kind: 'to',\n        tok: undefined\n        });\n      let v424;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const v426 = stdlib.addressEq(v410, v23);\n          v424 = v426;\n          \n          break;\n          }\n        case 'Voter': {\n          const v429 = v411[1];\n          v424 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n        });\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const cv351 = false;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv618 = v423;\n          const cv619 = v618;\n          const cv620 = v422;\n          \n          (() => {\n            const v351 = cv351;\n            const v352 = cv352;\n            const v353 = cv353;\n            const v618 = cv618;\n            const v619 = cv619;\n            const v620 = cv620;\n            \n            if ((() => {\n              const v359 = stdlib.gt(v338, v619);\n              const v361 = v359 ? v351 : false;\n              \n              return v361;})()) {\n              const v463 = stdlib.sub(v338, v619);\n              sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n              sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n              sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n              sim_r.isHalt = false;\n              }})();\n          break;\n          }\n        case 'Voter': {\n          const v436 = v411[1];\n          let v437;\n          const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v439) {\n            const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v444 = stdlib.sub(v422, v440);\n            sim_r.txns.push({\n              amt: v440,\n              kind: 'from',\n              to: v410,\n              tok: undefined\n              });\n            const v456 = [v352, v353, true];\n            v437 = v456;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v444;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          else {\n            const v449 = v352[v438];\n            const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v452 = stdlib.Array_set(v352, v438, v450);\n            const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v454 = stdlib.add(v353, v453);\n            const v457 = [v452, v454, true];\n            v437 = v457;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            \n            (() => {\n              const v351 = cv351;\n              const v352 = cv352;\n              const v353 = cv353;\n              const v618 = cv618;\n              const v619 = cv619;\n              const v620 = cv620;\n              \n              if ((() => {\n                const v359 = stdlib.gt(v338, v619);\n                const v361 = v359 ? v351 : false;\n                \n                return v361;})()) {\n                const v463 = stdlib.sub(v338, v619);\n                sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n                sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n                sim_r.isHalt = false;\n                }})();}\n          break;\n          }\n        }\n      return sim_r;\n      })));\n    if (txn2.didTimeout) {\n      \n      const txn3 = await (ctc.sendrecv(8, 0, stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 6), [ctc0, ctc1, ctc8, ctc9, ctc1, ctc1, ctc1, ctc1], [v23, v338, v351, v352, v353, v463, v618, v620], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:dot', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n        const [] = txn3.data;\n        const v468 = txn3.time;\n        const v466 = txn3.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv351 = v351;\n        const cv352 = v352;\n        const cv353 = v353;\n        const cv618 = v468;\n        const cv619 = v618;\n        const cv620 = v620;\n        \n        (() => {\n          const v351 = cv351;\n          const v352 = cv352;\n          const v353 = cv353;\n          const v618 = cv618;\n          const v619 = cv619;\n          const v620 = cv620;\n          \n          if ((() => {\n            const v359 = stdlib.gt(v338, v619);\n            const v361 = v359 ? v351 : false;\n            \n            return v361;})()) {\n            const v463 = stdlib.sub(v338, v619);\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 4), v23, v338, v351, v352, v353, v463, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:103:64:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v618, v620]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 5), v23, v620]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:156:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn3.data;\n      const v468 = txn3.time;\n      const v466 = txn3.from;\n      ;\n      const cv351 = v351;\n      const cv352 = v352;\n      const cv353 = v353;\n      const cv618 = v468;\n      const cv619 = v618;\n      const cv620 = v620;\n      \n      v351 = cv351;\n      v352 = cv352;\n      v353 = cv353;\n      v618 = cv618;\n      v619 = cv619;\n      v620 = cv620;\n      \n      continue;\n      }\n    else {\n      const [v411] = txn2.data;\n      const v423 = txn2.time;\n      const v410 = txn2.from;\n      let v412;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          v412 = stdlib.checkedBigNumberify('./index.rsh:133:35:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Voter': {\n          const v416 = v411[1];\n          const v418 = v416[stdlib.checkedBigNumberify('./index.rsh:115:38:array ref', stdlib.UInt_max, 1)];\n          v412 = v418;\n          \n          break;\n          }\n        }\n      const v422 = stdlib.add(v620, v412);\n      ;\n      let v424;\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const v426 = stdlib.addressEq(v410, v23);\n          v424 = v426;\n          \n          break;\n          }\n        case 'Voter': {\n          const v429 = v411[1];\n          v424 = true;\n          \n          break;\n          }\n        }\n      stdlib.assert(v424, {\n        at: './index.rsh:103:64:application',\n        fs: [],\n        msg: null,\n        who: 'Voter'\n        });\n      switch (v411[0]) {\n        case 'Admin': {\n          \n          const cv351 = false;\n          const cv352 = v352;\n          const cv353 = v353;\n          const cv618 = v423;\n          const cv619 = v618;\n          const cv620 = v422;\n          \n          v351 = cv351;\n          v352 = cv352;\n          v353 = cv353;\n          v618 = cv618;\n          v619 = cv619;\n          v620 = cv620;\n          \n          continue;\n          break;\n          }\n        case 'Voter': {\n          const v436 = v411[1];\n          let v437;\n          const v438 = v436[stdlib.checkedBigNumberify('./index.rsh:117:35:array ref', stdlib.UInt_max, 0)];\n          const v439 = stdlib.ge(v438, stdlib.checkedBigNumberify('./index.rsh:117:40:decimal', stdlib.UInt_max, 2));\n          if (v439) {\n            const v440 = v436[stdlib.checkedBigNumberify('./index.rsh:118:45:array ref', stdlib.UInt_max, 1)];\n            const v444 = stdlib.sub(v422, v440);\n            ;\n            const v456 = [v352, v353, true];\n            v437 = v456;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v444;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          else {\n            const v449 = v352[v438];\n            const v450 = stdlib.add(v449, stdlib.checkedBigNumberify('./index.rsh:122:76:decimal', stdlib.UInt_max, 1));\n            const v452 = stdlib.Array_set(v352, v438, v450);\n            const v453 = v436[stdlib.checkedBigNumberify('./index.rsh:122:98:array ref', stdlib.UInt_max, 1)];\n            const v454 = stdlib.add(v353, v453);\n            const v457 = [v452, v454, true];\n            v437 = v457;\n            const v458 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 0)];\n            const v459 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 1)];\n            const v460 = v437[stdlib.checkedBigNumberify('./index.rsh:103:19:array', stdlib.UInt_max, 2)];\n            const cv351 = v460;\n            const cv352 = v458;\n            const cv353 = v459;\n            const cv618 = v423;\n            const cv619 = v618;\n            const cv620 = v422;\n            \n            v351 = cv351;\n            v352 = cv352;\n            v353 = cv353;\n            v618 = cv618;\n            v619 = cv619;\n            v620 = cv620;\n            \n            continue;}\n          break;\n          }\n        }}\n    }\n  const txn2 = await (ctc.recv(6, 3, [ctc1, ctc0, ctc1], false, false));\n  const [v602, v603, v604] = txn2.data;\n  const v607 = txn2.time;\n  const v601 = txn2.from;\n  ;\n  const v606 = stdlib.addressEq(v23, v601);\n  stdlib.assert(v606, {\n    at: './index.rsh:164:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  ;\n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 137\n    }, null, null, null, null, {\n    count: 11,\n    size: 177\n    }, {\n    count: 14,\n    size: 187\n    }, {\n    count: 13,\n    size: 170\n    }, {\n    count: 14,\n    size: 369\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:38:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nsubstring 0 32\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 254\nload 254\nconcat\nconcat\nint 0\nitob\nconcat\nload 255\nload 255\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 252\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 252\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 251\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\ngtxn 0 Sender\nconcat\nload 252\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nload 251\nitob\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:164:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:164:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 254\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l1\nint 0\nstore 244\nl1:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l2\nload 248\nsubstring 1 17\ndup\nstore 243\nsubstring 8 16\nbtoi\nstore 244\nl2:\nl0:\nload 249\nload 244\n+\nstore 243\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 244\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l4\ngtxn 0 Sender\nload 255\n==\nstore 242\nl4:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l5\nload 248\nsubstring 1 17\nstore 241\nint 1\nstore 242\nl5:\nl3:\n// Nothing\n// \"./index.rsh:103:64:application\"\n// \"[]\"\nload 242\nassert\nload 248\nint 0\ngetbyte\nint 0\n==\nbz l7\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\n!\nint 0\n&&\nbz l8\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 241\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 241\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl7:\nload 248\nint 0\ngetbyte\nint 1\n==\nbz l9\nload 248\nsubstring 1 17\ndup\nstore 241\nsubstring 0 8\nbtoi\ndup\nstore 239\nint 2\n>=\nbz l10\nload 241\nsubstring 8 16\nbtoi\nstore 238\nload 243\nload 238\n-\nstore 237\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 238\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 0 16\nstore 236\nload 240\nsubstring 16 24\nbtoi\nstore 235\nload 240\nsubstring 24 25\nbtoi\nstore 234\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 233\nload 234\n&&\ndup\nstore 232\nbz l11\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 231\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 234\nitob // bool\nsubstring 7 8\nconcat\nload 236\nconcat\nload 235\nitob\nconcat\nload 231\nitob\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 231\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl11:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 237\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl10:\nload 252\nint 0\nint 8\nload 239\n*\nsubstring3\nload 252\nint 8\nload 239\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 239\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 241\nsubstring 8 16\nbtoi\n+\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\ndup\nstore 240\nsubstring 24 25\nbtoi\nstore 238\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 237\nload 238\n&&\ndup\nstore 236\nbz l12\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 235\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 238\nitob // bool\nsubstring 7 8\nconcat\nload 240\nsubstring 0 16\nconcat\nload 240\nsubstring 16 24\nconcat\nload 235\nitob\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 235\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl12:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 243\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl9:\nl6:\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:103:64:dot\"\n// \"[at ./index.rsh:103:64:application call to [unknown function] (defined at: ./index.rsh:103:64:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nload 253\n&&\nbz l0\nload 254\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\ngtxna 0 ApplicationArgs 5\nbtoi\nint 1500000\n+\ndup\nstore 242\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l1\nload 242\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 242\nitob\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 250\nconcat\nint 0\nitob\nconcat\nload 241\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl1:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v602\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v603\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v604\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v411\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v615\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v617\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v24\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v602\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v603\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v604\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"enum _enum_T23\",\n                    \"name\": \"which\",\n                    \"type\": \"uint8\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_Admin\",\n                    \"type\": \"bool\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem0\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"elem1\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct T22\",\n                    \"name\": \"_Voter\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct T23\",\n                \"name\": \"v411\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v351\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v352\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v353\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v463\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v618\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v620\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v59\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v61\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v62\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v65\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v615\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v617\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T29\",\n                \"name\": \"v295\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T30\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055611ee3806100826000396000f3fe60806040526004361061004e5760003560e01c8063404a34781461005a5780637ad466c21461006f578063b87338b014610082578063db8500b714610095578063ec2cc884146100a857610055565b3661005557005b600080fd5b61006d6100683660046118da565b6100bb565b005b61006d61007d366004611942565b610214565b61006d6100903660046118ec565b6103a2565b61006d6100a33660046118c8565b6107cd565b61006d6100b636600461187e565b610de2565b6040516100cf906004908390602001611d3f565b6040516020818303038152906040528051906020012060001c600054146100f557600080fd5b6000805561010b60c082013560e0830135611e4d565b43101561011757600080fd5b341561012257600080fd5b7fb91e5fee7d80cd4df9272e91ff7413963d1ef9dca2c3e540f3315850b08b2a8e816040516101519190611bef565b60405180910390a16101616113ea565b61016e6020830183611829565b81516001600160a01b0390911690528051602080840135910152610198606083016040840161184a565b60208201519015159052604080518082018252906060840190600290839083908082843760009201919091525050506020808301805190910191909152805160a080850135604090920191909152815143606090910152815160e0850135608090910152905161010084013591015261021081610ed6565b5050565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461025157600080fd5b6000805561025d611418565b341561026857600080fd5b6102786040830160208401611829565b81516001600160a01b039190911690526102986040830160208401611829565b81516001600160a01b03919091166020918201526102be903684900384019084016118fe565b602082810151919091526102da903684900384019084016118fe565b60208281015181019190915260408083018051600090819052905190920191909152517fa6e69dadb79658a46c005a5f88a8cb73e8d968dc2d6bcf01c1f3f07d907132d79061032a908490611c55565b60405180910390a161033a611445565b80513390526040808301805183516020908101919091528451818501805191909152805160009083018190529186015181519094019390935290518251606001528151436080909101528151853560a090910152905160c0015261039d8161100c565b505050565b6040516103b6906002908390602001611c73565b6040516020818303038152906040528051906020012060001c600054146103dc57600080fd5b600080556103e8611465565b34156103f357600080fd5b61040561024083016102208401611829565b81516001600160a01b03909116905280516060830135602091820152815161020084013560409091015260009082018190525b60028110156104ea5760208301816002811061046457634e487b7160e01b600052603260045260246000fd5b6020020160208101906104779190611829565b6001600160a01b0316604083015260208201516104cb5760408201516001600160a01b03166104ae61024085016102208601611829565b6001600160a01b0316146104c35760006104c6565b60015b6104d1565b81602001515b15156020830152806104e281611e7c565b915050610438565b50602081015115156060820152604080518082019091526080830160026000835b8282101561053757610528606083028501368190038101906118fe565b8152602001906001019061050b565b50505050608082015152604080518082018252906020840190600290839083908082843760009201919091525050506080820180516020019190915251606083013560409182015280518082018252906101408401906002908390839080828437600092018290525060808086015160600194909452604080518082019091526106059490935086019150600290835b828210156105f3576105e4606083028501368190038101906118fe565b815260200190600101906105c7565b50508451606087013592509050611115565b60a08201515260408051808201825261064f91602085019060029083908390808284376000920191909152505050606084013561064a61024086016102208701611829565b6111b3565b60a08201516020015261066760016060840135611e4d565b60a0820151604090810191909152805180820182526106ac9161014085019060029083908390808284376000920191909152505050606084013561020085013561126d565b8160a001516060018190525080606001516106cb578060a001516106d1565b80608001515b60c08201526040517f8400c30339f6628441ca54ee41b7d90613faa6c375dabda844e99fb7fe65a6bf90610706908490611c19565b60405180910390a1610716611445565b6107236020840184611829565b81516001600160a01b0390911690526040805180820182529061018085019060029083908390808284376000920191909152505082516020908101929092525060c080840180518301518385018051919091528151604090810151825190950194909452815151815190940193909352516060908101518351909101528151436080919091015281516101c086013560a0919091015290516101e085013591015261039d8161100c565b6040516107e1906004908390602001611d3f565b6040516020818303038152906040528051906020012060001c6000541461080757600080fd5b600080556108136114c6565b61082560c083013560e0840135611e4d565b431061083057600080fd5b600061084461014084016101208501611864565b600181111561086357634e487b7160e01b600052602160045260246000fd5b141561087257600081526108cb565b600161088661014084016101208501611864565b60018111156108a557634e487b7160e01b600052602160045260246000fd5b14156108cb576108be3683900383016101608401611895565b6020808301829052015181525b80516108dc90610100840135611e4d565b6040820152805134146108ee57600080fd5b600061090261014084016101208501611864565b600181111561092157634e487b7160e01b600052602160045260246000fd5b1415610949576109346020830183611829565b6001600160a01b0316331460608201526109a2565b600161095d61014084016101208501611864565b600181111561097c57634e487b7160e01b600052602160045260246000fd5b14156109a2576109953683900383016101608401611895565b6080820152600160608201525b80606001516109b057600080fd5b60006109c461014084016101208501611864565b60018111156109e357634e487b7160e01b600052602160045260246000fd5b1415610ac8577fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c82604051610a189190611b7f565b60405180910390a1610a286113ea565b610a356020840184611829565b81516001600160a01b03909116905280516020808501359181019190915281015160009052604080518082018252906060850190600290839083908082843760009201919091525050506020808301805190910191909152805160a080860135604092830152825143606090910152825160e08701356080909101529084015191510152610ac281610ed6565b50610210565b6001610adc61014084016101208501611864565b6001811115610afb57634e487b7160e01b600052602160045260246000fd5b141561021057610b143683900383016101608401611895565b60a0820181905251600211610c7d5760a081015160200151604051339180156108fc02916000818181858888f19350505050158015610b57573d6000803e3d6000fd5b506040805180820182529060608401906002908390839080828437600092019190915250505060e08201805191909152805160a084013560209091015280516001604091820152905160c0830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610bd3908490611b7f565b60405180910390a1610be36113ea565b610bf06020840184611829565b81516001600160a01b03909116905280516020808501359181019190915260c0830180516040908101518385018051911515909152825151815185015291518301518251820152815143606090910152905160e08601356080919091015260a08401519091015190830151610c659190611e65565b602082015160a00152610c7781610ed6565b50610ddd565b604080518082018252610ce49160608501906002908390839080828437600092019190915250505060a0830151516001606086018260028110610cd057634e487b7160e01b600052603260045260246000fd5b6020020135610cdf9190611e4d565b61126d565b6101008201515260a08082015160200151610d0191840135611e4d565b610100820180516020019190915280516001604091820152905160c0830152517fef0cdc236e24a2c914734abcd4ef0cac861779e39e2a1847c5f3b60d8f5d6f0c90610d4e908490611b7f565b60405180910390a1610d5e6113ea565b610d6b6020840184611829565b81516001600160a01b03909116905280516020808501359181019190915260c083018051604090810151838501805191151590915282515181518501529151909201518151830152805143606090910152805160e08601356080919091015290830151905160a00152610ac281610ed6565b610210565b604051610df6906005908390602001611dc9565b6040516020818303038152906040528051906020012060001c60005414610e1c57600080fd5b600080553415610e2b57600080fd5b33610e396020830183611829565b6001600160a01b031614610e4c57600080fd5b610e5c60a0820160808301611829565b604080516001600160a01b0392909216919083013580156108fc02916000818181858888f19350505050158015610e97573d6000803e3d6000fd5b507f83e534428f92bfcb95a8170bbd5cd7a87ec89ee978b81e96168024da7cb7429d81604051610ec79190611b3d565b60405180910390a16000805533ff5b60408051602081019091526000815281602001516080015182600001516020015111610f03576000610f0a565b6020820151515b15610fca57816020015160800151826000015160200151610f2b9190611e65565b8152610f35611571565b8251516001600160a01b031681528251602090810151818301528084018051511515604080850191909152815183015160608086019190915282518201516080860152855160a08087019190915283519091015160c086015291519091015160e084015251610fa991600491849101611d54565b60408051601f19818403018152919052805160209091012060005550610210565b610fd26115c7565b82515181516001600160a01b03909116905260208084018051606001518351909201919091525160a0015181516040015261039d816112dd565b6001816020015160200151116110ba576110246115f9565b8151516001600160a01b031681526020808301805151828401528051820151604080850191909152815181015160608086019190915282510151608080860191909152855184015160a08601528251015160c08086019190915291519091015160e08401525161109991600291849101611c88565b60408051601f19818403018152919052805160209091012060005550611112565b6110c261165f565b81515181516001600160a01b0390911690528151602090810151825182015282018051608090810151835160400152815160a00151835160600152905160c001518251909101526102108161135f565b50565b61111d611672565b60005b60028110156111855784816002811061114957634e487b7160e01b600052603260045260246000fd5b602002015182826002811061116e57634e487b7160e01b600052603260045260246000fd5b60200201528061117d81611e7c565b915050611120565b50818184600281106111a757634e487b7160e01b600052603260045260246000fd5b60200201529392505050565b6111bb6116c4565b60005b6002811015611231578481600281106111e757634e487b7160e01b600052603260045260246000fd5b602002015182826002811061120c57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201528061122981611e7c565b9150506111be565b508181846002811061125357634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209290920201529392505050565b6112756116c4565b60005b6002811015611185578481600281106112a157634e487b7160e01b600052603260045260246000fd5b60200201518282600281106112c657634e487b7160e01b600052603260045260246000fd5b6020020152806112d581611e7c565b915050611278565b61130a604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8151516001600160a01b031681528151602090810151818301528251604090810151818401525161134091600591849101611ddd565b60408051601f1981840301815291905280516020909101206000555050565b6113676113ea565b81515181516001600160a01b03909116905281516060015161138d906216e36090611e4d565b815160209081019190915280820180516001905283518201518151909201919091528051600060409182015283510151815160609081019190915283510151815160809081019190915283510151905160a0015261021081610ed6565b6040805160808101825260009181018281526060820192909252908152602081016114136116e2565b905290565b604051806060016040528061142b6116c4565b8152602001611438611672565b81526020016114136116c4565b60405180604001604052806114586116fe565b8152602001611413611721565b6040805161014081018252600060e08201818152610100830182905261012083018290528252602082018190529181018290526060810191909152608081016114ac611770565b81526020016114b9611770565b8152602001611413611770565b604051806101200160405280600081526020016114f6604051806040016040528060008152602001600081525090565b815260200160008152602001600015158152602001611528604051806040016040528060008152602001600081525090565b815260200161154a604051806040016040528060008152602001600081525090565b81526020016115576117a4565b81526020016115646117a4565b81526020016114136117a4565b60405180610100016040528060006001600160a01b03168152602001600081526020016000151581526020016115a56116c4565b8152602001600081526020016000815260200160008152602001600081525090565b6040805160a08101825260009181018281526060820183905260808201929092529081905b8152600060209091015290565b60405180610100016040528060006001600160a01b0316815260200161161d6116c4565b815260200160008152602001611631611672565b815260200161163e6116c4565b815260200161164b6116c4565b815260200160008152602001600081525090565b60405180604001604052806115ec6117cb565b60405180604001604052806002905b6116ae604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816116815790505090565b60405180604001604052806002906020820280368337509192915050565b6040518060c001604052806000151581526020016115a56116c4565b604051806040016040528060006001600160a01b031681526020016114136116c4565b6040518060e001604052806117346116c4565b815260200160008152602001611748611672565b81526020016117556116c4565b81526020016000815260200160008152602001600081525090565b6040518060800160405280611783611672565b81526020016117906116c4565b8152602001600081526020016114136116c4565b60405180606001604052806117b76116c4565b815260006020820181905260409091015290565b6040518060a0016040528060006001600160a01b031681526020016117556116c4565b80356001600160a01b038116811461180557600080fd5b919050565b8035801515811461180557600080fd5b80356002811061180557600080fd5b60006020828403121561183a578081fd5b611843826117ee565b9392505050565b60006020828403121561185b578081fd5b6118438261180a565b600060208284031215611875578081fd5b6118438261181a565b600060c0828403121561188f578081fd5b50919050565b6000604082840312156118a6578081fd5b6118b06040611e0e565b82358152602083013560208201528091505092915050565b60006101a0828403121561188f578081fd5b6000610140828403121561188f578081fd5b6000610240828403121561188f578081fd5b60006060828403121561190f578081fd5b6119196060611e0e565b611922836117ee565b815260208301356020820152604083013560408201528091505092915050565b60006080828403121561188f578081fd5b8060005b600281101561197d5761196a8483611b14565b6060938401939190910190600101611957565b50505050565b8060005b600281101561197d576119b884835180516001600160a01b0316825260208082015190830152604090810151910152565b6060939093019260209190910190600101611987565b6040818337600060408301525050565b8060005b600281101561197d5781518452602093840193909101906001016119e2565b6001600160a01b03611a12826117ee565b168252602080830181830160005b6002811015611a5557611a4783611a36846117ee565b6001600160a01b0316815260200190565b925090830190600101611a20565b5050505060608101356060830152611a736080830160808301611953565b610140611a848184018284016119ce565b50610180611a968184018284016119ce565b506101c081810135908301526101e090810135910152565b6001600160a01b03611abf826117ee565b16825260208101356020830152611ad86040820161180a565b15156040830152604060608201606084013760a0818101359083015260c0808201359083015260e0808201359083015261010090810135910152565b6001600160a01b03611b25826117ee565b16825260208181013590830152604090810135910152565b60c08101611b4b8284611b14565b606083810135908301526001600160a01b03611b69608085016117ee565b16608083015260a083013560a083015292915050565b6101a08101611b8e8284611aae565b610120611b9c81850161181a565b60028110611bba57634e487b7160e01b600052602160045260246000fd5b90830152610140611bcc84820161180a565b151590830152610160838101359083015261018092830135929091019190915290565b6101408101611bfe8284611aae565b610120611c0c81850161180a565b1515818401525092915050565b6102408101611c288284611a01565b61020083810135908301526102206001600160a01b03611c498286016117ee565b16818401525092915050565b8135815260808101611c6d6020808401908501611b14565b92915050565b82815261022081016118436020830184611a01565b82815281516001600160a01b031660208083019190915282810151610220830191906040840160005b6002811015611cd95782516001600160a01b0316825260208201928401929150600101611cb1565b50505050604083015160808301526060830151611cf960a0840182611983565b506080830151611d0d6101608401826119de565b5060a0830151611d216101a08401826119de565b5060c08301516101e083015260e08301516102008301529392505050565b82815261014081016118436020830184611aae565b60006101408201905083825260018060a01b038351166020830152602083015160408301526040830151151560608301526060830151611d9760808401826119de565b50608083015160c083015260a083015160e083015260c083015161010083015260e08301516101208301529392505050565b828152608081016118436020830184611b14565b82815260808101611843602083018480516001600160a01b0316825260208082015190830152604090810151910152565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e4557634e487b7160e01b600052604160045260246000fd5b604052919050565b60008219821115611e6057611e60611e97565b500190565b600082821015611e7757611e77611e97565b500390565b6000600019821415611e9057611e90611e97565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d1c307e09e3bae37acfbe85e7d6c60715dc771b8d3fd90c6744d54d0e659123c64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}