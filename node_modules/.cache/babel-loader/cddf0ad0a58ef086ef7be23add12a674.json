{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDataView = exports.ensureUint8Array = void 0;\n\nfunction ensureUint8Array(buffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexports.ensureUint8Array = ensureUint8Array;\n\nfunction createDataView(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n\nexports.createDataView = createDataView;","map":{"version":3,"sources":["../../src/utils/typedArrays.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAgB,gBAAhB,CAAiC,MAAjC,EAAuG;AACrG,MAAI,MAAM,YAAY,UAAtB,EAAkC;AAChC,WAAO,MAAP;AACD,GAFD,MAEO,IAAI,WAAW,CAAC,MAAZ,CAAmB,MAAnB,CAAJ,EAAgC;AACrC,WAAO,IAAI,UAAJ,CAAe,MAAM,CAAC,MAAtB,EAA8B,MAAM,CAAC,UAArC,EAAiD,MAAM,CAAC,UAAxD,CAAP;AACD,GAFM,MAEA,IAAI,MAAM,YAAY,WAAtB,EAAmC;AACxC,WAAO,IAAI,UAAJ,CAAe,MAAf,CAAP;AACD,GAFM,MAEA;AACL;AACA,WAAO,UAAU,CAAC,IAAX,CAAgB,MAAhB,CAAP;AACD;AACF;;AAXD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAaA,SAAgB,cAAhB,CAA+B,MAA/B,EAAwF;AACtF,MAAI,MAAM,YAAY,WAAtB,EAAmC;AACjC,WAAO,IAAI,QAAJ,CAAa,MAAb,CAAP;AACD;;AAED,QAAM,UAAU,GAAG,gBAAgB,CAAC,MAAD,CAAnC;AACA,SAAO,IAAI,QAAJ,CAAa,UAAU,CAAC,MAAxB,EAAgC,UAAU,CAAC,UAA3C,EAAuD,UAAU,CAAC,UAAlE,CAAP;AACD;;AAPD,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.ensureUint8Array = void 0;\nfunction ensureUint8Array(buffer) {\n    if (buffer instanceof Uint8Array) {\n        return buffer;\n    }\n    else if (ArrayBuffer.isView(buffer)) {\n        return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    else if (buffer instanceof ArrayBuffer) {\n        return new Uint8Array(buffer);\n    }\n    else {\n        // ArrayLike<number>\n        return Uint8Array.from(buffer);\n    }\n}\nexports.ensureUint8Array = ensureUint8Array;\nfunction createDataView(buffer) {\n    if (buffer instanceof ArrayBuffer) {\n        return new DataView(buffer);\n    }\n    const bufferView = ensureUint8Array(buffer);\n    return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=typedArrays.js.map"]},"metadata":{},"sourceType":"script"}