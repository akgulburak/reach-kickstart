{"ast":null,"code":"const {\n  JSONRequest\n} = require('../jsonrequest');\n\nclass SearchForApplications extends JSONRequest {\n  // eslint-disable-next-line no-underscore-dangle,class-methods-use-this\n  _path() {\n    return '/v2/applications';\n  } // application ID for filter, as int\n\n\n  index(index) {\n    this.query['application-id'] = index;\n    return this;\n  } // token for pagination\n\n\n  nextToken(next) {\n    this.query.next = next;\n    return this;\n  } // limit results for pagination\n\n\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  } // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n\n\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n}\n\nmodule.exports = {\n  SearchForApplications\n};","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/algosdk/src/client/v2/indexer/searchForApplications.js"],"names":["JSONRequest","require","SearchForApplications","_path","index","query","nextToken","next","limit","includeAll","value","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,gBAAD,CAA/B;;AAEA,MAAMC,qBAAN,SAAoCF,WAApC,CAAgD;AAC9C;AACAG,EAAAA,KAAK,GAAG;AACN,WAAO,kBAAP;AACD,GAJ6C,CAM9C;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKC,KAAL,CAAW,gBAAX,IAA+BD,KAA/B;AACA,WAAO,IAAP;AACD,GAV6C,CAY9C;;;AACAE,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,SAAKF,KAAL,CAAWE,IAAX,GAAkBA,IAAlB;AACA,WAAO,IAAP;AACD,GAhB6C,CAkB9C;;;AACAC,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKH,KAAL,CAAWG,KAAX,GAAmBA,KAAnB;AACA,WAAO,IAAP;AACD,GAtB6C,CAwB9C;;;AACAC,EAAAA,UAAU,CAACC,KAAK,GAAG,IAAT,EAAe;AACvB,SAAKL,KAAL,CAAW,aAAX,IAA4BK,KAA5B;AACA,WAAO,IAAP;AACD;;AA5B6C;;AA+BhDC,MAAM,CAACC,OAAP,GAAiB;AAAEV,EAAAA;AAAF,CAAjB","sourcesContent":["const { JSONRequest } = require('../jsonrequest');\n\nclass SearchForApplications extends JSONRequest {\n  // eslint-disable-next-line no-underscore-dangle,class-methods-use-this\n  _path() {\n    return '/v2/applications';\n  }\n\n  // application ID for filter, as int\n  index(index) {\n    this.query['application-id'] = index;\n    return this;\n  }\n\n  // token for pagination\n  nextToken(next) {\n    this.query.next = next;\n    return this;\n  }\n\n  // limit results for pagination\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n\nmodule.exports = { SearchForApplications };\n"]},"metadata":{},"sourceType":"script"}