{"ast":null,"code":"const {\n  Buffer\n} = require('buffer');\n\nconst encoding = require('../../../encoding/encoding');\n\nconst {\n  setHeaders\n} = require('./compile');\n\nclass Dryrun {\n  constructor(c, dr) {\n    this.c = c;\n    this.blob = encoding.encode(dr.get_obj_for_encoding());\n  }\n  /**\n   * Executes dryrun\n   * @param headers, optional\n   * @returns {Promise<*>}\n   */\n\n\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post('/v2/teal/dryrun', Buffer.from(this.blob), txHeaders);\n    return res.body;\n  }\n\n}\n\nmodule.exports = {\n  Dryrun\n};","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/node_modules/algosdk/src/client/v2/algod/dryrun.js"],"names":["Buffer","require","encoding","setHeaders","Dryrun","constructor","c","dr","blob","encode","get_obj_for_encoding","do","headers","txHeaders","res","post","from","body","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,4BAAD,CAAxB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,WAAD,CAA9B;;AAEA,MAAMG,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,CAAD,EAAIC,EAAJ,EAAQ;AACjB,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKE,IAAL,GAAYN,QAAQ,CAACO,MAAT,CAAgBF,EAAE,CAACG,oBAAH,EAAhB,CAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACU,QAAFC,EAAE,CAACC,OAAO,GAAG,EAAX,EAAe;AACrB,UAAMC,SAAS,GAAGV,UAAU,CAACS,OAAD,CAA5B;AACA,UAAME,GAAG,GAAG,MAAM,KAAKR,CAAL,CAAOS,IAAP,CAChB,iBADgB,EAEhBf,MAAM,CAACgB,IAAP,CAAY,KAAKR,IAAjB,CAFgB,EAGhBK,SAHgB,CAAlB;AAKA,WAAOC,GAAG,CAACG,IAAX;AACD;;AAnBU;;AAsBbC,MAAM,CAACC,OAAP,GAAiB;AAAEf,EAAAA;AAAF,CAAjB","sourcesContent":["const { Buffer } = require('buffer');\nconst encoding = require('../../../encoding/encoding');\nconst { setHeaders } = require('./compile');\n\nclass Dryrun {\n  constructor(c, dr) {\n    this.c = c;\n    this.blob = encoding.encode(dr.get_obj_for_encoding());\n  }\n\n  /**\n   * Executes dryrun\n   * @param headers, optional\n   * @returns {Promise<*>}\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      '/v2/teal/dryrun',\n      Buffer.from(this.blob),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n\nmodule.exports = { Dryrun };\n"]},"metadata":{},"sourceType":"script"}