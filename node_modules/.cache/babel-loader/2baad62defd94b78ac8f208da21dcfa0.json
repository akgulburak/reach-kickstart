{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {},\n    views: {}\n  };\n}\n;\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc11 = stdlib.T_Tuple([]);\n  const ctc12 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc12, ctc1, ctc5, ctc3, ctc3, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc12, ctc1, ctc5, ctc3, ctc3, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc0, ctc3, ctc1, ctc1]);\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc0, ctc3, ctc1]);\n  const v18 = await ctc.creationTime();\n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:33:23:application', stdlib.UInt_max, 19));\n  const txn1 = await ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0), [ctc1, ctc0], [v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0)]);\n    const [v23] = txn1.data;\n    const v25 = txn1.time;\n    const v22 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v62 = [v23, v23];\n    const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n    const v65 = [v63, v63];\n    const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n    const v58 = v62;\n    const v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n    const v60 = v65;\n    const v61 = v66;\n    const v579 = v25;\n    const v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n    if ((() => {\n      const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      return v69;\n    })()) {\n      sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc16, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v581]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    }\n\n    return sim_r;\n  });\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v69;\n  })()) {\n    const txn2 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      return v320;\n    }, false);\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    continue;\n  }\n\n  const txn2 = await ctc.recv(4, 2, [ctc3, ctc5], false, false);\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n\n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    return v367;\n  })()) {\n    const v429 = stdlib.sub(v347, v583);\n    const txn3 = await ctc.recv(8, 1, [ctc6], false, v429);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n\n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n\n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            return v367;\n          })()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              return v449;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n\n            switch (v522[0]) {\n              case 'None':\n                {\n                  const v527 = stdlib.eq(v487, v451);\n                  const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v532 = ['Some', v523];\n                  const v533 = [v532, v523];\n                  const v534 = [v522, v531];\n                  const v535 = v527 ? v533 : v534;\n                  v524 = v535;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v538 = v522[1];\n                  v524 = v517;\n                  break;\n                }\n            }\n\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n\n            switch (v543[0]) {\n              case 'None':\n                {\n                  v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v553 = v543[1];\n                  v549 = v553;\n                  break;\n                }\n            }\n\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      continue;\n    } else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      } else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      }\n    }\n  }\n\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    return v449;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n\n  switch (v522[0]) {\n    case 'None':\n      {\n        const v527 = stdlib.eq(v487, v451);\n        const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v532 = ['Some', v523];\n        const v533 = [v532, v523];\n        const v534 = [v522, v531];\n        const v535 = v527 ? v533 : v534;\n        v524 = v535;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v538 = v522[1];\n        v524 = v517;\n        break;\n      }\n  }\n\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n\n  switch (v543[0]) {\n    case 'None':\n      {\n        v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v553 = v543[1];\n        v549 = v553;\n        break;\n      }\n  }\n\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v571 = v559[stdlib.checkedBigNumberify('./index.rsh:153:57:array ref', stdlib.UInt_max, 2)];\n  const txn3 = await ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v22, v582, v571], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, async txn3 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 6), v22, v582]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 6), v22]);\n    const [v573] = txn3.data;\n    const v576 = txn3.time;\n    const v572 = txn3.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v575 = stdlib.addressEq(v22, v572);\n    stdlib.assert(v575, {\n      at: './index.rsh:157:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n    });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n    });\n    sim_r.nextSt = stdlib.digest(ctc11, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc11, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:159:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    return sim_r;\n  });\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n  });\n  return;\n}\n_c = Admin;\n;\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc7, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc7, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc0], false, false);\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v69;\n  })()) {\n    const v182 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 181));\n    const v185 = stdlib.protect(ctc1, await interact.getParams(v182), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n    });\n    const v193 = ['None', null];\n    const v219 = v58[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v220 = v58[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v242 = stdlib.addressEq(v219, v182);\n    const v246 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v247 = [v246, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v249 = [v193, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v250 = v242 ? v247 : v249;\n    const v255 = v250[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v256 = v250[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v257;\n\n    switch (v255[0]) {\n      case 'None':\n        {\n          const v260 = stdlib.addressEq(v220, v182);\n          const v264 = stdlib.add(v256, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v265 = ['Some', v256];\n          const v266 = [v265, v256];\n          const v267 = [v255, v264];\n          const v268 = v260 ? v266 : v267;\n          v257 = v268;\n          break;\n        }\n\n      case 'Some':\n        {\n          const v271 = v255[1];\n          v257 = v250;\n          break;\n        }\n    }\n\n    const v276 = v257[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v282;\n\n    switch (v276[0]) {\n      case 'None':\n        {\n          v282 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n          break;\n        }\n\n      case 'Some':\n        {\n          const v286 = v276[1];\n          v282 = v286;\n          break;\n        }\n    }\n\n    const v292 = [v185, v182];\n    const txn2 = await ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc2], [v22, v58, v59, v60, v61, v66, v579, v581, v292], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, async txn2 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n      const [v296] = txn2.data;\n      const v300 = txn2.time;\n      const v295 = txn2.from;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v304 = [v302, v59, v303];\n      const v306 = stdlib.Array_set(v60, v59, v304);\n      const v309 = stdlib.Array_set(v58, v59, v302);\n      const v322 = v58.reduce((v315, v316) => {\n        const v318 = stdlib.addressEq(v302, v316);\n        const v319 = v318 ? true : false;\n        const v320 = v315 ? v315 : v319;\n        return v320;\n      }, false);\n      const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v328 = stdlib.Array_set(v61, v59, v303);\n      const v329 = [v60, v58, v59, v61];\n      const v330 = [v306, v309, v325, v328];\n      const v331 = v322 ? v329 : v330;\n      const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv58 = v334;\n      const cv59 = v335;\n      const cv60 = v333;\n      const cv61 = v336;\n      const cv579 = v300;\n      const cv581 = v581;\n\n      (() => {\n        const v58 = cv58;\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v579 = cv579;\n        const v581 = cv581;\n\n        if ((() => {\n          const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          return v69;\n        })()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        } else {\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v581]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n        }\n      })();\n\n      return sim_r;\n    });\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      return v320;\n    }, false);\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    continue;\n  }\n\n  const txn2 = await ctc.sendrecv(4, 2, stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 2), [ctc0, ctc7, ctc1, ctc1, ctc7, ctc6], [v22, v66, v579, v581, v61, v60], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc7, ctc6], true, false, false, async txn2 => {\n    const sim_r = {\n      txns: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 3), v22, v66, v581]);\n    const [v341, v342] = txn2.data;\n    const v344 = txn2.time;\n    const v340 = txn2.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n    const v360 = v66;\n    const v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n    const v582 = v344;\n    const v583 = v579;\n    const v584 = v581;\n\n    if ((() => {\n      const v367 = stdlib.gt(v347, v583);\n      return v367;\n    })()) {\n      const v429 = stdlib.sub(v347, v583);\n      sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    } else {\n      const v451 = v360.reduce((v443, v444) => {\n        const v447 = stdlib.gt(v444, v443);\n        const v449 = v447 ? v444 : v443;\n        return v449;\n      }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n      const v460 = ['None', null];\n      const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n      const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n      const v509 = stdlib.eq(v486, v451);\n      const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n      const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n      const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n      const v517 = v509 ? v514 : v516;\n      const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n      const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n      let v524;\n\n      switch (v522[0]) {\n        case 'None':\n          {\n            const v527 = stdlib.eq(v487, v451);\n            const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n            const v532 = ['Some', v523];\n            const v533 = [v532, v523];\n            const v534 = [v522, v531];\n            const v535 = v527 ? v533 : v534;\n            v524 = v535;\n            break;\n          }\n\n        case 'Some':\n          {\n            const v538 = v522[1];\n            v524 = v517;\n            break;\n          }\n      }\n\n      const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n      let v549;\n\n      switch (v543[0]) {\n        case 'None':\n          {\n            v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n            break;\n          }\n\n        case 'Some':\n          {\n            const v553 = v543[1];\n            v549 = v553;\n            break;\n          }\n      }\n\n      const v559 = v342[v549];\n      const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n      sim_r.txns.push({\n        amt: v584,\n        kind: 'from',\n        to: v560,\n        tok: undefined\n      });\n      sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n    }\n\n    return sim_r;\n  });\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n\n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    return v367;\n  })()) {\n    const v429 = stdlib.sub(v347, v583);\n    const txn3 = await ctc.recv(8, 1, [ctc12], false, v429);\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n\n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n\n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            return v367;\n          })()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              return v449;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n\n            switch (v522[0]) {\n              case 'None':\n                {\n                  const v527 = stdlib.eq(v487, v451);\n                  const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v532 = ['Some', v523];\n                  const v533 = [v532, v523];\n                  const v534 = [v522, v531];\n                  const v535 = v527 ? v533 : v534;\n                  v524 = v535;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v538 = v522[1];\n                  v524 = v517;\n                  break;\n                }\n            }\n\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n\n            switch (v543[0]) {\n              case 'None':\n                {\n                  v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v553 = v543[1];\n                  v549 = v553;\n                  break;\n                }\n            }\n\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      continue;\n    } else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      } else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      }\n    }\n  }\n\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    return v449;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n\n  switch (v522[0]) {\n    case 'None':\n      {\n        const v527 = stdlib.eq(v487, v451);\n        const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v532 = ['Some', v523];\n        const v533 = [v532, v523];\n        const v534 = [v522, v531];\n        const v535 = v527 ? v533 : v534;\n        v524 = v535;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v538 = v522[1];\n        v524 = v517;\n        break;\n      }\n  }\n\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n\n  switch (v543[0]) {\n    case 'None':\n      {\n        v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v553 = v543[1];\n        v549 = v553;\n        break;\n      }\n  }\n\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n  });\n  return;\n}\n_c2 = Nominee;\n;\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const v18 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 1, [ctc0], false, false);\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n\n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    return v69;\n  })()) {\n    const txn2 = await ctc.recv(10, 1, [ctc2], false, false);\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      return v320;\n    }, false);\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    continue;\n  }\n\n  const txn2 = await ctc.recv(4, 2, [ctc3, ctc5], false, false);\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n\n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    return v367;\n  })()) {\n    const v429 = stdlib.sub(v347, v583);\n    const v385 = v341[stdlib.checkedBigNumberify('./index.rsh:115:81:array ref', stdlib.UInt_max, 0)];\n    const v386 = v341[stdlib.checkedBigNumberify('./index.rsh:115:91:array ref', stdlib.UInt_max, 1)];\n    const v387 = v360[stdlib.checkedBigNumberify('./index.rsh:115:102:array ref', stdlib.UInt_max, 0)];\n    const v388 = v360[stdlib.checkedBigNumberify('./index.rsh:115:111:array ref', stdlib.UInt_max, 1)];\n    const v389 = [v385, v386];\n    const v390 = [v387, v388];\n    const v391 = stdlib.protect(ctc6, await interact.shouldBuyTicket(v389, v390), {\n      at: './index.rsh:115:73:application',\n      fs: ['at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:114:25:function exp)', 'at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:110:56:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n    });\n    const v394 = v391[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n    const txn3 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1, ctc6], [v22, v342, v347, v360, v361, v429, v582, v584, v391], [v394, []], [ctc6], true, false, v429, async txn3 => {\n      const sim_r = {\n        txns: []\n      };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      sim_r.txns.push({\n        amt: v399,\n        kind: 'to',\n        tok: undefined\n      });\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        sim_r.txns.push({\n          amt: v399,\n          kind: 'from',\n          to: v396,\n          tok: undefined\n        });\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n\n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n\n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            return v367;\n          })()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              return v449;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n\n            switch (v522[0]) {\n              case 'None':\n                {\n                  const v527 = stdlib.eq(v487, v451);\n                  const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v532 = ['Some', v523];\n                  const v533 = [v532, v523];\n                  const v534 = [v522, v531];\n                  const v535 = v527 ? v533 : v534;\n                  v524 = v535;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v538 = v522[1];\n                  v524 = v517;\n                  break;\n                }\n            }\n\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n\n            switch (v543[0]) {\n              case 'None':\n                {\n                  v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v553 = v543[1];\n                  v549 = v553;\n                  break;\n                }\n            }\n\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n      } else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n\n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n\n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            return v367;\n          })()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              return v449;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n\n            switch (v522[0]) {\n              case 'None':\n                {\n                  const v527 = stdlib.eq(v487, v451);\n                  const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v532 = ['Some', v523];\n                  const v533 = [v532, v523];\n                  const v534 = [v522, v531];\n                  const v535 = v527 ? v533 : v534;\n                  v524 = v535;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v538 = v522[1];\n                  v524 = v517;\n                  break;\n                }\n            }\n\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n\n            switch (v543[0]) {\n              case 'None':\n                {\n                  v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v553 = v543[1];\n                  v549 = v553;\n                  break;\n                }\n            }\n\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n      }\n\n      return sim_r;\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n        const sim_r = {\n          txns: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n\n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n\n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            return v367;\n          })()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          } else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              return v449;\n            }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n\n            switch (v522[0]) {\n              case 'None':\n                {\n                  const v527 = stdlib.eq(v487, v451);\n                  const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                  const v532 = ['Some', v523];\n                  const v533 = [v532, v523];\n                  const v534 = [v522, v531];\n                  const v535 = v527 ? v533 : v534;\n                  v524 = v535;\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v538 = v522[1];\n                  v524 = v517;\n                  break;\n                }\n            }\n\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n\n            switch (v543[0]) {\n              case 'None':\n                {\n                  v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                  break;\n                }\n\n              case 'Some':\n                {\n                  const v553 = v543[1];\n                  v549 = v553;\n                  break;\n                }\n            }\n\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n            });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n          }\n        })();\n\n        return sim_r;\n      });\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      continue;\n    } else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      } else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        continue;\n      }\n    }\n  }\n\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    return v449;\n  }, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0));\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n\n  switch (v522[0]) {\n    case 'None':\n      {\n        const v527 = stdlib.eq(v487, v451);\n        const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v532 = ['Some', v523];\n        const v533 = [v532, v523];\n        const v534 = [v522, v531];\n        const v535 = v527 ? v533 : v534;\n        v524 = v535;\n        break;\n      }\n\n    case 'Some':\n      {\n        const v538 = v522[1];\n        v524 = v517;\n        break;\n      }\n  }\n\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n\n  switch (v543[0]) {\n    case 'None':\n      {\n        v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n        break;\n      }\n\n    case 'Some':\n      {\n        const v553 = v543[1];\n        v549 = v553;\n        break;\n      }\n  }\n\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await ctc.recv(7, 1, [ctc1], false, false);\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n  });\n  return;\n}\n_c3 = Voter;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m4}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 121\n  }, null, null, {\n    count: 11,\n    size: 257\n  }, null, null, {\n    count: 8,\n    size: 129\n  }, {\n    count: 14,\n    size: 281\n  }, {\n    count: 13,\n    size: 265\n  }, {\n    count: 14,\n    size: 369\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 255\nload 255\nconcat\nconcat\nint 0\nitob\nconcat\nload 254\nload 254\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\ngtxn 0 Sender\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\n// Handler 4\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:106:21:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxna 0 ApplicationArgs 5\nbtoi\nint 90000\n+\ndup\nstore 250\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 250\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 254\nconcat\nint 0\nitob\nconcat\nload 249\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\nload 254\nsubstring 0 8\nbtoi\nstore 249\nload 254\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 251\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 253\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:157:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:157:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nsubstring 8 16\nbtoi\nstore 246\nload 249\nload 246\n+\nstore 245\n// \"CheckPay\"\n// \"./index.rsh:110:56:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 246\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 0 8\nbtoi\ndup\nstore 243\nint 2\n>=\nbz l0\nload 245\nload 246\n-\nstore 242\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 246\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\ndup\nstore 244\nsubstring 0 16\nstore 241\nload 244\nsubstring 16 24\nbtoi\nstore 240\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 239\nbz l1\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 238\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 241\nconcat\nload 240\nitob\nconcat\nload 238\nitob\nconcat\nload 242\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 238\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl1:\nload 241\nsubstring 0 8\nbtoi\nstore 238\nload 241\nsubstring 8 16\nbtoi\nstore 237\nint 0\nload 238\nload 238\nint 0\n>\nselect\ndup\nstore 236\nload 237\nload 237\nload 236\n>\nselect\nstore 235\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nstore 234\nload 238\nload 235\n==\nstore 233\nint 1\nint 0\nconcat\nbyte base64()\nconcat\ndup\nstore 232\nint 0\nitob\nconcat\nstore 231\nload 234\nint 1\nitob\nconcat\ndup\nstore 230\nload 231\nload 233\nselect\ndup\nstore 229\nsubstring 0 9\nstore 228\nload 229\nsubstring 9 17\nbtoi\nstore 227\nload 228\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 235\n==\nstore 225\nload 227\nint 1\n+\nstore 224\nint 1\nload 227\nconcat\nbyte base64()\nconcat\ndup\nstore 223\nload 227\nitob\nconcat\nstore 222\nload 228\nload 224\nitob\nconcat\ndup\nstore 221\nload 222\nload 225\nselect\ndup\nstore 220\nstore 226\nl3:\nload 228\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 228\nsubstring 1 9\nbtoi\nstore 225\nload 229\nstore 226\nl4:\nl2:\nload 226\nsubstring 0 9\ndup\nstore 225\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 224\nl6:\nload 225\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 225\nsubstring 1 9\nbtoi\ndup\nstore 223\nstore 224\nl7:\nl5:\nload 254\nint 48\nload 224\n*\ndup\nint 48\n+\nsubstring3\ndup\nstore 223\nsubstring 0 32\nstore 222\ngtxn 5 TypeEnum\nint pay\n==\nassert\ngtxn 5 Receiver\nload 222\n==\nassert\ngtxn 5 Amount\nload 242\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\ndup\ngtxn 5 LastValid\n==\nassert\npop\nl0:\nload 252\nint 0\nint 8\nload 243\n*\nsubstring3\nload 252\nint 8\nload 243\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 243\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 246\n+\nitob\nconcat\ndup\nstore 244\nsubstring 0 16\nstore 242\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l8\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 242\nconcat\nload 244\nsubstring 16 24\nconcat\nload 241\nitob\nconcat\nload 245\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 241\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\nload 242\nsubstring 0 8\nbtoi\nstore 241\nload 242\nsubstring 8 16\nbtoi\nstore 240\nint 0\nload 241\nload 241\nint 0\n>\nselect\ndup\nstore 239\nload 240\nload 240\nload 239\n>\nselect\nstore 238\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 241\nload 238\n==\nselect\ndup\nstore 237\nsubstring 0 9\nstore 236\nload 237\nsubstring 9 17\nbtoi\nstore 235\nload 236\nint 0\ngetbyte\nint 0\n==\nbz l10\nload 236\nload 235\nint 1\n+\nitob\nconcat\nint 1\nload 235\nconcat\nbyte base64()\nconcat\nload 235\nitob\nconcat\nload 240\nload 238\n==\nselect\nstore 234\nl10:\nload 236\nint 0\ngetbyte\nint 1\n==\nbz l11\nload 236\nsubstring 1 9\nbtoi\nstore 233\nload 237\nstore 234\nl11:\nl9:\nload 234\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l13\nint 0\nstore 233\nl13:\nload 234\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l14\nload 234\nsubstring 1 10\nbtoi\ndup\nstore 232\nstore 233\nl14:\nl12:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 233\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 245\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\ngtxn 4 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:110:56:dot\"\n// \"[at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:110:56:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 248\nload 252\nsubstring 8 16\nbtoi\nstore 247\nint 0\nload 248\nload 248\nint 0\n>\nselect\ndup\nstore 246\nload 247\nload 247\nload 246\n>\nselect\nstore 245\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 248\nload 245\n==\nselect\ndup\nstore 244\nsubstring 0 9\nstore 243\nload 244\nsubstring 9 17\nbtoi\nstore 242\nload 243\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 243\nload 242\nint 1\n+\nitob\nconcat\nint 1\nload 242\nconcat\nbyte base64()\nconcat\nload 242\nitob\nconcat\nload 247\nload 245\n==\nselect\nstore 241\nl2:\nload 243\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 243\nsubstring 1 9\nbtoi\nstore 240\nload 244\nstore 241\nl3:\nl1:\nload 241\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 240\nl5:\nload 241\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 241\nsubstring 1 10\nbtoi\ndup\nstore 239\nstore 240\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 240\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v58\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v59\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v60\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v61\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T33\",\n                \"name\": \"v296\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T35\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v341\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v573\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v397\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v58\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v59\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v60\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v61\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T33\",\n                \"name\": \"v296\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T35\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v341\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v573\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v397\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: ``,\n  deployMode: `DM_constructor`,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"Nominee\");\n$RefreshReg$(_c3, \"Voter\");","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","infos","views","Admin","ctc","interact","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Tuple","ctc3","T_Array","checkedBigNumberify","UInt_max","ctc4","ctc5","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","ctc14","ctc15","ctc16","v18","creationTime","v20","selfAddress","txn1","sendrecv","sim_r","txns","prevSt","digest","prevSt_noPrevTime","v23","data","v25","time","v22","from","push","amt","kind","tok","undefined","v62","v63","v65","v66","v58","v59","v60","v61","v579","v581","v69","le","nextSt","nextSt_noTime","view","isHalt","txn2","recv","v296","v300","v295","v302","v303","v304","v306","Array_set","v309","v322","reduce","v315","v316","v318","addressEq","v319","v320","v325","add","v328","v329","v330","v331","v333","v334","v335","v336","cv58","cv59","cv60","cv61","cv579","cv581","v341","v342","v344","v340","v347","v360","v361","v582","v583","v584","v367","gt","v429","sub","txn3","didTimeout","txn4","v434","v432","cv360","cv361","cv582","cv583","cv584","v451","v443","v444","v447","v449","v460","v486","v487","v509","eq","v513","v514","v516","v517","v522","v523","v524","v527","v531","v532","v533","v534","v535","v538","v543","v549","v553","v559","v560","to","v397","v403","v396","v399","v402","v404","v405","v406","ge","v411","v423","v425","v426","v416","v417","v419","v421","v424","v571","v573","v576","v572","v575","assert","at","fs","msg","who","Nominee","v182","v185","protect","getParams","v193","v219","v220","v242","v246","v247","v249","v250","v255","v256","v257","v260","v264","v265","v266","v267","v268","v271","v276","v282","v286","v292","Voter","v385","v386","v387","v388","v389","v390","v391","shouldBuyTicket","v394","_ALGO","appApproval","appApproval0","appClear","stepargs","count","size","steps","unsupported","_ETH","ABI","Bytecode","deployMode","_Connectors","ALGO","ETH"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1Fc;AA2FZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzJc;AA0JZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzKc;AA0KZ5N,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/Mc;AAgNZ6N,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL,IAHK,EAGC,IAHD,EAGO;AACfD,IAAAA,KAAK,EAAE,EADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAHP,EAML,IANK,EAMC,IAND,EAMO;AACfD,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GANP,EASL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,CAhNE;AAmOZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjhzgBS,EAygBN,IAzgBM,EAygBA,IAzgBA,EAygBO;AAChoBS,EA+oBL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAl7CS,EAkzDS,EA0zzmES,CAnOK;AA60EZC,EAAAA,WAAW,EAAE;AA70ED,CAAd;AA+0EA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAn5Ba;AAo5BXC,EAAAA,QAAQ,EAAG,sthBAp5BA;AAq5BXC,EAAAA,UAAU,EAAG,gBAr5BF;AAs5BXvO,EAAAA,KAAK,EAAE;AAt5BI,CAAb;AA05BA,OAAO,MAAMwO,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEd,KADmB;AAEzBe,EAAAA,GAAG,EAAEN;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport async function Admin(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  const ctc11 = stdlib.T_Tuple([]);\n  const ctc12 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc12, ctc1, ctc5, ctc3, ctc3, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc12, ctc1, ctc5, ctc3, ctc3, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc0, ctc3, ctc1, ctc1]);\n  const ctc16 = stdlib.T_Tuple([ctc1, ctc0, ctc3, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const v20 = ctc.selfAddress('Admin', false, stdlib.checkedBigNumberify('./index.rsh:33:23:application', stdlib.UInt_max, 19));\n  \n  \n  const txn1 = await (ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0), [ctc1, ctc0], [v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0), v18]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:37:19:dot', stdlib.UInt_max, 0)]);\n    const [v23] = txn1.data;\n    const v25 = txn1.time;\n    const v22 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v62 = [v23, v23];\n    const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n    const v65 = [v63, v63];\n    const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n    const v58 = v62;\n    const v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n    const v60 = v65;\n    const v61 = v66;\n    const v579 = v25;\n    const v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n    \n    if ((() => {\n      const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n      \n      return v69;})()) {\n      sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc16, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v581]);\n      sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    return sim_r;\n    })));\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v69;})()) {\n    const txn2 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      \n      return v320;}, false)\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    \n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    \n    continue;\n    }\n  const txn2 = await (ctc.recv(4, 2, [ctc3, ctc5], false, false));\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n  \n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    \n    return v367;})()) {\n    const v429 = stdlib.sub(v347, v583);\n    const txn3 = await (ctc.recv(8, 1, [ctc6], false, v429));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n        \n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n          \n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            \n            return v367;})()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              \n              return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n            switch (v522[0]) {\n              case 'None': {\n                \n                const v527 = stdlib.eq(v487, v451);\n                const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v532 = ['Some', v523];\n                const v533 = [v532, v523];\n                const v534 = [v522, v531];\n                const v535 = v527 ? v533 : v534;\n                v524 = v535;\n                \n                break;\n                }\n              case 'Some': {\n                const v538 = v522[1];\n                v524 = v517;\n                \n                break;\n                }\n              }\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n            switch (v543[0]) {\n              case 'None': {\n                \n                v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v553 = v543[1];\n                v549 = v553;\n                \n                break;\n                }\n              }\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      \n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      \n      continue;\n      }\n    else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}\n      else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}}\n    }\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    \n    return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n  switch (v522[0]) {\n    case 'None': {\n      \n      const v527 = stdlib.eq(v487, v451);\n      const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v532 = ['Some', v523];\n      const v533 = [v532, v523];\n      const v534 = [v522, v531];\n      const v535 = v527 ? v533 : v534;\n      v524 = v535;\n      \n      break;\n      }\n    case 'Some': {\n      const v538 = v522[1];\n      v524 = v517;\n      \n      break;\n      }\n    }\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n  switch (v543[0]) {\n    case 'None': {\n      \n      v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v553 = v543[1];\n      v549 = v553;\n      \n      break;\n      }\n    }\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const v571 = v559[stdlib.checkedBigNumberify('./index.rsh:153:57:array ref', stdlib.UInt_max, 2)];\n  \n  \n  const txn3 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 1), [ctc0, ctc1, ctc1], [v22, v582, v571], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1], true, true, false, (async (txn3) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 6), v22, v582]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:157:19:dot', stdlib.UInt_max, 6), v22]);\n    const [v573] = txn3.data;\n    const v576 = txn3.time;\n    const v572 = txn3.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v575 = stdlib.addressEq(v22, v572);\n    stdlib.assert(v575, {\n      at: './index.rsh:157:19:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Admin'\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc11, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc11, []);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:159:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Admin'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Nominee(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc6 = stdlib.T_Array(ctc5, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc7 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc7, ctc1, ctc1]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc0, ctc7, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc13 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1]);\n  const ctc14 = stdlib.T_Tuple([ctc1, ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1]);\n  const ctc15 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc0], false, false));\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v69;})()) {\n    const v182 = ctc.selfAddress('Nominee', true, stdlib.checkedBigNumberify('./index.rsh:43:27:application', stdlib.UInt_max, 181));\n    const v185 = stdlib.protect(ctc1, await interact.getParams(v182), {\n      at: './index.rsh:48:64:application',\n      fs: ['at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:47:21:function exp)', 'at ./index.rsh:43:27:application call to [unknown function] (defined at: ./index.rsh:43:27:function exp)'],\n      msg: 'getParams',\n      who: 'Nominee'\n      });\n    const v193 = ['None', null];\n    const v219 = v58[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n    const v220 = v58[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n    const v242 = stdlib.addressEq(v219, v182);\n    const v246 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v247 = [v246, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n    const v249 = [v193, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n    const v250 = v242 ? v247 : v249;\n    const v255 = v250[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n    const v256 = v250[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n    let v257;\n    switch (v255[0]) {\n      case 'None': {\n        \n        const v260 = stdlib.addressEq(v220, v182);\n        const v264 = stdlib.add(v256, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n        const v265 = ['Some', v256];\n        const v266 = [v265, v256];\n        const v267 = [v255, v264];\n        const v268 = v260 ? v266 : v267;\n        v257 = v268;\n        \n        break;\n        }\n      case 'Some': {\n        const v271 = v255[1];\n        v257 = v250;\n        \n        break;\n        }\n      }\n    const v276 = v257[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n    let v282;\n    switch (v276[0]) {\n      case 'None': {\n        \n        v282 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n        \n        break;\n        }\n      case 'Some': {\n        const v286 = v276[1];\n        v282 = v286;\n        \n        break;\n        }\n      }\n    \n    const v292 = [v185, v182];\n    \n    const txn2 = await (ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 6), [ctc0, ctc4, ctc1, ctc6, ctc7, ctc7, ctc1, ctc1, ctc2], [v22, v58, v59, v60, v61, v66, v579, v581, v292], [stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0), []], [ctc2], true, false, false, (async (txn2) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:dot', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n      const [v296] = txn2.data;\n      const v300 = txn2.time;\n      const v295 = txn2.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:55:28:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n      const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n      const v304 = [v302, v59, v303];\n      const v306 = stdlib.Array_set(v60, v59, v304);\n      const v309 = stdlib.Array_set(v58, v59, v302);\n      const v322 = v58.reduce((v315, v316) => {\n        const v318 = stdlib.addressEq(v302, v316);\n        const v319 = v318 ? true : false;\n        const v320 = v315 ? v315 : v319;\n        \n        return v320;}, false)\n      const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n      const v328 = stdlib.Array_set(v61, v59, v303);\n      const v329 = [v60, v58, v59, v61];\n      const v330 = [v306, v309, v325, v328];\n      const v331 = v322 ? v329 : v330;\n      const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n      const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n      const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n      const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n      const cv58 = v334;\n      const cv59 = v335;\n      const cv60 = v333;\n      const cv61 = v336;\n      const cv579 = v300;\n      const cv581 = v581;\n      \n      (() => {\n        const v58 = cv58;\n        const v59 = cv59;\n        const v60 = cv60;\n        const v61 = cv61;\n        const v579 = cv579;\n        const v581 = cv581;\n        \n        if ((() => {\n          const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n          \n          return v69;})()) {\n          sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v579, v581]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 2), v22, v58, v59, v60, v61, v66, v581]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:43:27:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 3), v22, v66, v581]);\n          sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:101:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }})();\n      return sim_r;\n      })));\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      \n      return v320;}, false)\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    \n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    \n    continue;\n    }\n  \n  \n  const txn2 = await (ctc.sendrecv(4, 2, stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 2), [ctc0, ctc7, ctc1, ctc1, ctc7, ctc6], [v22, v66, v579, v581, v61, v60], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc7, ctc6], true, false, false, (async (txn2) => {\n    const sim_r = { txns: [] };\n    sim_r.prevSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 3), v22, v66, v579, v581]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:106:21:dot', stdlib.UInt_max, 3), v22, v66, v581]);\n    const [v341, v342] = txn2.data;\n    const v344 = txn2.time;\n    const v340 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n    const v360 = v66;\n    const v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n    const v582 = v344;\n    const v583 = v579;\n    const v584 = v581;\n    \n    if ((() => {\n      const v367 = stdlib.gt(v347, v583);\n      \n      return v367;})()) {\n      const v429 = stdlib.sub(v347, v583);\n      sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v451 = v360.reduce((v443, v444) => {\n        const v447 = stdlib.gt(v444, v443);\n        const v449 = v447 ? v444 : v443;\n        \n        return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n      const v460 = ['None', null];\n      const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n      const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n      const v509 = stdlib.eq(v486, v451);\n      const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n      const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n      const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n      const v517 = v509 ? v514 : v516;\n      const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n      const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n      let v524;\n      switch (v522[0]) {\n        case 'None': {\n          \n          const v527 = stdlib.eq(v487, v451);\n          const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n          const v532 = ['Some', v523];\n          const v533 = [v532, v523];\n          const v534 = [v522, v531];\n          const v535 = v527 ? v533 : v534;\n          v524 = v535;\n          \n          break;\n          }\n        case 'Some': {\n          const v538 = v522[1];\n          v524 = v517;\n          \n          break;\n          }\n        }\n      const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n      let v549;\n      switch (v543[0]) {\n        case 'None': {\n          \n          v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n          \n          break;\n          }\n        case 'Some': {\n          const v553 = v543[1];\n          v549 = v553;\n          \n          break;\n          }\n        }\n      const v559 = v342[v549];\n      const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n      sim_r.txns.push({\n        amt: v584,\n        kind: 'from',\n        to: v560,\n        tok: undefined\n        });\n      sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n      sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    return sim_r;\n    })));\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n  \n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    \n    return v367;})()) {\n    const v429 = stdlib.sub(v347, v583);\n    const txn3 = await (ctc.recv(8, 1, [ctc12], false, v429));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc6, ctc1, ctc7, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n        \n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n          \n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            \n            return v367;})()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              \n              return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n            switch (v522[0]) {\n              case 'None': {\n                \n                const v527 = stdlib.eq(v487, v451);\n                const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v532 = ['Some', v523];\n                const v533 = [v532, v523];\n                const v534 = [v522, v531];\n                const v535 = v527 ? v533 : v534;\n                v524 = v535;\n                \n                break;\n                }\n              case 'Some': {\n                const v538 = v522[1];\n                v524 = v517;\n                \n                break;\n                }\n              }\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n            switch (v543[0]) {\n              case 'None': {\n                \n                v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v553 = v543[1];\n                v549 = v553;\n                \n                break;\n                }\n              }\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      \n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      \n      continue;\n      }\n    else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}\n      else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}}\n    }\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    \n    return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n  switch (v522[0]) {\n    case 'None': {\n      \n      const v527 = stdlib.eq(v487, v451);\n      const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v532 = ['Some', v523];\n      const v533 = [v532, v523];\n      const v534 = [v522, v531];\n      const v535 = v527 ? v533 : v534;\n      v524 = v535;\n      \n      break;\n      }\n    case 'Some': {\n      const v538 = v522[1];\n      v524 = v517;\n      \n      break;\n      }\n    }\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n  switch (v543[0]) {\n    case 'None': {\n      \n      v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v553 = v543[1];\n      v549 = v553;\n      \n      break;\n      }\n    }\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Nominee'\n    });\n  return;\n  \n  \n  \n  };\nexport async function Voter(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Tuple([ctc1, ctc0]);\n  const ctc3 = stdlib.T_Array(ctc1, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc1, ctc1]);\n  const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc0, ctc1]);\n  \n  \n  const v18 = await ctc.creationTime();\n  \n  const txn1 = await (ctc.recv(1, 1, [ctc0], false, false));\n  const [v23] = txn1.data;\n  const v25 = txn1.time;\n  const v22 = txn1.from;\n  ;\n  const v62 = [v23, v23];\n  const v63 = [v23, stdlib.checkedBigNumberify('./index.rsh:39:41:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:39:44:decimal', stdlib.UInt_max, 0)];\n  const v65 = [v63, v63];\n  const v66 = [stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:43:108:decimal', stdlib.UInt_max, 0)];\n  let v58 = v62;\n  let v59 = stdlib.checkedBigNumberify('./index.rsh:43:87:decimal', stdlib.UInt_max, 0);\n  let v60 = v65;\n  let v61 = v66;\n  let v579 = v25;\n  let v581 = stdlib.checkedBigNumberify('./index.rsh:compileDApp', stdlib.UInt_max, 0);\n  \n  while ((() => {\n    const v69 = stdlib.le(v59, stdlib.checkedBigNumberify('./index.rsh:45:31:decimal', stdlib.UInt_max, 1));\n    \n    return v69;})()) {\n    const txn2 = await (ctc.recv(10, 1, [ctc2], false, false));\n    const [v296] = txn2.data;\n    const v300 = txn2.time;\n    const v295 = txn2.from;\n    ;\n    const v302 = v296[stdlib.checkedBigNumberify('./index.rsh:58:65:array ref', stdlib.UInt_max, 1)];\n    const v303 = v296[stdlib.checkedBigNumberify('./index.rsh:58:83:array ref', stdlib.UInt_max, 0)];\n    const v304 = [v302, v59, v303];\n    const v306 = stdlib.Array_set(v60, v59, v304);\n    const v309 = stdlib.Array_set(v58, v59, v302);\n    const v322 = v58.reduce((v315, v316) => {\n      const v318 = stdlib.addressEq(v302, v316);\n      const v319 = v318 ? true : false;\n      const v320 = v315 ? v315 : v319;\n      \n      return v320;}, false)\n    const v325 = stdlib.add(v59, stdlib.checkedBigNumberify('./index.rsh:65:125:decimal', stdlib.UInt_max, 1));\n    const v328 = stdlib.Array_set(v61, v59, v303);\n    const v329 = [v60, v58, v59, v61];\n    const v330 = [v306, v309, v325, v328];\n    const v331 = v322 ? v329 : v330;\n    const v333 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 0)];\n    const v334 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 1)];\n    const v335 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 2)];\n    const v336 = v331[stdlib.checkedBigNumberify('./index.rsh:42:19:array', stdlib.UInt_max, 3)];\n    const cv58 = v334;\n    const cv59 = v335;\n    const cv60 = v333;\n    const cv61 = v336;\n    const cv579 = v300;\n    const cv581 = v581;\n    \n    v58 = cv58;\n    v59 = cv59;\n    v60 = cv60;\n    v61 = cv61;\n    v579 = cv579;\n    v581 = cv581;\n    \n    continue;\n    }\n  const txn2 = await (ctc.recv(4, 2, [ctc3, ctc5], false, false));\n  const [v341, v342] = txn2.data;\n  const v344 = txn2.time;\n  const v340 = txn2.from;\n  ;\n  const v347 = stdlib.add(v579, stdlib.checkedBigNumberify('./index.rsh:108:63:decimal', stdlib.UInt_max, 90000));\n  let v360 = v66;\n  let v361 = stdlib.checkedBigNumberify('./index.rsh:110:80:decimal', stdlib.UInt_max, 0);\n  let v582 = v344;\n  let v583 = v579;\n  let v584 = v581;\n  \n  while ((() => {\n    const v367 = stdlib.gt(v347, v583);\n    \n    return v367;})()) {\n    const v429 = stdlib.sub(v347, v583);\n    const v385 = v341[stdlib.checkedBigNumberify('./index.rsh:115:81:array ref', stdlib.UInt_max, 0)];\n    const v386 = v341[stdlib.checkedBigNumberify('./index.rsh:115:91:array ref', stdlib.UInt_max, 1)];\n    const v387 = v360[stdlib.checkedBigNumberify('./index.rsh:115:102:array ref', stdlib.UInt_max, 0)];\n    const v388 = v360[stdlib.checkedBigNumberify('./index.rsh:115:111:array ref', stdlib.UInt_max, 1)];\n    const v389 = [v385, v386];\n    const v390 = [v387, v388];\n    const v391 = stdlib.protect(ctc6, await interact.shouldBuyTicket(v389, v390), {\n      at: './index.rsh:115:73:application',\n      fs: ['at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:114:25:function exp)', 'at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:110:56:function exp)'],\n      msg: 'shouldBuyTicket',\n      who: 'Voter'\n      });\n    \n    const v394 = v391[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n    \n    const txn3 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1, ctc6], [v22, v342, v347, v360, v361, v429, v582, v584, v391], [v394, []], [ctc6], true, false, v429, (async (txn3) => {\n      const sim_r = { txns: [] };\n      sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      \n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      sim_r.txns.push({\n        amt: v399,\n        kind: 'to',\n        tok: undefined\n        });\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        sim_r.txns.push({\n          amt: v399,\n          kind: 'from',\n          to: v396,\n          tok: undefined\n          });\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        \n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n          \n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            \n            return v367;})()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              \n              return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n            switch (v522[0]) {\n              case 'None': {\n                \n                const v527 = stdlib.eq(v487, v451);\n                const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v532 = ['Some', v523];\n                const v533 = [v532, v523];\n                const v534 = [v522, v531];\n                const v535 = v527 ? v533 : v534;\n                v524 = v535;\n                \n                break;\n                }\n              case 'Some': {\n                const v538 = v522[1];\n                v524 = v517;\n                \n                break;\n                }\n              }\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n            switch (v543[0]) {\n              case 'None': {\n                \n                v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v553 = v543[1];\n                v549 = v553;\n                \n                break;\n                }\n              }\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();}\n      else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        \n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n          \n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            \n            return v367;})()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              \n              return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n            switch (v522[0]) {\n              case 'None': {\n                \n                const v527 = stdlib.eq(v487, v451);\n                const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v532 = ['Some', v523];\n                const v533 = [v532, v523];\n                const v534 = [v522, v531];\n                const v535 = v527 ? v533 : v534;\n                v524 = v535;\n                \n                break;\n                }\n              case 'Some': {\n                const v538 = v522[1];\n                v524 = v517;\n                \n                break;\n                }\n              }\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n            switch (v543[0]) {\n              case 'None': {\n                \n                v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v553 = v543[1];\n                v549 = v553;\n                \n                break;\n                }\n              }\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();}\n      return sim_r;\n      })));\n    if (txn3.didTimeout) {\n      \n      const txn4 = await (ctc.sendrecv(9, 0, stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 6), [ctc0, ctc5, ctc1, ctc3, ctc1, ctc1, ctc1, ctc1], [v22, v342, v347, v360, v361, v429, v582, v584], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n        const sim_r = { txns: [] };\n        sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:dot', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n        const [] = txn4.data;\n        const v434 = txn4.time;\n        const v432 = txn4.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const cv360 = v360;\n        const cv361 = v361;\n        const cv582 = v434;\n        const cv583 = v582;\n        const cv584 = v584;\n        \n        (() => {\n          const v360 = cv360;\n          const v361 = cv361;\n          const v582 = cv582;\n          const v583 = cv583;\n          const v584 = cv584;\n          \n          if ((() => {\n            const v367 = stdlib.gt(v347, v583);\n            \n            return v367;})()) {\n            const v429 = stdlib.sub(v347, v583);\n            sim_r.nextSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v582, v584]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 5), v22, v342, v347, v360, v361, v429, v584]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:110:56:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }\n          else {\n            const v451 = v360.reduce((v443, v444) => {\n              const v447 = stdlib.gt(v444, v443);\n              const v449 = v447 ? v444 : v443;\n              \n              return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n            const v460 = ['None', null];\n            const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n            const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n            const v509 = stdlib.eq(v486, v451);\n            const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n            const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n            const v517 = v509 ? v514 : v516;\n            const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n            const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n            let v524;\n            switch (v522[0]) {\n              case 'None': {\n                \n                const v527 = stdlib.eq(v487, v451);\n                const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n                const v532 = ['Some', v523];\n                const v533 = [v532, v523];\n                const v534 = [v522, v531];\n                const v535 = v527 ? v533 : v534;\n                v524 = v535;\n                \n                break;\n                }\n              case 'Some': {\n                const v538 = v522[1];\n                v524 = v517;\n                \n                break;\n                }\n              }\n            const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n            let v549;\n            switch (v543[0]) {\n              case 'None': {\n                \n                v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n                \n                break;\n                }\n              case 'Some': {\n                const v553 = v543[1];\n                v549 = v553;\n                \n                break;\n                }\n              }\n            const v559 = v342[v549];\n            const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n            sim_r.txns.push({\n              amt: v584,\n              kind: 'from',\n              to: v560,\n              tok: undefined\n              });\n            sim_r.nextSt = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22, v582]);\n            sim_r.nextSt_noTime = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 6), v22]);\n            sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:151:21:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n            sim_r.isHalt = false;\n            }})();\n        return sim_r;\n        })));\n      const [] = txn4.data;\n      const v434 = txn4.time;\n      const v432 = txn4.from;\n      ;\n      const cv360 = v360;\n      const cv361 = v361;\n      const cv582 = v434;\n      const cv583 = v582;\n      const cv584 = v584;\n      \n      v360 = cv360;\n      v361 = cv361;\n      v582 = cv582;\n      v583 = cv583;\n      v584 = cv584;\n      \n      continue;\n      }\n    else {\n      const [v397] = txn3.data;\n      const v403 = txn3.time;\n      const v396 = txn3.from;\n      const v399 = v397[stdlib.checkedBigNumberify('./index.rsh:122:38:array ref', stdlib.UInt_max, 1)];\n      const v402 = stdlib.add(v584, v399);\n      ;\n      let v404;\n      const v405 = v397[stdlib.checkedBigNumberify('./index.rsh:124:35:array ref', stdlib.UInt_max, 0)];\n      const v406 = stdlib.ge(v405, stdlib.checkedBigNumberify('./index.rsh:124:40:decimal', stdlib.UInt_max, 2));\n      if (v406) {\n        const v411 = stdlib.sub(v402, v399);\n        ;\n        const v423 = [v360, v361];\n        v404 = v423;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v411;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}\n      else {\n        const v416 = v360[v405];\n        const v417 = stdlib.add(v416, stdlib.checkedBigNumberify('./index.rsh:129:76:decimal', stdlib.UInt_max, 1));\n        const v419 = stdlib.Array_set(v360, v405, v417);\n        const v421 = stdlib.add(v361, v399);\n        const v424 = [v419, v421];\n        v404 = v424;\n        const v425 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 0)];\n        const v426 = v404[stdlib.checkedBigNumberify('./index.rsh:110:19:array', stdlib.UInt_max, 1)];\n        const cv360 = v425;\n        const cv361 = v426;\n        const cv582 = v403;\n        const cv583 = v582;\n        const cv584 = v402;\n        \n        v360 = cv360;\n        v361 = cv361;\n        v582 = cv582;\n        v583 = cv583;\n        v584 = cv584;\n        \n        continue;}}\n    }\n  const v451 = v360.reduce((v443, v444) => {\n    const v447 = stdlib.gt(v444, v443);\n    const v449 = v447 ? v444 : v443;\n    \n    return v449;}, stdlib.checkedBigNumberify('reach standard library:124:62:decimal', stdlib.UInt_max, 0))\n  const v460 = ['None', null];\n  const v486 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 0)];\n  const v487 = v360[stdlib.checkedBigNumberify('reach standard library:159:17:application', stdlib.UInt_max, 1)];\n  const v509 = stdlib.eq(v486, v451);\n  const v513 = ['Some', stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v514 = [v513, stdlib.checkedBigNumberify('reach standard library:157:39:decimal', stdlib.UInt_max, 0)];\n  const v516 = [v460, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1)];\n  const v517 = v509 ? v514 : v516;\n  const v522 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 0)];\n  const v523 = v517[stdlib.checkedBigNumberify('reach standard library:160:15:array', stdlib.UInt_max, 1)];\n  let v524;\n  switch (v522[0]) {\n    case 'None': {\n      \n      const v527 = stdlib.eq(v487, v451);\n      const v531 = stdlib.add(v523, stdlib.checkedBigNumberify('reach standard library:166:34:decimal', stdlib.UInt_max, 1));\n      const v532 = ['Some', v523];\n      const v533 = [v532, v523];\n      const v534 = [v522, v531];\n      const v535 = v527 ? v533 : v534;\n      v524 = v535;\n      \n      break;\n      }\n    case 'Some': {\n      const v538 = v522[1];\n      v524 = v517;\n      \n      break;\n      }\n    }\n  const v543 = v524[stdlib.checkedBigNumberify('reach standard library:158:11:array', stdlib.UInt_max, 0)];\n  let v549;\n  switch (v543[0]) {\n    case 'None': {\n      \n      v549 = stdlib.checkedBigNumberify('./index.rsh:40:57:decimal', stdlib.UInt_max, 0);\n      \n      break;\n      }\n    case 'Some': {\n      const v553 = v543[1];\n      v549 = v553;\n      \n      break;\n      }\n    }\n  const v559 = v342[v549];\n  const v560 = v559[stdlib.checkedBigNumberify('./index.rsh:148:55:array ref', stdlib.UInt_max, 0)];\n  ;\n  const txn3 = await (ctc.recv(7, 1, [ctc1], false, false));\n  const [v573] = txn3.data;\n  const v576 = txn3.time;\n  const v572 = txn3.from;\n  ;\n  const v575 = stdlib.addressEq(v22, v572);\n  stdlib.assert(v575, {\n    at: './index.rsh:157:19:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Voter'\n    });\n  return;\n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m4}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\n// Don't check anyone else, because Handler does\n// Update state\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\ngtxna 0 ApplicationArgs 2\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(dg==)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  stepargs: [null, {\n    count: 7,\n    size: 121\n    }, null, null, {\n    count: 11,\n    size: 257\n    }, null, null, {\n    count: 8,\n    size: 129\n    }, {\n    count: 14,\n    size: 281\n    }, {\n    count: 13,\n    size: 265\n    }, {\n    count: 14,\n    size: 369\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 7\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:37:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 255\nint 0\nitob\nconcat\nint 0\nitob\nconcat\nstore 254\nint 0\nitob\nint 0\nitob\nconcat\nstore 253\nint 0\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nload 255\nload 255\nconcat\nconcat\nint 0\nitob\nconcat\nload 254\nload 254\nconcat\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\ngtxn 0 Sender\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\n// Handler 4\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 11\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:106:21:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxna 0 ApplicationArgs 5\nbtoi\nint 90000\n+\ndup\nstore 250\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 250\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 249\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 254\nconcat\nint 0\nitob\nconcat\nload 249\nitob\nconcat\nload 253\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\nload 254\nsubstring 0 8\nbtoi\nstore 249\nload 254\nsubstring 8 16\nbtoi\nstore 248\nint 0\nload 249\nload 249\nint 0\n>\nselect\ndup\nstore 247\nload 248\nload 248\nload 247\n>\nselect\nstore 246\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 249\nload 246\n==\nselect\ndup\nstore 245\nsubstring 0 9\nstore 244\nload 245\nsubstring 9 17\nbtoi\nstore 243\nload 244\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 244\nload 243\nint 1\n+\nitob\nconcat\nint 1\nload 243\nconcat\nbyte base64()\nconcat\nload 243\nitob\nconcat\nload 248\nload 246\n==\nselect\nstore 242\nl2:\nload 244\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 244\nsubstring 1 9\nbtoi\nstore 241\nload 245\nstore 242\nl3:\nl1:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 241\nl5:\nload 242\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 242\nsubstring 1 10\nbtoi\ndup\nstore 240\nstore 241\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 251\nint 48\nload 241\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 253\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nbtoi\nstore 254\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 8\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:157:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:157:19:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 1\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\nload 248\nsubstring 8 16\nbtoi\nstore 246\nload 249\nload 246\n+\nstore 245\n// \"CheckPay\"\n// \"./index.rsh:110:56:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n-\nload 246\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 0 8\nbtoi\ndup\nstore 243\nint 2\n>=\nbz l0\nload 245\nload 246\n-\nstore 242\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 4 Amount\nload 246\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nload 252\nload 251\nitob\nconcat\ndup\nstore 244\nsubstring 0 16\nstore 241\nload 244\nsubstring 16 24\nbtoi\nstore 240\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\ndup\nstore 239\nbz l1\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 238\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 241\nconcat\nload 240\nitob\nconcat\nload 238\nitob\nconcat\nload 242\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 238\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\nl1:\nload 241\nsubstring 0 8\nbtoi\nstore 238\nload 241\nsubstring 8 16\nbtoi\nstore 237\nint 0\nload 238\nload 238\nint 0\n>\nselect\ndup\nstore 236\nload 237\nload 237\nload 236\n>\nselect\nstore 235\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nstore 234\nload 238\nload 235\n==\nstore 233\nint 1\nint 0\nconcat\nbyte base64()\nconcat\ndup\nstore 232\nint 0\nitob\nconcat\nstore 231\nload 234\nint 1\nitob\nconcat\ndup\nstore 230\nload 231\nload 233\nselect\ndup\nstore 229\nsubstring 0 9\nstore 228\nload 229\nsubstring 9 17\nbtoi\nstore 227\nload 228\nint 0\ngetbyte\nint 0\n==\nbz l3\nload 237\nload 235\n==\nstore 225\nload 227\nint 1\n+\nstore 224\nint 1\nload 227\nconcat\nbyte base64()\nconcat\ndup\nstore 223\nload 227\nitob\nconcat\nstore 222\nload 228\nload 224\nitob\nconcat\ndup\nstore 221\nload 222\nload 225\nselect\ndup\nstore 220\nstore 226\nl3:\nload 228\nint 0\ngetbyte\nint 1\n==\nbz l4\nload 228\nsubstring 1 9\nbtoi\nstore 225\nload 229\nstore 226\nl4:\nl2:\nload 226\nsubstring 0 9\ndup\nstore 225\nint 0\ngetbyte\nint 0\n==\nbz l6\nint 0\nstore 224\nl6:\nload 225\nint 0\ngetbyte\nint 1\n==\nbz l7\nload 225\nsubstring 1 9\nbtoi\ndup\nstore 223\nstore 224\nl7:\nl5:\nload 254\nint 48\nload 224\n*\ndup\nint 48\n+\nsubstring3\ndup\nstore 223\nsubstring 0 32\nstore 222\ngtxn 5 TypeEnum\nint pay\n==\nassert\ngtxn 5 Receiver\nload 222\n==\nassert\ngtxn 5 Amount\nload 242\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\ndup\ngtxn 5 LastValid\n==\nassert\npop\nl0:\nload 252\nint 0\nint 8\nload 243\n*\nsubstring3\nload 252\nint 8\nload 243\n*\ndup\nint 8\n+\nsubstring3\nbtoi\nint 1\n+\nitob\nconcat\nload 252\nint 8\ndup\nload 243\n*\n+\nint 16\nsubstring3\nconcat\nload 251\nload 246\n+\nitob\nconcat\ndup\nstore 244\nsubstring 0 16\nstore 242\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l8\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 241\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 242\nconcat\nload 244\nsubstring 16 24\nconcat\nload 241\nitob\nconcat\nload 245\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 241\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\npop\nl8:\nload 242\nsubstring 0 8\nbtoi\nstore 241\nload 242\nsubstring 8 16\nbtoi\nstore 240\nint 0\nload 241\nload 241\nint 0\n>\nselect\ndup\nstore 239\nload 240\nload 240\nload 239\n>\nselect\nstore 238\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 241\nload 238\n==\nselect\ndup\nstore 237\nsubstring 0 9\nstore 236\nload 237\nsubstring 9 17\nbtoi\nstore 235\nload 236\nint 0\ngetbyte\nint 0\n==\nbz l10\nload 236\nload 235\nint 1\n+\nitob\nconcat\nint 1\nload 235\nconcat\nbyte base64()\nconcat\nload 235\nitob\nconcat\nload 240\nload 238\n==\nselect\nstore 234\nl10:\nload 236\nint 0\ngetbyte\nint 1\n==\nbz l11\nload 236\nsubstring 1 9\nbtoi\nstore 233\nload 237\nstore 234\nl11:\nl9:\nload 234\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l13\nint 0\nstore 233\nl13:\nload 234\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l14\nload 234\nsubstring 1 10\nbtoi\ndup\nstore 232\nstore 233\nl14:\nl12:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 233\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 245\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\ngtxn 4 Fee\n+\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 LastValid\n==\nassert\ndup\ngtxn 1 LastValid\n==\nassert\ndup\ngtxn 2 LastValid\n==\nassert\ndup\ngtxn 3 LastValid\n==\nassert\ndup\ngtxn 4 LastValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nbtoi\nstore 251\ngtxna 0 ApplicationArgs 11\nbtoi\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 13\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:110:56:dot\"\n// \"[at ./index.rsh:110:56:application call to [unknown function] (defined at: ./index.rsh:110:56:function exp)]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n>\nbz l0\nload 253\ngtxna 0 ApplicationArgs 5\nbtoi\n-\nstore 248\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nload 248\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 248\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\npop\nl0:\nload 252\nsubstring 0 8\nbtoi\nstore 248\nload 252\nsubstring 8 16\nbtoi\nstore 247\nint 0\nload 248\nload 248\nint 0\n>\nselect\ndup\nstore 246\nload 247\nload 247\nload 246\n>\nselect\nstore 245\nint 0\nbyte base64()\nconcat\nbyte base64(AAAAAAAAAAA=)\nconcat\nint 1\nitob\nconcat\nint 1\nint 0\nconcat\nbyte base64()\nconcat\nint 0\nitob\nconcat\nload 248\nload 245\n==\nselect\ndup\nstore 244\nsubstring 0 9\nstore 243\nload 244\nsubstring 9 17\nbtoi\nstore 242\nload 243\nint 0\ngetbyte\nint 0\n==\nbz l2\nload 243\nload 242\nint 1\n+\nitob\nconcat\nint 1\nload 242\nconcat\nbyte base64()\nconcat\nload 242\nitob\nconcat\nload 247\nload 245\n==\nselect\nstore 241\nl2:\nload 243\nint 0\ngetbyte\nint 1\n==\nbz l3\nload 243\nsubstring 1 9\nbtoi\nstore 240\nload 244\nstore 241\nl3:\nl1:\nload 241\nsubstring 0 9\nint 0\ngetbyte\nint 0\n==\nbz l5\nint 0\nstore 240\nl5:\nload 241\nsubstring 0 9\nint 0\ngetbyte\nint 1\n==\nbz l6\nload 241\nsubstring 1 10\nbtoi\ndup\nstore 239\nstore 240\nl6:\nl4:\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 254\nint 48\nload 240\n*\ndup\nint 48\n+\nsubstring3\nsubstring 0 32\n==\nassert\ngtxn 4 Amount\nload 249\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ngtxna 0 ApplicationArgs 5\nbtoi\nload 250\n+\ndup\ngtxn 0 FirstValid\n==\nassert\ndup\ngtxn 1 FirstValid\n==\nassert\ndup\ngtxn 2 FirstValid\n==\nassert\ndup\ngtxn 3 FirstValid\n==\nassert\ndup\ngtxn 4 FirstValid\n==\nassert\npop\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 6\nstore 255\ngtxna 0 ApplicationArgs 7\nstore 254\ngtxna 0 ApplicationArgs 8\nbtoi\nstore 253\ngtxna 0 ApplicationArgs 9\nstore 252\ngtxna 0 ApplicationArgs 10\nstore 251\ngtxna 0 ApplicationArgs 11\nstore 250\ngtxna 0 ApplicationArgs 12\nbtoi\nstore 249\ngtxna 0 ApplicationArgs 13\nstore 248\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 14\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:43:27:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\ngtxna 0 ApplicationArgs 4\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 248\nsubstring 8 40\nstore 247\nload 248\nsubstring 0 8\nbtoi\nstore 246\nload 247\nload 254\nsubstring 0 32\n==\nstore 245\nload 252\nint 0\nint 48\nload 253\n*\nsubstring3\nload 247\nload 253\nitob\nconcat\nload 246\nitob\nconcat\nconcat\nload 252\nint 48\ndup\nload 253\n*\n+\nint 96\nsubstring3\nconcat\nload 254\nint 0\nint 32\nload 253\n*\nsubstring3\nload 247\nconcat\nload 254\nint 32\ndup\nload 253\n*\n+\nint 64\nsubstring3\nconcat\nconcat\nload 253\nint 1\n+\nitob\nconcat\nload 251\nint 0\nint 8\nload 253\n*\nsubstring3\nload 246\nitob\nconcat\nload 251\nint 8\ndup\nload 253\n*\n+\nint 16\nsubstring3\nconcat\nconcat\nload 252\nload 254\nconcat\nload 253\nitob\nconcat\nload 251\nconcat\nload 247\nload 254\nsubstring 32 64\n==\nload 245\nload 245\nselect\nselect\ndup\nstore 244\nsubstring 160 168\nbtoi\ndup\nstore 243\nint 1\n<=\nbz l0\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 244\nsubstring 96 160\nconcat\nload 243\nitob\nconcat\nload 244\nsubstring 0 96\nconcat\nload 244\nsubstring 168 184\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\nl0:\n// check view bs\nint 0\nitob\ngtxna 0 ApplicationArgs 2\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 250\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 1\n==\nassert\ngtxna 0 ApplicationArgs 3\nbtoi\nint 0\n==\nassert\nb done\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\ngtxna 0 ApplicationArgs 4\nbtoi\nint 0\n==\nassert\n// Check time limits\ndone:\nint 1\nreturn\n`],\n  unsupported: false\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v58\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v59\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v60\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v61\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T33\",\n                \"name\": \"v296\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T35\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v341\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v573\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v397\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v18\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable[2]\",\n                \"name\": \"v58\",\n                \"type\": \"address[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v59\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v60\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v61\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem1\",\n                    \"type\": \"address\"\n                  }\n                ],\n                \"internalType\": \"struct T33\",\n                \"name\": \"v296\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T35\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v66\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v579\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v581\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v341\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v573\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T26\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem0\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T28\",\n                \"name\": \"v397\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v22\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"elem0\",\n                    \"type\": \"address\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem1\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"elem2\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T4[2]\",\n                \"name\": \"v342\",\n                \"type\": \"tuple[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v347\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"v360\",\n                \"type\": \"uint256[2]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v361\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v429\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v582\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v584\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T31\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: ``,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}