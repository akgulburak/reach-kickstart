{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/github/src/components/reach/FaucetModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Toast from \"react-bootstrap/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FaucetModal = ({\n  account,\n  setBalance,\n  show,\n  setShow,\n  unit\n}) => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [lastAmt, setLastAmt] = useState(0);\n\n  const handleClose = () => setShow(false);\n\n  const faucetMoney = async () => {\n    setClicked(true);\n\n    try {\n      const amountText = document.querySelector(\"#faucet-form\").value;\n      setLastAmt(amountText);\n      const amount = Reach.parseCurrency(amountText);\n      await Reach.fundFromFaucet(account, amount);\n      const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n      setBalance(balance);\n      console.log(`Faucet successful, new balance is ${balance} ALGO`);\n      setShowToast(true);\n      setClicked(false);\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      handleClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Faucet \", unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter faucet amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"faucet-form\",\n            \"aria-describedby\": \"unit-append\",\n            type: \"number\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              id: \"unit-append\",\n              children: unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: faucetMoney,\n          children: clicked ? /*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            size: \"sm\",\n            animation: \"border\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 35\n          }, this) : \"Faucet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FaucetToast, {\n      show: showToast,\n      onClose: () => setShowToast(false),\n      amount: lastAmt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FaucetModal, \"oyRykFAOHeH2+tLYoeihimyLeh8=\");\n\n_c = FaucetModal;\n\nconst FaucetToast = ({\n  show,\n  onClose,\n  amount\n}) => {\n  const screenHeight = window.innerHeight;\n  const faucetToastStyle = {\n    top: `${screenHeight * .8}px`,\n    left: \"2em\"\n  };\n  return /*#__PURE__*/_jsxDEV(Toast, {\n    className: \"position-absolute m-3\",\n    style: faucetToastStyle,\n    onClose: onClose,\n    show: show,\n    delay: 2000,\n    autohide: true,\n    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"mr-auto\",\n        children: \"Faucet Successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n      children: [\"Fauceted \", amount, \" ALGO successfully!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = FaucetToast;\nexport default FaucetModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FaucetModal\");\n$RefreshReg$(_c2, \"FaucetToast\");","map":{"version":3,"sources":["/home/x/reach/kick/github/src/components/reach/FaucetModal.js"],"names":["React","useState","Reach","Modal","Button","Form","InputGroup","Spinner","Toast","FaucetModal","account","setBalance","show","setShow","unit","clicked","setClicked","showToast","setShowToast","lastAmt","setLastAmt","handleClose","faucetMoney","amountText","document","querySelector","value","amount","parseCurrency","fundFromFaucet","balance","formatCurrency","balanceOf","console","log","err","error","FaucetToast","onClose","screenHeight","window","innerHeight","faucetToastStyle","top","left"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Spinner from \"react-bootstrap/Spinner\"\nimport Toast from \"react-bootstrap/Toast\";\n\nconst FaucetModal = ({ account, setBalance, show, setShow, unit }) => {\n\n    const [clicked, setClicked] = useState(false);\n    const [showToast, setShowToast] = useState(false);\n    const [lastAmt, setLastAmt] = useState(0);\n\n    const handleClose = () => setShow(false);\n\n    const faucetMoney = async () => {\n        setClicked(true);\n        try {\n            const amountText = document.querySelector(\"#faucet-form\").value;\n\n            setLastAmt(amountText);\n\n            const amount = Reach.parseCurrency(amountText);\n            await Reach.fundFromFaucet(account, amount);\n\n            const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n            setBalance(balance);\n            console.log(`Faucet successful, new balance is ${balance} ALGO`);\n\n            setShowToast(true);\n            setClicked(false);\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            handleClose();\n        }\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Faucet {unit}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>Enter faucet amount</p>\n                    <InputGroup>\n                        <Form.Control\n                            id=\"faucet-form\"\n                            aria-describedby=\"unit-append\"\n                            type=\"number\"\n                            step=\"0.1\" />\n                        <InputGroup.Append>\n                            <InputGroup.Text id=\"unit-append\">{unit}</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                </Button>\n                    <Button variant=\"primary\" onClick={faucetMoney}>\n                        {\n                            clicked\n                                ? <Spinner as=\"span\" size=\"sm\" animation=\"border\" variant=\"light\" />\n                                : \"Faucet\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <FaucetToast\n                show={showToast}\n                onClose={() => setShowToast(false)}\n                amount={lastAmt} />\n        </>\n    );\n}\n\nconst FaucetToast = ({ show, onClose, amount }) => {\n\n    const screenHeight = window.innerHeight;\n\n    const faucetToastStyle = {\n        top: `${screenHeight * .8}px`,\n        left: \"2em\",\n    };\n    return (\n        <Toast\n            className=\"position-absolute m-3\"\n            style={faucetToastStyle}\n            onClose={onClose}\n            show={show}\n            delay={2000}\n            autohide>\n\n            <Toast.Header>\n                <strong className=\"mr-auto\">Faucet Successful</strong>\n            </Toast.Header>\n\n            <Toast.Body>\n                Fauceted {amount} ALGO successfully!\n            </Toast.Body>\n        </Toast>\n    );\n}\n\nexport default FaucetModal;"]},"metadata":{},"sourceType":"module"}