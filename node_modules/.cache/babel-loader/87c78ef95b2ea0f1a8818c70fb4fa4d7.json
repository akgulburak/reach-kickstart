{"ast":null,"code":"/**\n * Base class for models\n */\n\n/* eslint-disable no-underscore-dangle,camelcase,class-methods-use-this */\nclass BaseModel {\n  _is_primitive(val) {\n    return val === undefined || val == null || typeof val !== 'object' && typeof val !== 'function';\n  }\n\n  _is_address(val) {\n    return val.publicKey !== undefined && val.checksum !== undefined;\n  }\n\n  _get_obj_for_encoding(val) {\n    let targetPropValue;\n\n    if (typeof val.get_obj_for_encoding === 'function') {\n      targetPropValue = val.get_obj_for_encoding();\n    } else if (Array.isArray(val)) {\n      targetPropValue = [];\n\n      for (const elem of val) {\n        targetPropValue.push(this._get_obj_for_encoding(elem));\n      }\n    } else if (typeof val === 'object') {\n      const obj = {};\n\n      for (const prop of Object.keys(val)) {\n        obj[prop] = this._get_obj_for_encoding(val[prop]);\n      }\n\n      targetPropValue = obj;\n    } else if (this._is_primitive(val)) {\n      targetPropValue = val;\n    } else {\n      throw new Error(`Unsupported value: ${String(val)}`);\n    }\n\n    return targetPropValue;\n  }\n\n  get_obj_for_encoding() {\n    const obj = {};\n\n    for (const prop of Object.keys(this)) {\n      const val = this[prop];\n\n      if (prop !== 'attribute_map' && typeof val !== 'undefined') {\n        const name = this.attribute_map[prop];\n        obj[name] = val === null ? null : this._get_obj_for_encoding(val);\n      }\n    }\n\n    return obj;\n  }\n\n}\n\nmodule.exports = {\n  BaseModel\n};","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/algosdk/src/client/v2/algod/models/base.js"],"names":["BaseModel","_is_primitive","val","undefined","_is_address","publicKey","checksum","_get_obj_for_encoding","targetPropValue","get_obj_for_encoding","Array","isArray","elem","push","obj","prop","Object","keys","Error","String","name","attribute_map","module","exports"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,MAAMA,SAAN,CAAgB;AACdC,EAAAA,aAAa,CAACC,GAAD,EAAM;AACjB,WACEA,GAAG,KAAKC,SAAR,IACAD,GAAG,IAAI,IADP,IAEC,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAH7C;AAKD;;AAEDE,EAAAA,WAAW,CAACF,GAAD,EAAM;AACf,WAAOA,GAAG,CAACG,SAAJ,KAAkBF,SAAlB,IAA+BD,GAAG,CAACI,QAAJ,KAAiBH,SAAvD;AACD;;AAEDI,EAAAA,qBAAqB,CAACL,GAAD,EAAM;AACzB,QAAIM,eAAJ;;AACA,QAAI,OAAON,GAAG,CAACO,oBAAX,KAAoC,UAAxC,EAAoD;AAClDD,MAAAA,eAAe,GAAGN,GAAG,CAACO,oBAAJ,EAAlB;AACD,KAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcT,GAAd,CAAJ,EAAwB;AAC7BM,MAAAA,eAAe,GAAG,EAAlB;;AACA,WAAK,MAAMI,IAAX,IAAmBV,GAAnB,EAAwB;AACtBM,QAAAA,eAAe,CAACK,IAAhB,CAAqB,KAAKN,qBAAL,CAA2BK,IAA3B,CAArB;AACD;AACF,KALM,MAKA,IAAI,OAAOV,GAAP,KAAe,QAAnB,EAA6B;AAClC,YAAMY,GAAG,GAAG,EAAZ;;AACA,WAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYf,GAAZ,CAAnB,EAAqC;AACnCY,QAAAA,GAAG,CAACC,IAAD,CAAH,GAAY,KAAKR,qBAAL,CAA2BL,GAAG,CAACa,IAAD,CAA9B,CAAZ;AACD;;AACDP,MAAAA,eAAe,GAAGM,GAAlB;AACD,KANM,MAMA,IAAI,KAAKb,aAAL,CAAmBC,GAAnB,CAAJ,EAA6B;AAClCM,MAAAA,eAAe,GAAGN,GAAlB;AACD,KAFM,MAEA;AACL,YAAM,IAAIgB,KAAJ,CAAW,sBAAqBC,MAAM,CAACjB,GAAD,CAAM,EAA5C,CAAN;AACD;;AACD,WAAOM,eAAP;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,UAAMK,GAAG,GAAG,EAAZ;;AACA,SAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAnB,EAAsC;AACpC,YAAMf,GAAG,GAAG,KAAKa,IAAL,CAAZ;;AACA,UAAIA,IAAI,KAAK,eAAT,IAA4B,OAAOb,GAAP,KAAe,WAA/C,EAA4D;AAC1D,cAAMkB,IAAI,GAAG,KAAKC,aAAL,CAAmBN,IAAnB,CAAb;AACAD,QAAAA,GAAG,CAACM,IAAD,CAAH,GAAYlB,GAAG,KAAK,IAAR,GAAe,IAAf,GAAsB,KAAKK,qBAAL,CAA2BL,GAA3B,CAAlC;AACD;AACF;;AACD,WAAOY,GAAP;AACD;;AA9Ca;;AAiDhBQ,MAAM,CAACC,OAAP,GAAiB;AAAEvB,EAAAA;AAAF,CAAjB","sourcesContent":["/**\n * Base class for models\n */\n\n/* eslint-disable no-underscore-dangle,camelcase,class-methods-use-this */\nclass BaseModel {\n  _is_primitive(val) {\n    return (\n      val === undefined ||\n      val == null ||\n      (typeof val !== 'object' && typeof val !== 'function')\n    );\n  }\n\n  _is_address(val) {\n    return val.publicKey !== undefined && val.checksum !== undefined;\n  }\n\n  _get_obj_for_encoding(val) {\n    let targetPropValue;\n    if (typeof val.get_obj_for_encoding === 'function') {\n      targetPropValue = val.get_obj_for_encoding();\n    } else if (Array.isArray(val)) {\n      targetPropValue = [];\n      for (const elem of val) {\n        targetPropValue.push(this._get_obj_for_encoding(elem));\n      }\n    } else if (typeof val === 'object') {\n      const obj = {};\n      for (const prop of Object.keys(val)) {\n        obj[prop] = this._get_obj_for_encoding(val[prop]);\n      }\n      targetPropValue = obj;\n    } else if (this._is_primitive(val)) {\n      targetPropValue = val;\n    } else {\n      throw new Error(`Unsupported value: ${String(val)}`);\n    }\n    return targetPropValue;\n  }\n\n  get_obj_for_encoding() {\n    const obj = {};\n    for (const prop of Object.keys(this)) {\n      const val = this[prop];\n      if (prop !== 'attribute_map' && typeof val !== 'undefined') {\n        const name = this.attribute_map[prop];\n        obj[name] = val === null ? null : this._get_obj_for_encoding(val);\n      }\n    }\n    return obj;\n  }\n}\n\nmodule.exports = { BaseModel };\n"]},"metadata":{},"sourceType":"script"}