{"ast":null,"code":"const {\n  JSONRequest\n} = require('../jsonrequest');\n\nclass LookupAssetBalances extends JSONRequest {\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n  } // eslint-disable-next-line no-underscore-dangle\n\n\n  _path() {\n    return `/v2/assets/${this.index}/balances`;\n  } // limit for filter, as int\n\n\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  } // round to filter with, as int\n\n\n  round(round) {\n    this.query.round = round;\n    return this;\n  } // filtered results should have an amount greater than this value, as int, with units representing the asset\n\n\n  currencyGreaterThan(greater) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  } // filtered results should have an amount less than this value, as int, with units representing the asset units\n\n\n  currencyLessThan(lesser) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  } // used for pagination\n\n\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  } // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n\n\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n}\n\nmodule.exports = {\n  LookupAssetBalances\n};","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/node_modules/algosdk/src/client/v2/indexer/lookupAssetBalances.js"],"names":["JSONRequest","require","LookupAssetBalances","constructor","c","intDecoding","index","_path","limit","query","round","currencyGreaterThan","greater","currencyLessThan","lesser","nextToken","next","includeAll","value","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,gBAAD,CAA/B;;AAEA,MAAMC,mBAAN,SAAkCF,WAAlC,CAA8C;AAC5CG,EAAAA,WAAW,CAACC,CAAD,EAAIC,WAAJ,EAAiBC,KAAjB,EAAwB;AACjC,UAAMF,CAAN,EAASC,WAAT;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD,GAJ2C,CAM5C;;;AACAC,EAAAA,KAAK,GAAG;AACN,WAAQ,cAAa,KAAKD,KAAM,WAAhC;AACD,GAT2C,CAW5C;;;AACAE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKC,KAAL,CAAWD,KAAX,GAAmBA,KAAnB;AACA,WAAO,IAAP;AACD,GAf2C,CAiB5C;;;AACAE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,SAAKD,KAAL,CAAWC,KAAX,GAAmBA,KAAnB;AACA,WAAO,IAAP;AACD,GArB2C,CAuB5C;;;AACAC,EAAAA,mBAAmB,CAACC,OAAD,EAAU;AAC3B,SAAKH,KAAL,CAAW,uBAAX,IAAsCG,OAAtC;AACA,WAAO,IAAP;AACD,GA3B2C,CA6B5C;;;AACAC,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACvB,SAAKL,KAAL,CAAW,oBAAX,IAAmCK,MAAnC;AACA,WAAO,IAAP;AACD,GAjC2C,CAmC5C;;;AACAC,EAAAA,SAAS,CAACA,SAAD,EAAY;AACnB,SAAKN,KAAL,CAAWO,IAAX,GAAkBD,SAAlB;AACA,WAAO,IAAP;AACD,GAvC2C,CAyC5C;;;AACAE,EAAAA,UAAU,CAACC,KAAK,GAAG,IAAT,EAAe;AACvB,SAAKT,KAAL,CAAW,aAAX,IAA4BS,KAA5B;AACA,WAAO,IAAP;AACD;;AA7C2C;;AAgD9CC,MAAM,CAACC,OAAP,GAAiB;AAAElB,EAAAA;AAAF,CAAjB","sourcesContent":["const { JSONRequest } = require('../jsonrequest');\n\nclass LookupAssetBalances extends JSONRequest {\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  _path() {\n    return `/v2/assets/${this.index}/balances`;\n  }\n\n  // limit for filter, as int\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // round to filter with, as int\n  round(round) {\n    this.query.round = round;\n    return this;\n  }\n\n  // filtered results should have an amount greater than this value, as int, with units representing the asset\n  currencyGreaterThan(greater) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  // filtered results should have an amount less than this value, as int, with units representing the asset units\n  currencyLessThan(lesser) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  // used for pagination\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  // include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n\nmodule.exports = { LookupAssetBalances };\n"]},"metadata":{},"sourceType":"script"}