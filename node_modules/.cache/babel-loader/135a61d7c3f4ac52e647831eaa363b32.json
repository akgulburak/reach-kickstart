{"ast":null,"code":"!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof exports ? exports.MessagePack = e() : t.MessagePack = e();\n}(this, function () {\n  return function (t) {\n    var e = {};\n\n    function r(n) {\n      if (e[n]) return e[n].exports;\n      var i = e[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return t[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n    }\n\n    return r.m = t, r.c = e, r.d = function (t, e, n) {\n      r.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n      });\n    }, r.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, r.t = function (t, e) {\n      if (1 & e && (t = r(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var n = Object.create(null);\n      if (r.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var i in t) r.d(n, i, function (e) {\n        return t[e];\n      }.bind(null, i));\n      return n;\n    }, r.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return r.d(e, \"a\", e), e;\n    }, r.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, r.p = \"\", r(r.s = 0);\n  }([function (t, e, r) {\n    \"use strict\";\n\n    r.r(e), r.d(e, \"encode\", function () {\n      return T;\n    }), r.d(e, \"decode\", function () {\n      return V;\n    }), r.d(e, \"decodeAsync\", function () {\n      return Y;\n    }), r.d(e, \"decodeArrayStream\", function () {\n      return Z;\n    }), r.d(e, \"decodeStream\", function () {\n      return $;\n    }), r.d(e, \"Decoder\", function () {\n      return O;\n    }), r.d(e, \"Encoder\", function () {\n      return I;\n    }), r.d(e, \"ExtensionCodec\", function () {\n      return S;\n    }), r.d(e, \"ExtData\", function () {\n      return p;\n    }), r.d(e, \"EXT_TIMESTAMP\", function () {\n      return w;\n    }), r.d(e, \"encodeDateToTimeSpec\", function () {\n      return g;\n    }), r.d(e, \"encodeTimeSpecToTimestamp\", function () {\n      return v;\n    }), r.d(e, \"decodeTimestampToTimeSpec\", function () {\n      return U;\n    }), r.d(e, \"encodeTimestampExtension\", function () {\n      return b;\n    }), r.d(e, \"decodeTimestampExtension\", function () {\n      return m;\n    });\n\n    var n = function (t, e) {\n      var r = \"function\" == typeof Symbol && t[Symbol.iterator];\n      if (!r) return t;\n      var n,\n          i,\n          o = r.call(t),\n          s = [];\n\n      try {\n        for (; (void 0 === e || e-- > 0) && !(n = o.next()).done;) s.push(n.value);\n      } catch (t) {\n        i = {\n          error: t\n        };\n      } finally {\n        try {\n          n && !n.done && (r = o.return) && r.call(o);\n        } finally {\n          if (i) throw i.error;\n        }\n      }\n\n      return s;\n    },\n        i = function () {\n      for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(n(arguments[e]));\n\n      return t;\n    },\n        o = \"undefined\" != typeof process && \"undefined\" != typeof TextEncoder && \"undefined\" != typeof TextDecoder;\n\n    function s(t) {\n      for (var e = t.length, r = 0, n = 0; n < e;) {\n        var i = t.charCodeAt(n++);\n        if (0 != (4294967168 & i)) {\n          if (0 == (4294965248 & i)) r += 2;else {\n            if (i >= 55296 && i <= 56319 && n < e) {\n              var o = t.charCodeAt(n);\n              56320 == (64512 & o) && (++n, i = ((1023 & i) << 10) + (1023 & o) + 65536);\n            }\n\n            r += 0 == (4294901760 & i) ? 3 : 4;\n          }\n        } else r++;\n      }\n\n      return r;\n    }\n\n    var a = o ? new TextEncoder() : void 0,\n        h = \"undefined\" != typeof process ? 200 : 0;\n    var u = (null == a ? void 0 : a.encodeInto) ? function (t, e, r) {\n      a.encodeInto(t, e.subarray(r));\n    } : function (t, e, r) {\n      e.set(a.encode(t), r);\n    };\n\n    function c(t, e, r) {\n      for (var n = e, o = n + r, s = [], a = \"\"; n < o;) {\n        var h = t[n++];\n        if (0 == (128 & h)) s.push(h);else if (192 == (224 & h)) {\n          var u = 63 & t[n++];\n          s.push((31 & h) << 6 | u);\n        } else if (224 == (240 & h)) {\n          u = 63 & t[n++];\n          var c = 63 & t[n++];\n          s.push((31 & h) << 12 | u << 6 | c);\n        } else if (240 == (248 & h)) {\n          var f = (7 & h) << 18 | (u = 63 & t[n++]) << 12 | (c = 63 & t[n++]) << 6 | 63 & t[n++];\n          f > 65535 && (f -= 65536, s.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), s.push(f);\n        } else s.push(h);\n        s.length >= 4096 && (a += String.fromCharCode.apply(String, i(s)), s.length = 0);\n      }\n\n      return s.length > 0 && (a += String.fromCharCode.apply(String, i(s))), a;\n    }\n\n    var f = o ? new TextDecoder() : null,\n        l = \"undefined\" != typeof process ? 200 : 0;\n\n    var p = function (t, e) {\n      this.type = t, this.data = e;\n    };\n\n    function d(t, e, r) {\n      var n = Math.floor(r / 4294967296),\n          i = r;\n      t.setUint32(e, n), t.setUint32(e + 4, i);\n    }\n\n    function y(t, e) {\n      var r = t.getInt32(e),\n          n = t.getUint32(e + 4),\n          i = r < Math.floor(Number.MIN_SAFE_INTEGER / 4294967296) || r === Math.floor(Number.MIN_SAFE_INTEGER / 4294967296) && 0 === n,\n          o = r > Math.floor(Number.MAX_SAFE_INTEGER / 4294967296);\n      return i || o ? BigInt(r) * BigInt(4294967296) + BigInt(n) : 4294967296 * r + n;\n    }\n\n    var w = -1;\n\n    function v(t) {\n      var e = t.sec,\n          r = t.nsec;\n\n      if (e >= 0 && r >= 0 && e <= 17179869183) {\n        if (0 === r && e <= 4294967295) {\n          var n = new Uint8Array(4);\n          return (s = new DataView(n.buffer)).setUint32(0, e), n;\n        }\n\n        var i = e / 4294967296,\n            o = 4294967295 & e;\n        n = new Uint8Array(8);\n        return (s = new DataView(n.buffer)).setUint32(0, r << 2 | 3 & i), s.setUint32(4, o), n;\n      }\n\n      var s;\n      n = new Uint8Array(12);\n      return (s = new DataView(n.buffer)).setUint32(0, r), d(s, 4, e), n;\n    }\n\n    function g(t) {\n      var e = t.getTime(),\n          r = Math.floor(e / 1e3),\n          n = 1e6 * (e - 1e3 * r),\n          i = Math.floor(n / 1e9);\n      return {\n        sec: r + i,\n        nsec: n - 1e9 * i\n      };\n    }\n\n    function b(t) {\n      return t instanceof Date ? v(g(t)) : null;\n    }\n\n    function U(t) {\n      var e = new DataView(t.buffer, t.byteOffset, t.byteLength);\n\n      switch (t.byteLength) {\n        case 4:\n          return {\n            sec: e.getUint32(0),\n            nsec: 0\n          };\n\n        case 8:\n          var r = e.getUint32(0);\n          return {\n            sec: 4294967296 * (3 & r) + e.getUint32(4),\n            nsec: r >>> 2\n          };\n\n        case 12:\n          return {\n            sec: y(e, 4),\n            nsec: e.getUint32(0)\n          };\n\n        default:\n          throw new Error(\"Unrecognized data size for timestamp: \" + t.length);\n      }\n    }\n\n    function m(t) {\n      var e = U(t);\n      return new Date(1e3 * e.sec + e.nsec / 1e6);\n    }\n\n    var x = {\n      type: w,\n      encode: b,\n      decode: m\n    },\n        S = function () {\n      function t() {\n        this.builtInEncoders = [], this.builtInDecoders = [], this.encoders = [], this.decoders = [], this.register(x);\n      }\n\n      return t.prototype.register = function (t) {\n        var e = t.type,\n            r = t.encode,\n            n = t.decode;\n        if (e >= 0) this.encoders[e] = r, this.decoders[e] = n;else {\n          var i = 1 + e;\n          this.builtInEncoders[i] = r, this.builtInDecoders[i] = n;\n        }\n      }, t.prototype.tryToEncode = function (t, e) {\n        for (var r = 0; r < this.builtInEncoders.length; r++) {\n          if (null != (n = this.builtInEncoders[r])) if (null != (i = n(t, e))) return new p(-1 - r, i);\n        }\n\n        for (r = 0; r < this.encoders.length; r++) {\n          var n, i;\n          if (null != (n = this.encoders[r])) if (null != (i = n(t, e))) return new p(r, i);\n        }\n\n        return t instanceof p ? t : null;\n      }, t.prototype.decode = function (t, e, r) {\n        var n = e < 0 ? this.builtInDecoders[-1 - e] : this.decoders[e];\n        return n ? n(t, e, r) : new p(e, t);\n      }, t.defaultCodec = new t(), t;\n    }();\n\n    function B(t) {\n      return t instanceof Uint8Array ? t : ArrayBuffer.isView(t) ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t instanceof ArrayBuffer ? new Uint8Array(t) : Uint8Array.from(t);\n    }\n\n    var E = function (t) {\n      var e = \"function\" == typeof Symbol && Symbol.iterator,\n          r = e && t[e],\n          n = 0;\n      if (r) return r.call(t);\n      if (t && \"number\" == typeof t.length) return {\n        next: function () {\n          return t && n >= t.length && (t = void 0), {\n            value: t && t[n++],\n            done: !t\n          };\n        }\n      };\n      throw new TypeError(e ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        I = function () {\n      function t(t, e, r, n, i, o, s, a) {\n        void 0 === t && (t = S.defaultCodec), void 0 === e && (e = void 0), void 0 === r && (r = 100), void 0 === n && (n = 2048), void 0 === i && (i = !1), void 0 === o && (o = !1), void 0 === s && (s = !1), void 0 === a && (a = !1), this.extensionCodec = t, this.context = e, this.maxDepth = r, this.initialBufferSize = n, this.sortKeys = i, this.forceFloat32 = o, this.ignoreUndefined = s, this.forceIntegerToFloat = a, this.pos = 0, this.view = new DataView(new ArrayBuffer(this.initialBufferSize)), this.bytes = new Uint8Array(this.view.buffer);\n      }\n\n      return t.prototype.getUint8Array = function () {\n        return this.bytes.subarray(0, this.pos);\n      }, t.prototype.reinitializeState = function () {\n        this.pos = 0;\n      }, t.prototype.encode = function (t) {\n        return this.reinitializeState(), this.doEncode(t, 1), this.getUint8Array();\n      }, t.prototype.doEncode = function (t, e) {\n        if (e > this.maxDepth) throw new Error(\"Too deep objects in depth \" + e);\n        null == t ? this.encodeNil() : \"boolean\" == typeof t ? this.encodeBoolean(t) : \"number\" == typeof t ? this.encodeNumber(t) : \"string\" == typeof t ? this.encodeString(t) : \"bigint\" == typeof t ? this.encodebigint(t) : this.encodeObject(t, e);\n      }, t.prototype.ensureBufferSizeToWrite = function (t) {\n        var e = this.pos + t;\n        this.view.byteLength < e && this.resizeBuffer(2 * e);\n      }, t.prototype.resizeBuffer = function (t) {\n        var e = new ArrayBuffer(t),\n            r = new Uint8Array(e),\n            n = new DataView(e);\n        r.set(this.bytes), this.view = n, this.bytes = r;\n      }, t.prototype.encodeNil = function () {\n        this.writeU8(192);\n      }, t.prototype.encodeBoolean = function (t) {\n        !1 === t ? this.writeU8(194) : this.writeU8(195);\n      }, t.prototype.encodeNumber = function (t) {\n        Number.isSafeInteger(t) && !this.forceIntegerToFloat ? t >= 0 ? t < 128 ? this.writeU8(t) : t < 256 ? (this.writeU8(204), this.writeU8(t)) : t < 65536 ? (this.writeU8(205), this.writeU16(t)) : t < 4294967296 ? (this.writeU8(206), this.writeU32(t)) : (this.writeU8(207), this.writeU64(t)) : t >= -32 ? this.writeU8(224 | t + 32) : t >= -128 ? (this.writeU8(208), this.writeI8(t)) : t >= -32768 ? (this.writeU8(209), this.writeI16(t)) : t >= -2147483648 ? (this.writeU8(210), this.writeI32(t)) : (this.writeU8(211), this.writeI64(t)) : this.forceFloat32 ? (this.writeU8(202), this.writeF32(t)) : (this.writeU8(203), this.writeF64(t));\n      }, t.prototype.encodebigint = function (t) {\n        t >= BigInt(0) ? t < BigInt(128) ? this.writeU8(Number(t)) : t < BigInt(256) ? (this.writeU8(204), this.writeU8(Number(t))) : t < BigInt(65536) ? (this.writeU8(205), this.writeU16(Number(t))) : t < BigInt(4294967296) ? (this.writeU8(206), this.writeU32(Number(t))) : (this.writeU8(207), this.writeBig64(t)) : t >= BigInt(-32) ? this.writeU8(224 | Number(t) + 32) : t >= BigInt(-128) ? (this.writeU8(208), this.writeI8(Number(t))) : t >= BigInt(-32768) ? (this.writeU8(209), this.writeI16(Number(t))) : t >= BigInt(-2147483648) ? (this.writeU8(210), this.writeI32(Number(t))) : (this.writeU8(211), this.writeBig64(t));\n      }, t.prototype.writeStringHeader = function (t) {\n        if (t < 32) this.writeU8(160 + t);else if (t < 256) this.writeU8(217), this.writeU8(t);else if (t < 65536) this.writeU8(218), this.writeU16(t);else {\n          if (!(t < 4294967296)) throw new Error(\"Too long string: \" + t + \" bytes in UTF-8\");\n          this.writeU8(219), this.writeU32(t);\n        }\n      }, t.prototype.encodeString = function (t) {\n        var e = t.length;\n\n        if (o && e > h) {\n          var r = s(t);\n          this.ensureBufferSizeToWrite(5 + r), this.writeStringHeader(r), u(t, this.bytes, this.pos), this.pos += r;\n        } else {\n          r = s(t);\n          this.ensureBufferSizeToWrite(5 + r), this.writeStringHeader(r), function (t, e, r) {\n            for (var n = t.length, i = r, o = 0; o < n;) {\n              var s = t.charCodeAt(o++);\n\n              if (0 != (4294967168 & s)) {\n                if (0 == (4294965248 & s)) e[i++] = s >> 6 & 31 | 192;else {\n                  if (s >= 55296 && s <= 56319 && o < n) {\n                    var a = t.charCodeAt(o);\n                    56320 == (64512 & a) && (++o, s = ((1023 & s) << 10) + (1023 & a) + 65536);\n                  }\n\n                  0 == (4294901760 & s) ? (e[i++] = s >> 12 & 15 | 224, e[i++] = s >> 6 & 63 | 128) : (e[i++] = s >> 18 & 7 | 240, e[i++] = s >> 12 & 63 | 128, e[i++] = s >> 6 & 63 | 128);\n                }\n                e[i++] = 63 & s | 128;\n              } else e[i++] = s;\n            }\n          }(t, this.bytes, this.pos), this.pos += r;\n        }\n      }, t.prototype.encodeObject = function (t, e) {\n        var r = this.extensionCodec.tryToEncode(t, this.context);\n        if (null != r) this.encodeExtension(r);else if (Array.isArray(t)) this.encodeArray(t, e);else if (ArrayBuffer.isView(t)) this.encodeBinary(t);else {\n          if (\"object\" != typeof t) throw new Error(\"Unrecognized object: \" + Object.prototype.toString.apply(t));\n          this.encodeMap(t, e);\n        }\n      }, t.prototype.encodeBinary = function (t) {\n        var e = t.byteLength;\n        if (e < 256) this.writeU8(196), this.writeU8(e);else if (e < 65536) this.writeU8(197), this.writeU16(e);else {\n          if (!(e < 4294967296)) throw new Error(\"Too large binary: \" + e);\n          this.writeU8(198), this.writeU32(e);\n        }\n        var r = B(t);\n        this.writeU8a(r);\n      }, t.prototype.encodeArray = function (t, e) {\n        var r,\n            n,\n            i = t.length;\n        if (i < 16) this.writeU8(144 + i);else if (i < 65536) this.writeU8(220), this.writeU16(i);else {\n          if (!(i < 4294967296)) throw new Error(\"Too large array: \" + i);\n          this.writeU8(221), this.writeU32(i);\n        }\n\n        try {\n          for (var o = E(t), s = o.next(); !s.done; s = o.next()) {\n            var a = s.value;\n            this.doEncode(a, e + 1);\n          }\n        } catch (t) {\n          r = {\n            error: t\n          };\n        } finally {\n          try {\n            s && !s.done && (n = o.return) && n.call(o);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n      }, t.prototype.countWithoutUndefined = function (t, e) {\n        var r,\n            n,\n            i = 0;\n\n        try {\n          for (var o = E(e), s = o.next(); !s.done; s = o.next()) {\n            void 0 !== t[s.value] && i++;\n          }\n        } catch (t) {\n          r = {\n            error: t\n          };\n        } finally {\n          try {\n            s && !s.done && (n = o.return) && n.call(o);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n\n        return i;\n      }, t.prototype.encodeMap = function (t, e) {\n        var r,\n            n,\n            i = Object.keys(t);\n        this.sortKeys && i.sort();\n        var o = this.ignoreUndefined ? this.countWithoutUndefined(t, i) : i.length;\n        if (o < 16) this.writeU8(128 + o);else if (o < 65536) this.writeU8(222), this.writeU16(o);else {\n          if (!(o < 4294967296)) throw new Error(\"Too large map object: \" + o);\n          this.writeU8(223), this.writeU32(o);\n        }\n\n        try {\n          for (var s = E(i), a = s.next(); !a.done; a = s.next()) {\n            var h = a.value,\n                u = t[h];\n            this.ignoreUndefined && void 0 === u || (this.encodeString(h), this.doEncode(u, e + 1));\n          }\n        } catch (t) {\n          r = {\n            error: t\n          };\n        } finally {\n          try {\n            a && !a.done && (n = s.return) && n.call(s);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n      }, t.prototype.encodeExtension = function (t) {\n        var e = t.data.length;\n        if (1 === e) this.writeU8(212);else if (2 === e) this.writeU8(213);else if (4 === e) this.writeU8(214);else if (8 === e) this.writeU8(215);else if (16 === e) this.writeU8(216);else if (e < 256) this.writeU8(199), this.writeU8(e);else if (e < 65536) this.writeU8(200), this.writeU16(e);else {\n          if (!(e < 4294967296)) throw new Error(\"Too large extension object: \" + e);\n          this.writeU8(201), this.writeU32(e);\n        }\n        this.writeI8(t.type), this.writeU8a(t.data);\n      }, t.prototype.writeU8 = function (t) {\n        this.ensureBufferSizeToWrite(1), this.view.setUint8(this.pos, t), this.pos++;\n      }, t.prototype.writeU8a = function (t) {\n        var e = t.length;\n        this.ensureBufferSizeToWrite(e), this.bytes.set(t, this.pos), this.pos += e;\n      }, t.prototype.writeI8 = function (t) {\n        this.ensureBufferSizeToWrite(1), this.view.setInt8(this.pos, t), this.pos++;\n      }, t.prototype.writeU16 = function (t) {\n        this.ensureBufferSizeToWrite(2), this.view.setUint16(this.pos, t), this.pos += 2;\n      }, t.prototype.writeI16 = function (t) {\n        this.ensureBufferSizeToWrite(2), this.view.setInt16(this.pos, t), this.pos += 2;\n      }, t.prototype.writeU32 = function (t) {\n        this.ensureBufferSizeToWrite(4), this.view.setUint32(this.pos, t), this.pos += 4;\n      }, t.prototype.writeI32 = function (t) {\n        this.ensureBufferSizeToWrite(4), this.view.setInt32(this.pos, t), this.pos += 4;\n      }, t.prototype.writeF32 = function (t) {\n        this.ensureBufferSizeToWrite(4), this.view.setFloat32(this.pos, t), this.pos += 4;\n      }, t.prototype.writeF64 = function (t) {\n        this.ensureBufferSizeToWrite(8), this.view.setFloat64(this.pos, t), this.pos += 8;\n      }, t.prototype.writeU64 = function (t) {\n        this.ensureBufferSizeToWrite(8), function (t, e, r) {\n          var n = r / 4294967296,\n              i = r;\n          t.setUint32(e, n), t.setUint32(e + 4, i);\n        }(this.view, this.pos, t), this.pos += 8;\n      }, t.prototype.writeI64 = function (t) {\n        this.ensureBufferSizeToWrite(8), d(this.view, this.pos, t), this.pos += 8;\n      }, t.prototype.writeBig64 = function (t) {\n        this.ensureBufferSizeToWrite(8), function (t, e, r) {\n          var n = Number(r / BigInt(4294967296)),\n              i = Number(r % BigInt(4294967296));\n          n < 0 && 0 !== i && (n -= 1), t.setUint32(e, n), t.setUint32(e + 4, i);\n        }(this.view, this.pos, t), this.pos += 8;\n      }, t;\n    }(),\n        A = {};\n\n    function T(t, e) {\n      return void 0 === e && (e = A), new I(e.extensionCodec, e.context, e.maxDepth, e.initialBufferSize, e.sortKeys, e.forceFloat32, e.ignoreUndefined, e.forceIntegerToFloat).encode(t);\n    }\n\n    function L(t) {\n      return (t < 0 ? \"-\" : \"\") + \"0x\" + Math.abs(t).toString(16).padStart(2, \"0\");\n    }\n\n    var M = function () {\n      function t(t, e) {\n        void 0 === t && (t = 16), void 0 === e && (e = 16), this.maxKeyLength = t, this.maxLengthPerKey = e, this.hit = 0, this.miss = 0, this.caches = [];\n\n        for (var r = 0; r < this.maxKeyLength; r++) this.caches.push([]);\n      }\n\n      return t.prototype.canBeCached = function (t) {\n        return t > 0 && t <= this.maxKeyLength;\n      }, t.prototype.get = function (t, e, r) {\n        var n = this.caches[r - 1],\n            i = n.length;\n\n        t: for (var o = 0; o < i; o++) {\n          for (var s = n[o], a = s.bytes, h = 0; h < r; h++) if (a[h] !== t[e + h]) continue t;\n\n          return s.value;\n        }\n\n        return null;\n      }, t.prototype.store = function (t, e) {\n        var r = this.caches[t.length - 1],\n            n = {\n          bytes: t,\n          value: e\n        };\n        r.length >= this.maxLengthPerKey ? r[Math.random() * r.length | 0] = n : r.push(n);\n      }, t.prototype.decode = function (t, e, r) {\n        var n = this.get(t, e, r);\n        if (null != n) return this.hit++, n;\n        this.miss++;\n        var i = c(t, e, r),\n            o = Uint8Array.prototype.slice.call(t, e, e + r);\n        return this.store(o, i), i;\n      }, t;\n    }(),\n        k = function (t, e, r, n) {\n      return new (r || (r = Promise))(function (i, o) {\n        function s(t) {\n          try {\n            h(n.next(t));\n          } catch (t) {\n            o(t);\n          }\n        }\n\n        function a(t) {\n          try {\n            h(n.throw(t));\n          } catch (t) {\n            o(t);\n          }\n        }\n\n        function h(t) {\n          var e;\n          t.done ? i(t.value) : (e = t.value, e instanceof r ? e : new r(function (t) {\n            t(e);\n          })).then(s, a);\n        }\n\n        h((n = n.apply(t, e || [])).next());\n      });\n    },\n        z = function (t, e) {\n      var r,\n          n,\n          i,\n          o,\n          s = {\n        label: 0,\n        sent: function () {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return o = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () {\n        return this;\n      }), o;\n\n      function a(o) {\n        return function (a) {\n          return function (o) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; s;) try {\n              if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;\n\n              switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {\n                case 0:\n                case 1:\n                  i = o;\n                  break;\n\n                case 4:\n                  return s.label++, {\n                    value: o[1],\n                    done: !1\n                  };\n\n                case 5:\n                  s.label++, n = o[1], o = [0];\n                  continue;\n\n                case 7:\n                  o = s.ops.pop(), s.trys.pop();\n                  continue;\n\n                default:\n                  if (!(i = s.trys, (i = i.length > 0 && i[i.length - 1]) || 6 !== o[0] && 2 !== o[0])) {\n                    s = 0;\n                    continue;\n                  }\n\n                  if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {\n                    s.label = o[1];\n                    break;\n                  }\n\n                  if (6 === o[0] && s.label < i[1]) {\n                    s.label = i[1], i = o;\n                    break;\n                  }\n\n                  if (i && s.label < i[2]) {\n                    s.label = i[2], s.ops.push(o);\n                    break;\n                  }\n\n                  i[2] && s.ops.pop(), s.trys.pop();\n                  continue;\n              }\n\n              o = e.call(t, s);\n            } catch (t) {\n              o = [6, t], n = 0;\n            } finally {\n              r = i = 0;\n            }\n\n            if (5 & o[0]) throw o[1];\n            return {\n              value: o[0] ? o[1] : void 0,\n              done: !0\n            };\n          }([o, a]);\n        };\n      }\n    },\n        D = function (t) {\n      if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n      var e,\n          r = t[Symbol.asyncIterator];\n      return r ? r.call(t) : (t = \"function\" == typeof __values ? __values(t) : t[Symbol.iterator](), e = {}, n(\"next\"), n(\"throw\"), n(\"return\"), e[Symbol.asyncIterator] = function () {\n        return this;\n      }, e);\n\n      function n(r) {\n        e[r] = t[r] && function (e) {\n          return new Promise(function (n, i) {\n            (function (t, e, r, n) {\n              Promise.resolve(n).then(function (e) {\n                t({\n                  value: e,\n                  done: r\n                });\n              }, e);\n            })(n, i, (e = t[r](e)).done, e.value);\n          });\n        };\n      }\n    },\n        N = function (t) {\n      return this instanceof N ? (this.v = t, this) : new N(t);\n    },\n        C = function (t, e, r) {\n      if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n      var n,\n          i = r.apply(t, e || []),\n          o = [];\n      return n = {}, s(\"next\"), s(\"throw\"), s(\"return\"), n[Symbol.asyncIterator] = function () {\n        return this;\n      }, n;\n\n      function s(t) {\n        i[t] && (n[t] = function (e) {\n          return new Promise(function (r, n) {\n            o.push([t, e, r, n]) > 1 || a(t, e);\n          });\n        });\n      }\n\n      function a(t, e) {\n        try {\n          (r = i[t](e)).value instanceof N ? Promise.resolve(r.value.v).then(h, u) : c(o[0][2], r);\n        } catch (t) {\n          c(o[0][3], t);\n        }\n\n        var r;\n      }\n\n      function h(t) {\n        a(\"next\", t);\n      }\n\n      function u(t) {\n        a(\"throw\", t);\n      }\n\n      function c(t, e) {\n        t(e), o.shift(), o.length && a(o[0][0], o[0][1]);\n      }\n    },\n        P = new DataView(new ArrayBuffer(0)),\n        F = new Uint8Array(P.buffer),\n        j = function () {\n      try {\n        P.getInt8(0);\n      } catch (t) {\n        return t.constructor;\n      }\n\n      throw new Error(\"never reached\");\n    }(),\n        _ = new j(\"Insufficient data\"),\n        W = new M(),\n        O = function () {\n      function t(t, e, r, n, i, o, s, a) {\n        void 0 === t && (t = S.defaultCodec), void 0 === e && (e = void 0), void 0 === r && (r = 4294967295), void 0 === n && (n = 4294967295), void 0 === i && (i = 4294967295), void 0 === o && (o = 4294967295), void 0 === s && (s = 4294967295), void 0 === a && (a = W), this.extensionCodec = t, this.context = e, this.maxStrLength = r, this.maxBinLength = n, this.maxArrayLength = i, this.maxMapLength = o, this.maxExtLength = s, this.keyDecoder = a, this.totalPos = 0, this.pos = 0, this.view = P, this.bytes = F, this.headByte = -1, this.stack = [];\n      }\n\n      return t.prototype.reinitializeState = function () {\n        this.totalPos = 0, this.headByte = -1;\n      }, t.prototype.setBuffer = function (t) {\n        this.bytes = B(t), this.view = function (t) {\n          if (t instanceof ArrayBuffer) return new DataView(t);\n          var e = B(t);\n          return new DataView(e.buffer, e.byteOffset, e.byteLength);\n        }(this.bytes), this.pos = 0;\n      }, t.prototype.appendBuffer = function (t) {\n        if (-1 !== this.headByte || this.hasRemaining()) {\n          var e = this.bytes.subarray(this.pos),\n              r = B(t),\n              n = new Uint8Array(e.length + r.length);\n          n.set(e), n.set(r, e.length), this.setBuffer(n);\n        } else this.setBuffer(t);\n      }, t.prototype.hasRemaining = function (t) {\n        return void 0 === t && (t = 1), this.view.byteLength - this.pos >= t;\n      }, t.prototype.createNoExtraBytesError = function (t) {\n        var e = this.view,\n            r = this.pos;\n        return new RangeError(\"Extra \" + (e.byteLength - r) + \" of \" + e.byteLength + \" byte(s) found at buffer[\" + t + \"]\");\n      }, t.prototype.decode = function (t) {\n        return this.reinitializeState(), this.setBuffer(t), this.doDecodeSingleSync();\n      }, t.prototype.doDecodeSingleSync = function () {\n        var t = this.doDecodeSync();\n        if (this.hasRemaining()) throw this.createNoExtraBytesError(this.pos);\n        return t;\n      }, t.prototype.decodeAsync = function (t) {\n        var e, r, n, i;\n        return k(this, void 0, void 0, function () {\n          var o, s, a, h, u, c, f, l;\n          return z(this, function (p) {\n            switch (p.label) {\n              case 0:\n                o = !1, p.label = 1;\n\n              case 1:\n                p.trys.push([1, 6, 7, 12]), e = D(t), p.label = 2;\n\n              case 2:\n                return [4, e.next()];\n\n              case 3:\n                if ((r = p.sent()).done) return [3, 5];\n                if (a = r.value, o) throw this.createNoExtraBytesError(this.totalPos);\n                this.appendBuffer(a);\n\n                try {\n                  s = this.doDecodeSync(), o = !0;\n                } catch (t) {\n                  if (!(t instanceof j)) throw t;\n                }\n\n                this.totalPos += this.pos, p.label = 4;\n\n              case 4:\n                return [3, 2];\n\n              case 5:\n                return [3, 12];\n\n              case 6:\n                return h = p.sent(), n = {\n                  error: h\n                }, [3, 12];\n\n              case 7:\n                return p.trys.push([7,, 10, 11]), r && !r.done && (i = e.return) ? [4, i.call(e)] : [3, 9];\n\n              case 8:\n                p.sent(), p.label = 9;\n\n              case 9:\n                return [3, 11];\n\n              case 10:\n                if (n) throw n.error;\n                return [7];\n\n              case 11:\n                return [7];\n\n              case 12:\n                if (o) {\n                  if (this.hasRemaining()) throw this.createNoExtraBytesError(this.totalPos);\n                  return [2, s];\n                }\n\n                throw c = (u = this).headByte, f = u.pos, l = u.totalPos, new RangeError(\"Insufficient data in parcing \" + L(c) + \" at \" + l + \" (\" + f + \" in the current buffer)\");\n            }\n          });\n        });\n      }, t.prototype.decodeArrayStream = function (t) {\n        return this.decodeMultiAsync(t, !0);\n      }, t.prototype.decodeStream = function (t) {\n        return this.decodeMultiAsync(t, !1);\n      }, t.prototype.decodeMultiAsync = function (t, e) {\n        return C(this, arguments, function () {\n          var r, n, i, o, s, a, h, u, c;\n          return z(this, function (f) {\n            switch (f.label) {\n              case 0:\n                r = e, n = -1, f.label = 1;\n\n              case 1:\n                f.trys.push([1, 13, 14, 19]), i = D(t), f.label = 2;\n\n              case 2:\n                return [4, N(i.next())];\n\n              case 3:\n                if ((o = f.sent()).done) return [3, 12];\n                if (s = o.value, e && 0 === n) throw this.createNoExtraBytesError(this.totalPos);\n                this.appendBuffer(s), r && (n = this.readArraySize(), r = !1, this.complete()), f.label = 4;\n\n              case 4:\n                f.trys.push([4, 9,, 10]), f.label = 5;\n\n              case 5:\n                return [4, N(this.doDecodeSync())];\n\n              case 6:\n                return [4, f.sent()];\n\n              case 7:\n                return f.sent(), 0 == --n ? [3, 8] : [3, 5];\n\n              case 8:\n                return [3, 10];\n\n              case 9:\n                if (!((a = f.sent()) instanceof j)) throw a;\n                return [3, 10];\n\n              case 10:\n                this.totalPos += this.pos, f.label = 11;\n\n              case 11:\n                return [3, 2];\n\n              case 12:\n                return [3, 19];\n\n              case 13:\n                return h = f.sent(), u = {\n                  error: h\n                }, [3, 19];\n\n              case 14:\n                return f.trys.push([14,, 17, 18]), o && !o.done && (c = i.return) ? [4, N(c.call(i))] : [3, 16];\n\n              case 15:\n                f.sent(), f.label = 16;\n\n              case 16:\n                return [3, 18];\n\n              case 17:\n                if (u) throw u.error;\n                return [7];\n\n              case 18:\n                return [7];\n\n              case 19:\n                return [2];\n            }\n          });\n        });\n      }, t.prototype.doDecodeSync = function () {\n        t: for (;;) {\n          var t = this.readHeadByte(),\n              e = void 0;\n          if (t >= 224) e = t - 256;else if (t < 192) {\n            if (t < 128) e = t;else if (t < 144) {\n              if (0 !== (n = t - 128)) {\n                this.pushMapState(n), this.complete();\n                continue t;\n              }\n\n              e = {};\n            } else if (t < 160) {\n              if (0 !== (n = t - 144)) {\n                this.pushArrayState(n), this.complete();\n                continue t;\n              }\n\n              e = [];\n            } else {\n              var r = t - 160;\n              e = this.decodeUtf8String(r, 0);\n            }\n          } else if (192 === t) e = null;else if (194 === t) e = !1;else if (195 === t) e = !0;else if (202 === t) e = this.readF32();else if (203 === t) e = this.readF64();else if (204 === t) e = this.readU8();else if (205 === t) e = this.readU16();else if (206 === t) e = this.readU32();else if (207 === t) e = this.readU64();else if (208 === t) e = this.readI8();else if (209 === t) e = this.readI16();else if (210 === t) e = this.readI32();else if (211 === t) e = this.readI64();else if (217 === t) {\n            r = this.lookU8();\n            e = this.decodeUtf8String(r, 1);\n          } else if (218 === t) {\n            r = this.lookU16();\n            e = this.decodeUtf8String(r, 2);\n          } else if (219 === t) {\n            r = this.lookU32();\n            e = this.decodeUtf8String(r, 4);\n          } else if (220 === t) {\n            if (0 !== (n = this.readU16())) {\n              this.pushArrayState(n), this.complete();\n              continue t;\n            }\n\n            e = [];\n          } else if (221 === t) {\n            if (0 !== (n = this.readU32())) {\n              this.pushArrayState(n), this.complete();\n              continue t;\n            }\n\n            e = [];\n          } else if (222 === t) {\n            if (0 !== (n = this.readU16())) {\n              this.pushMapState(n), this.complete();\n              continue t;\n            }\n\n            e = {};\n          } else if (223 === t) {\n            if (0 !== (n = this.readU32())) {\n              this.pushMapState(n), this.complete();\n              continue t;\n            }\n\n            e = {};\n          } else if (196 === t) {\n            var n = this.lookU8();\n            e = this.decodeBinary(n, 1);\n          } else if (197 === t) {\n            n = this.lookU16();\n            e = this.decodeBinary(n, 2);\n          } else if (198 === t) {\n            n = this.lookU32();\n            e = this.decodeBinary(n, 4);\n          } else if (212 === t) e = this.decodeExtension(1, 0);else if (213 === t) e = this.decodeExtension(2, 0);else if (214 === t) e = this.decodeExtension(4, 0);else if (215 === t) e = this.decodeExtension(8, 0);else if (216 === t) e = this.decodeExtension(16, 0);else if (199 === t) {\n            n = this.lookU8();\n            e = this.decodeExtension(n, 1);\n          } else if (200 === t) {\n            n = this.lookU16();\n            e = this.decodeExtension(n, 2);\n          } else {\n            if (201 !== t) throw new Error(\"Unrecognized type byte: \" + L(t));\n            n = this.lookU32();\n            e = this.decodeExtension(n, 4);\n          }\n          this.complete();\n\n          for (var i = this.stack; i.length > 0;) {\n            var o = i[i.length - 1];\n\n            if (0 === o.type) {\n              if (o.array[o.position] = e, o.position++, o.position !== o.size) continue t;\n              i.pop(), e = o.array;\n            } else {\n              if (1 === o.type) {\n                if (s = void 0, \"string\" !== (s = typeof e) && \"number\" !== s) throw new Error(\"The type of key must be string or number but \" + typeof e);\n                o.key = e, o.type = 2;\n                continue t;\n              }\n\n              if (o.map[o.key] = e, o.readCount++, o.readCount !== o.size) {\n                o.key = null, o.type = 1;\n                continue t;\n              }\n\n              i.pop(), e = o.map;\n            }\n          }\n\n          return e;\n        }\n\n        var s;\n      }, t.prototype.readHeadByte = function () {\n        return -1 === this.headByte && (this.headByte = this.readU8()), this.headByte;\n      }, t.prototype.complete = function () {\n        this.headByte = -1;\n      }, t.prototype.readArraySize = function () {\n        var t = this.readHeadByte();\n\n        switch (t) {\n          case 220:\n            return this.readU16();\n\n          case 221:\n            return this.readU32();\n\n          default:\n            if (t < 160) return t - 144;\n            throw new Error(\"Unrecognized array type byte: \" + L(t));\n        }\n      }, t.prototype.pushMapState = function (t) {\n        if (t > this.maxMapLength) throw new Error(\"Max length exceeded: map length (\" + t + \") > maxMapLengthLength (\" + this.maxMapLength + \")\");\n        this.stack.push({\n          type: 1,\n          size: t,\n          key: null,\n          readCount: 0,\n          map: {}\n        });\n      }, t.prototype.pushArrayState = function (t) {\n        if (t > this.maxArrayLength) throw new Error(\"Max length exceeded: array length (\" + t + \") > maxArrayLength (\" + this.maxArrayLength + \")\");\n        this.stack.push({\n          type: 0,\n          size: t,\n          array: new Array(t),\n          position: 0\n        });\n      }, t.prototype.decodeUtf8String = function (t, e) {\n        var r;\n        if (t > this.maxStrLength) throw new Error(\"Max length exceeded: UTF-8 byte length (\" + t + \") > maxStrLength (\" + this.maxStrLength + \")\");\n        if (this.bytes.byteLength < this.pos + e + t) throw _;\n        var n,\n            i = this.pos + e;\n        return n = this.stateIsMapKey() && (null === (r = this.keyDecoder) || void 0 === r ? void 0 : r.canBeCached(t)) ? this.keyDecoder.decode(this.bytes, i, t) : o && t > l ? function (t, e, r) {\n          var n = t.subarray(e, e + r);\n          return f.decode(n);\n        }(this.bytes, i, t) : c(this.bytes, i, t), this.pos += e + t, n;\n      }, t.prototype.stateIsMapKey = function () {\n        return this.stack.length > 0 && 1 === this.stack[this.stack.length - 1].type;\n      }, t.prototype.decodeBinary = function (t, e) {\n        if (t > this.maxBinLength) throw new Error(\"Max length exceeded: bin length (\" + t + \") > maxBinLength (\" + this.maxBinLength + \")\");\n        if (!this.hasRemaining(t + e)) throw _;\n        var r = this.pos + e,\n            n = this.bytes.subarray(r, r + t);\n        return this.pos += e + t, n;\n      }, t.prototype.decodeExtension = function (t, e) {\n        if (t > this.maxExtLength) throw new Error(\"Max length exceeded: ext length (\" + t + \") > maxExtLength (\" + this.maxExtLength + \")\");\n        var r = this.view.getInt8(this.pos + e),\n            n = this.decodeBinary(t, e + 1);\n        return this.extensionCodec.decode(n, r, this.context);\n      }, t.prototype.lookU8 = function () {\n        return this.view.getUint8(this.pos);\n      }, t.prototype.lookU16 = function () {\n        return this.view.getUint16(this.pos);\n      }, t.prototype.lookU32 = function () {\n        return this.view.getUint32(this.pos);\n      }, t.prototype.readU8 = function () {\n        var t = this.view.getUint8(this.pos);\n        return this.pos++, t;\n      }, t.prototype.readI8 = function () {\n        var t = this.view.getInt8(this.pos);\n        return this.pos++, t;\n      }, t.prototype.readU16 = function () {\n        var t = this.view.getUint16(this.pos);\n        return this.pos += 2, t;\n      }, t.prototype.readI16 = function () {\n        var t = this.view.getInt16(this.pos);\n        return this.pos += 2, t;\n      }, t.prototype.readU32 = function () {\n        var t = this.view.getUint32(this.pos);\n        return this.pos += 4, t;\n      }, t.prototype.readI32 = function () {\n        var t = this.view.getInt32(this.pos);\n        return this.pos += 4, t;\n      }, t.prototype.readU64 = function () {\n        var t,\n            e,\n            r,\n            n,\n            i = (t = this.view, e = this.pos, r = t.getUint32(e), n = t.getUint32(e + 4), r > Math.floor(Number.MAX_SAFE_INTEGER / 4294967296) ? BigInt(r) * BigInt(4294967296) + BigInt(n) : 4294967296 * r + n);\n        return this.pos += 8, i;\n      }, t.prototype.readI64 = function () {\n        var t = y(this.view, this.pos);\n        return this.pos += 8, t;\n      }, t.prototype.readF32 = function () {\n        var t = this.view.getFloat32(this.pos);\n        return this.pos += 4, t;\n      }, t.prototype.readF64 = function () {\n        var t = this.view.getFloat64(this.pos);\n        return this.pos += 8, t;\n      }, t;\n    }(),\n        R = {};\n\n    function V(t, e) {\n      return void 0 === e && (e = R), new O(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decode(t);\n    }\n\n    var K = function (t, e) {\n      var r,\n          n,\n          i,\n          o,\n          s = {\n        label: 0,\n        sent: function () {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return o = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () {\n        return this;\n      }), o;\n\n      function a(o) {\n        return function (a) {\n          return function (o) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; s;) try {\n              if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;\n\n              switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {\n                case 0:\n                case 1:\n                  i = o;\n                  break;\n\n                case 4:\n                  return s.label++, {\n                    value: o[1],\n                    done: !1\n                  };\n\n                case 5:\n                  s.label++, n = o[1], o = [0];\n                  continue;\n\n                case 7:\n                  o = s.ops.pop(), s.trys.pop();\n                  continue;\n\n                default:\n                  if (!(i = s.trys, (i = i.length > 0 && i[i.length - 1]) || 6 !== o[0] && 2 !== o[0])) {\n                    s = 0;\n                    continue;\n                  }\n\n                  if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {\n                    s.label = o[1];\n                    break;\n                  }\n\n                  if (6 === o[0] && s.label < i[1]) {\n                    s.label = i[1], i = o;\n                    break;\n                  }\n\n                  if (i && s.label < i[2]) {\n                    s.label = i[2], s.ops.push(o);\n                    break;\n                  }\n\n                  i[2] && s.ops.pop(), s.trys.pop();\n                  continue;\n              }\n\n              o = e.call(t, s);\n            } catch (t) {\n              o = [6, t], n = 0;\n            } finally {\n              r = i = 0;\n            }\n\n            if (5 & o[0]) throw o[1];\n            return {\n              value: o[0] ? o[1] : void 0,\n              done: !0\n            };\n          }([o, a]);\n        };\n      }\n    },\n        G = function (t) {\n      return this instanceof G ? (this.v = t, this) : new G(t);\n    },\n        H = function (t, e, r) {\n      if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n      var n,\n          i = r.apply(t, e || []),\n          o = [];\n      return n = {}, s(\"next\"), s(\"throw\"), s(\"return\"), n[Symbol.asyncIterator] = function () {\n        return this;\n      }, n;\n\n      function s(t) {\n        i[t] && (n[t] = function (e) {\n          return new Promise(function (r, n) {\n            o.push([t, e, r, n]) > 1 || a(t, e);\n          });\n        });\n      }\n\n      function a(t, e) {\n        try {\n          (r = i[t](e)).value instanceof G ? Promise.resolve(r.value.v).then(h, u) : c(o[0][2], r);\n        } catch (t) {\n          c(o[0][3], t);\n        }\n\n        var r;\n      }\n\n      function h(t) {\n        a(\"next\", t);\n      }\n\n      function u(t) {\n        a(\"throw\", t);\n      }\n\n      function c(t, e) {\n        t(e), o.shift(), o.length && a(o[0][0], o[0][1]);\n      }\n    };\n\n    function X(t) {\n      if (null == t) throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n    }\n\n    function q(t) {\n      return null != t[Symbol.asyncIterator] ? t : function (t) {\n        return H(this, arguments, function () {\n          var e, r, n, i;\n          return K(this, function (o) {\n            switch (o.label) {\n              case 0:\n                e = t.getReader(), o.label = 1;\n\n              case 1:\n                o.trys.push([1,, 9, 10]), o.label = 2;\n\n              case 2:\n                return [4, G(e.read())];\n\n              case 3:\n                return r = o.sent(), n = r.done, i = r.value, n ? [4, G(void 0)] : [3, 5];\n\n              case 4:\n                return [2, o.sent()];\n\n              case 5:\n                return X(i), [4, G(i)];\n\n              case 6:\n                return [4, o.sent()];\n\n              case 7:\n                return o.sent(), [3, 2];\n\n              case 8:\n                return [3, 10];\n\n              case 9:\n                return e.releaseLock(), [7];\n\n              case 10:\n                return [2];\n            }\n          });\n        });\n      }(t);\n    }\n\n    var J = function (t, e, r, n) {\n      return new (r || (r = Promise))(function (i, o) {\n        function s(t) {\n          try {\n            h(n.next(t));\n          } catch (t) {\n            o(t);\n          }\n        }\n\n        function a(t) {\n          try {\n            h(n.throw(t));\n          } catch (t) {\n            o(t);\n          }\n        }\n\n        function h(t) {\n          var e;\n          t.done ? i(t.value) : (e = t.value, e instanceof r ? e : new r(function (t) {\n            t(e);\n          })).then(s, a);\n        }\n\n        h((n = n.apply(t, e || [])).next());\n      });\n    },\n        Q = function (t, e) {\n      var r,\n          n,\n          i,\n          o,\n          s = {\n        label: 0,\n        sent: function () {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return o = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () {\n        return this;\n      }), o;\n\n      function a(o) {\n        return function (a) {\n          return function (o) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; s;) try {\n              if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;\n\n              switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {\n                case 0:\n                case 1:\n                  i = o;\n                  break;\n\n                case 4:\n                  return s.label++, {\n                    value: o[1],\n                    done: !1\n                  };\n\n                case 5:\n                  s.label++, n = o[1], o = [0];\n                  continue;\n\n                case 7:\n                  o = s.ops.pop(), s.trys.pop();\n                  continue;\n\n                default:\n                  if (!(i = s.trys, (i = i.length > 0 && i[i.length - 1]) || 6 !== o[0] && 2 !== o[0])) {\n                    s = 0;\n                    continue;\n                  }\n\n                  if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {\n                    s.label = o[1];\n                    break;\n                  }\n\n                  if (6 === o[0] && s.label < i[1]) {\n                    s.label = i[1], i = o;\n                    break;\n                  }\n\n                  if (i && s.label < i[2]) {\n                    s.label = i[2], s.ops.push(o);\n                    break;\n                  }\n\n                  i[2] && s.ops.pop(), s.trys.pop();\n                  continue;\n              }\n\n              o = e.call(t, s);\n            } catch (t) {\n              o = [6, t], n = 0;\n            } finally {\n              r = i = 0;\n            }\n\n            if (5 & o[0]) throw o[1];\n            return {\n              value: o[0] ? o[1] : void 0,\n              done: !0\n            };\n          }([o, a]);\n        };\n      }\n    };\n\n    function Y(t, e) {\n      return void 0 === e && (e = R), J(this, void 0, void 0, function () {\n        var r;\n        return Q(this, function (n) {\n          return r = q(t), [2, new O(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeAsync(r)];\n        });\n      });\n    }\n\n    function Z(t, e) {\n      void 0 === e && (e = R);\n      var r = q(t);\n      return new O(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeArrayStream(r);\n    }\n\n    function $(t, e) {\n      void 0 === e && (e = R);\n      var r = q(t);\n      return new O(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeStream(r);\n    }\n  }]);\n});","map":{"version":3,"sources":["webpack://MessagePack/webpack/universalModuleDefinition","webpack://MessagePack/webpack/bootstrap","webpack://MessagePack/src/utils/utf8.ts","webpack://MessagePack/src/ExtData.ts","webpack://MessagePack/src/utils/int.ts","webpack://MessagePack/src/timestamp.ts","webpack://MessagePack/src/ExtensionCodec.ts","webpack://MessagePack/src/utils/typedArrays.ts","webpack://MessagePack/src/Encoder.ts","webpack://MessagePack/src/encode.ts","webpack://MessagePack/src/utils/prettyByte.ts","webpack://MessagePack/src/CachedKeyDecoder.ts","webpack://MessagePack/src/Decoder.ts","webpack://MessagePack/src/decode.ts","webpack://MessagePack/src/utils/stream.ts","webpack://MessagePack/src/decodeAsync.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TEXT_ENCODING_AVAILABLE","process","TextEncoder","TextDecoder","utf8Count","str","strLength","length","byteLength","pos","charCodeAt","extra","output","outputOffset","offset","sharedTextEncoder","undefined","TEXT_ENCODER_THRESHOLD","set","encode","encodeInto","subarray","utf8EncodeTE","utf8DecodeJs","bytes","inputOffset","end","units","result","byte1","push","byte2","byte3","unit","String","fromCharCode","sharedTextDecoder","TEXT_DECODER_THRESHOLD","stringBytes","decode","type","data","view","high","low","setUint32","setInt64","Math","floor","Number","BigInt","getInt64","getInt32","getUint32","exceeds_min_safe_int","MIN_SAFE_INTEGER","exceeds_max_safe_int","MAX_SAFE_INTEGER","EXT_TIMESTAMP","encodeTimeSpecToTimestamp","sec","nsec","rv","Uint8Array","DataView","buffer","secHigh","secLow","encodeDateToTimeSpec","date","msec","getTime","nsecInSec","encodeTimestampExtension","Date","decodeTimestampToTimeSpec","byteOffset","nsec30AndSecHigh2","Error","decodeTimestampExtension","timeSpec","timestampExtension","ExtensionCodec","register","encoders","decoders","index","builtInEncoders","builtInDecoders","context","encoder","ExtData","decoder","ensureUint8Array","ArrayBuffer","isView","from","bufferView","initialBufferSize","extensionCodec","defaultCodec","maxDepth","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","reinitializeState","doEncode","getUint8Array","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodebigint","encodeObject","sizeToWrite","requiredSize","resizeBuffer","newSize","newBuffer","newBytes","newView","writeU8","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeBig64","ensureBufferSizeToWrite","writeStringHeader","utf8EncodeJs","ext","tryToEncode","encodeExtension","Array","isArray","encodeArray","encodeBinary","encodeMap","toString","apply","size","writeU8a","item","keys","count","sort","countWithoutUndefined","setUint8","values","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","setUint64","setBigInt64","defaultEncodeOptions","options","prettyByte","byte","abs","padStart","maxKeyLength","maxLengthPerKey","caches","records","recordsLength","FIND_CHUNK","record","recordBytes","j","random","cachedValue","hit","miss","slicedCopyOfBytes","slice","store","keyType","EMPTY_VIEW","EMPTY_BYTES","DataViewIndexOutOfBoundsError","getInt8","e","constructor","MORE_DATA","sharedCachedKeyDecoder","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","createDataView","hasRemaining","setBuffer","remainingData","newData","concated","posToShow","RangeError","doDecodeSingleSync","doDecodeSync","createNoExtraBytesError","stream","decoded","appendBuffer","decodeMultiAsync","isArrayHeaderRequired","arrayItemsLeft","readArraySize","complete","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","stack","state","array","position","pop","map","readCount","headerOffset","stateIsMapKey","canBeCached","utf8DecodeTD","headOffset","extType","getUint8","getUint16","getInt16","getFloat32","getFloat64","defaultDecodeOptions","asyncIterator","assertNonNull","reader","getReader","done","read","releaseLock","ensureAsyncIterabe","streamLike","asyncIterableFromStream","decodeAsync","decodeArrayStream","decodeStream"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MessagePack\"] = factory();\n\telse\n\t\troot[\"MessagePack\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const TEXT_ENCODING_AVAILABLE =\n  typeof process !== \"undefined\" &&\n  process.env.TEXT_ENCODING !== \"never\" &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_ENCODING !== \"force\" ? 200 : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      const byte4 = bytes[offset++] & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_DECODER !== \"force\" ? 200 : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return sharedTextDecoder!.decode(stringBytes);\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n","// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setBigInt64(view: DataView, offset: number, value: bigint): void {\n  let high = Number(value / BigInt(0x1_0000_0000));\n  const low = Number(value % BigInt(0x1_0000_0000));\n  if (high < 0 && low !== 0) {\n    // simulate Math.floor for negative high\n    high -= 1;\n  }\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number) {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_min_safe_int =\n    high < Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) ||\n    (high === Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) && low === 0);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_min_safe_int || exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number) {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4) as number;\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new Error(`Unrecognized data size for timestamp: ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interfce to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encoder = this.builtInEncoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encoder = this.encoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decoder = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decoder) {\n      return decoder(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n","import { utf8EncodeJs, utf8Count, TEXT_ENCODING_AVAILABLE, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64, setBigInt64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private getUint8Array(): Uint8Array {\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.getUint8Array();\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else if (typeof object === \"bigint\") {\n      this.encodebigint(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // nagative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private encodebigint(object: bigint) {\n    if (object >= BigInt(0)) {\n      if (object < BigInt(0x80)) {\n        // positive fixint\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x100)) {\n        // uint 8\n        this.writeU8(0xcc);\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x10000)) {\n        // uint 16\n        this.writeU8(0xcd);\n        this.writeU16(Number(object));\n      } else if (object < BigInt(0x100000000)) {\n        // uint 32\n        this.writeU8(0xce);\n        this.writeU32(Number(object));\n      } else {\n        // uint 64\n        this.writeU8(0xcf);\n        this.writeBig64(object);\n      }\n    } else {\n      if (object >= BigInt(-0x20)) {\n        // nagative fixint\n        this.writeU8(0xe0 | (Number(object) + 0x20));\n      } else if (object >= BigInt(-0x80)) {\n        // int 8\n        this.writeU8(0xd0);\n        this.writeI8(Number(object));\n      } else if (object >= BigInt(-0x8000)) {\n        // int 16\n        this.writeU8(0xd1);\n        this.writeI16(Number(object));\n      } else if (object >= BigInt(-0x80000000)) {\n        // int 32\n        this.writeU8(0xd2);\n        this.writeI32(Number(object));\n      } else {\n        // int 64\n        this.writeU8(0xd3);\n        this.writeBig64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (TEXT_ENCODING_AVAILABLE && strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBig64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    setBigInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Encoder } from \"./Encoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n    maxDepth: number;\n    initialBufferSize: number;\n    sortKeys: boolean;\n\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * The default is `false`. Note that it needs more time to encode.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point,\n     * with the `forceFloat32` option taken into account.\n     *\n     * The default is `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encode(value);\n}\n","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","import { utf8DecodeJs } from \"./utils/utf8\";\n\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly value: string;\n}\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)` to create a non-sparse array for performance.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number) {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private get(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1];\n    const recordsLength = records.length;\n\n    FIND_CHUNK: for (let i = 0; i < recordsLength; i++) {\n      const record = records[i];\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.value;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1];\n    const record: KeyCacheRecord = { bytes, value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to a randomized position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.get(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const value = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, value);\n    return value;\n  }\n}\n","import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64 } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_ENCODING_AVAILABLE, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst DEFAULT_MAX_LENGTH = 0xffff_ffff; // uint32_max\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = DEFAULT_MAX_LENGTH,\n    private readonly maxBinLength = DEFAULT_MAX_LENGTH,\n    private readonly maxArrayLength = DEFAULT_MAX_LENGTH,\n    private readonly maxMapLength = DEFAULT_MAX_LENGTH,\n    private readonly maxExtLength = DEFAULT_MAX_LENGTH,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | ArrayBuffer): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number>) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining()) {\n      this.setBuffer(buffer);\n    } else {\n      // retried because data is insufficient\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n      const concated = new Uint8Array(remainingData.length + newData.length);\n      concated.set(remainingData);\n      concated.set(newData, remainingData.length);\n      this.setBuffer(concated);\n    }\n  }\n\n  private hasRemaining(size = 1) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createNoExtraBytesError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  public decode(buffer: ArrayLike<number> | ArrayBuffer): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n    return this.doDecodeSingleSync();\n  }\n\n  private doDecodeSingleSync(): unknown {\n    const object = this.doDecodeSync();\n    if (this.hasRemaining()) {\n      throw this.createNoExtraBytesError(this.pos);\n    }\n    return object;\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number>>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining()) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parcing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number>>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new Error(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1];\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new Error(\"The type of key must be string or number but \" + typeof object);\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new Error(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new Error(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new Error(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new Error(`Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`);\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (TEXT_ENCODING_AVAILABLE && byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1];\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new Error(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new Error(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): bigint | number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): bigint | number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Decoder } from \"./Decoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a MessagePack-encoded buffer.\n *\n * This is a synchronous decoding function. See other variants for asynchronous decoding: `decodeAsync()`, `decodeStream()`, `decodeArrayStream()`.\n */\nexport function decode<ContextType>(\n  buffer: ArrayLike<number> | ArrayBuffer,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterabe<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","import { Decoder } from \"./Decoder\";\nimport { defaultDecodeOptions, DecodeOptions } from \"./decode\";\nimport { ensureAsyncIterabe, ReadableStreamLike } from \"./utils/stream\";\nimport { SplitUndefined } from \"./context\";\n\nexport async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\nexport function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}