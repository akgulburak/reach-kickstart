{"ast":null,"code":"const chalk = require('chalk');\n\nfunction starting({\n  host,\n  port\n}) {\n  process.stdout.write(`Waiting for ${host}:${port}`);\n}\n\nfunction tryConnect() {\n  process.stdout.write('.');\n}\n\nfunction connected() {\n  console.log(chalk.green('\\nConnected!'));\n}\n\nfunction timeout() {\n  console.log(chalk.red('\\nTimeout'));\n}\n\nfunction error(err) {\n  process.stdout.write(chalk.red(` error: ${err}.`));\n}\n\nmodule.exports = {\n  starting,\n  tryConnect,\n  connected,\n  timeout,\n  error\n};","map":{"version":3,"sources":["/home/x/reach/kick/github/node_modules/wait-port/lib/output-functions/dots.js"],"names":["chalk","require","starting","host","port","process","stdout","write","tryConnect","connected","console","log","green","timeout","red","error","err","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAkC;AAChCC,EAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,eAAcJ,IAAK,IAAGC,IAAK,EAAjD;AACD;;AAED,SAASI,UAAT,GAAsB;AACpBH,EAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,GAArB;AACD;;AAED,SAASE,SAAT,GAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,KAAN,CAAY,cAAZ,CAAZ;AACD;;AAED,SAASC,OAAT,GAAmB;AACjBH,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACc,GAAN,CAAU,WAAV,CAAZ;AACD;;AAED,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClBX,EAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBP,KAAK,CAACc,GAAN,CAAW,WAAUE,GAAI,GAAzB,CAArB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,QADe;AAEfM,EAAAA,UAFe;AAGfC,EAAAA,SAHe;AAIfI,EAAAA,OAJe;AAKfE,EAAAA;AALe,CAAjB","sourcesContent":["const chalk = require('chalk');\n\nfunction starting({ host, port }) {\n  process.stdout.write(`Waiting for ${host}:${port}`);\n}\n\nfunction tryConnect() {\n  process.stdout.write('.');\n}\n\nfunction connected() {\n  console.log(chalk.green('\\nConnected!'));\n}\n\nfunction timeout() {\n  console.log(chalk.red('\\nTimeout'));\n}\n\nfunction error(err) {\n  process.stdout.write(chalk.red(` error: ${err}.`));\n}\n\nmodule.exports = {\n  starting,\n  tryConnect,\n  connected,\n  timeout,\n  error\n};\n"]},"metadata":{},"sourceType":"script"}