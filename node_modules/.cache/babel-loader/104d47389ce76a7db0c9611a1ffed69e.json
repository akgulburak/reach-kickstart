{"ast":null,"code":"var _jsxFileName = \"/home/x/reach/kick/app/reach-react-template/src/components/participants/Voter.js\";\nimport { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\nimport { Context } from \"../../Context\";\nimport VoterViews from \"./VoterViews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Voter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: \"\",\n      args: [],\n\n      /* Resolves */\n      resshouldBuyTicket: null,\n      resgetTitles: null,\n      resshouldPay: null\n    }; // Bind functions\n\n    this.shouldBuyTicketExt = this.shouldBuyTicketExt.bind(this);\n    this.getTitlesExt = this.getTitlesExt.bind(this);\n    this.shouldPayExt = this.shouldPayExt.bind(this);\n  }\n\n  componentDidMount() {\n    const [,,,,,, ctc,,] = this.context; // Parayı her 50 saniyede güncellemesi\n\n    this.interval = setInterval(async () => await this.updateBalance(), 1000); // Kontrat argümanları\n    // Reach'a bağlan\n\n    Backend.Voter(ctc[0], this);\n  }\n\n  async updateBalance() {\n    const [account,,, setBalance] = this.context;\n    const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n    setBalance(balance);\n  }\n\n  async shouldPay() {\n    const response = await new Promise(res => {\n      this.setState({\n        appState: \"shouldPay\",\n        resshouldPay: res\n      });\n    });\n    return true;\n  }\n\n  async shouldBuyTicket(titles) {\n    const response = await new Promise(res => {\n      this.setState({\n        appState: \"shouldBuyTicket\",\n        args: [titles],\n        resshouldBuyTicket: res\n      });\n    });\n    return [response.index, response.donation];\n  }\n\n  async getTitles() {\n    const response = await new Promise(res => {\n      this.setState({\n        appState: \"getTitles\",\n        resgetTitles: res\n      });\n    });\n    return true;\n  }\n\n  shouldBuyTicketExt(response) {\n    this.state.resshouldBuyTicket(response);\n  }\n\n  getTitlesExt(response) {\n    this.state.resgetTitles(response);\n  }\n\n  shouldPayExt(response) {\n    this.state.resshouldPay(response);\n  }\n\n  async showOutcome(address) {\n    this.setState({\n      appState: \"showOutcome\",\n      args: [address]\n    });\n  }\n\n  async showPurchase(address) {\n    this.setState({\n      appState: \"showPurchase\",\n      args: [address]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(VoterViews, {\n      appState: this.state.appState,\n      args: this.state.args\n      /* Resolves */\n      ,\n      shouldBuyTicketReady: this.state.resshouldBuyTicket !== null,\n      shouldBuyTicket: this.shouldBuyTicketExt,\n      getTitlesReady: this.state.resgetTitles !== null,\n      getTitles: this.getTitlesExt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nVoter.contextType = Context;","map":{"version":3,"sources":["/home/x/reach/kick/app/reach-react-template/src/components/participants/Voter.js"],"names":["Component","Backend","Reach","Context","VoterViews","Voter","constructor","props","state","appState","args","resshouldBuyTicket","resgetTitles","resshouldPay","shouldBuyTicketExt","bind","getTitlesExt","shouldPayExt","componentDidMount","ctc","context","interval","setInterval","updateBalance","account","setBalance","balance","formatCurrency","balanceOf","shouldPay","response","Promise","res","setState","shouldBuyTicket","titles","index","donation","getTitles","showOutcome","address","showPurchase","render","contextType"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport * as Reach from \"@reach-sh/stdlib/ALGO\";\n\nimport { Context } from \"../../Context\";\nimport VoterViews from \"./VoterViews\";\n\nexport class Voter extends Component {\n    static contextType = Context;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            appState: \"\",\n            args: [],\n            /* Resolves */\n            resshouldBuyTicket: null,\n            resgetTitles: null,\n            resshouldPay: null,\n        }\n\n        // Bind functions\n        this.shouldBuyTicketExt = this.shouldBuyTicketExt.bind(this);\n        this.getTitlesExt = this.getTitlesExt.bind(this);\n        this.shouldPayExt = this.shouldPayExt.bind(this);\n    }\n\n    componentDidMount() {\n        const [, , , , , , ctc, , ] = this.context;\n\n        // Parayı her 50 saniyede güncellemesi\n        this.interval = setInterval(async () => await this.updateBalance(), 1000);\n\n        // Kontrat argümanları\n\n        // Reach'a bağlan\n        Backend.Voter(ctc[0], this);\n    }\n\n    async updateBalance() {\n        const [account, , , setBalance] = this.context;\n\n        const balance = Reach.formatCurrency(await Reach.balanceOf(account), 4);\n        setBalance(balance);\n    }\n\n    async shouldPay() {\n        const response = await new Promise(res => {\n            this.setState({\n                appState: \"shouldPay\",\n                resshouldPay: res\n            });\n        });\n\n        return true;\n    }\n\n    async shouldBuyTicket(titles) {\n        const response = await new Promise(res => {\n            this.setState({\n                appState: \"shouldBuyTicket\",\n                args: [titles],\n                resshouldBuyTicket: res\n            });\n        });\n\n        return [response.index,response.donation];\n    }\n\n    async getTitles() {\n        const response = await new Promise(res => {\n            this.setState({\n                appState: \"getTitles\",\n                resgetTitles: res\n            });\n        });\n\n        return true;\n    }\n\n    shouldBuyTicketExt(response) {\n        this.state.resshouldBuyTicket(response);\n    }\n    getTitlesExt(response) {\n        this.state.resgetTitles(response);\n    }\n    shouldPayExt(response) {\n        this.state.resshouldPay(response);\n    }\n\n    async showOutcome(address) {\n        this.setState({\n            appState: \"showOutcome\",\n            args: [address]\n        });\n    }\n\n    async showPurchase(address) {\n        this.setState({\n            appState: \"showPurchase\",\n            args: [address]\n        });\n    }\n\n    render() {\n        return (<VoterViews\n            appState={this.state.appState}\n            args={this.state.args}\n            /* Resolves */\n            shouldBuyTicketReady={this.state.resshouldBuyTicket !== null}\n            shouldBuyTicket={this.shouldBuyTicketExt} \n            getTitlesReady={this.state.resgetTitles !== null}\n            getTitles={this.getTitlesExt} \n            />);\n        }\n}"]},"metadata":{},"sourceType":"module"}